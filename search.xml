<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>网络管理基础知识学习（二）</title>
    <url>/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h3 id="第二课时：抽象语法表示"><a href="#第二课时：抽象语法表示" class="headerlink" title="第二课时：抽象语法表示"></a><strong>第二课时：抽象语法表示</strong></h3><p><strong>一、学习速览</strong></p>
<ul>
<li>数据表示</li>
<li>ASN.1语法</li>
<li>ASN.1基本编码规则BER</li>
<li>宏定义</li>
</ul>
<p><strong>二、抽象语法表示的两个概念</strong></p>
<p><strong>（一）抽象语法表示ASN.1</strong></p>
<ul>
<li>Abstract Syntax Notation(ASN.1)是一种形式语言。</li>
<li>提供统一的网络数据表示，用于定义应用数据的抽象语法和应用协议数据单元的结构。</li>
<li>OSI或SNMP管理信息库，都是用ASN.1定义的。</li>
</ul>
<p><strong>（二）基本编码规则BER</strong></p>
<ul>
<li>Basic Encoding Rule（BER）是一种编码规则。</li>
<li>用ASN.1定义的应用数据在传送过程中按照BER变换成比特串。</li>
</ul>
<a id="more"></a>

<p><strong>三、网络数据表示</strong></p>
<p><strong>（一）数据具有<code>语法</code>和<code>语义</code>两个方面</strong></p>
<ul>
<li>语法：指数据的表示形式，或者说构成数据的规则。 </li>
<li>语义：指数据的内容及其含义。 </li>
<li>同样的语义有不同的语法表示。</li>
</ul>
<p><strong>（二）数据表示的一般步骤</strong></p>
<ul>
<li>确定要表示信息的数据类型。</li>
<li>对于不同类型的数据定义不同的操作。</li>
<li>任何类型的数据最终都将被表示成为<code>比特序列</code>。</li>
</ul>
<p><code>备注</code>：<code>比特序列</code>不能说明它自身表示哪一种类型的数据，它所代表的意义会因计算机体系结构、程序设计语言等因素的不同而不同。</p>
<p><strong>（三）网络数据的表示格式</strong></p>
<p><strong>1、不同计算机系统的数据表示格式不同</strong></p>
<p>（1）<code>原因</code></p>
<p>网络中不同类型的计算机交互通信时，采用的 “语法”不同，这种差异决定了同一数据对象在不同计算机中被表示为不同的比特序列。</p>
<p>（2）<code>示例</code></p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/001.jpg" alt></p>
<p><strong>2、需要统一的网络数据表示格式</strong></p>
<p>（1）<code>原因</code></p>
<ul>
<li>为了保证同一数据对象在不同计算机中语义的正确性，实现在不同应用系统之间的信息交换。</li>
<li>对于网络中n个异体的节点能互通，我们需要为每个节点编写(n-1)个编解码程序，即需要总数为n*(n-1)个编解码程序。</li>
</ul>
<p><strong>（四）表示层</strong></p>
<p><strong>1、表示层的作用</strong></p>
<p>（1）<code>具体作用</code></p>
<ul>
<li><p>为了保证同一数据对象在不同计算机中语义的正确性，实现在不同应用系统之间的信息交换。两个系统在传输数据前需要协商共用的编码方式。<code>表示层负责在两个应用系统间进行编码协商和实际信息编码</code>。</p>
</li>
<li><p>可以实现从通信线路上所用的外部数据格式到接收计算机所用的内部数据格式的转换。</p>
</li>
</ul>
<p>（2）<code>实现过程</code>：</p>
<ul>
<li>在ASN.1中为每个应用所需的所有数据结构类型下了定义,并将它们组成库；</li>
<li>当一个应用想发送一个数据结构时，可以将数据结构与其对应的ASN.1标识一起传给表示层；</li>
<li>以ASN.1定义作为索引，表示层便知道数据结构的域的类型及大小，从而对它们编码传输；</li>
<li>在另一端，接收表示层查看此数据结构的ASN.1 标识，从而了解数据结构的域的类型及大小；</li>
<li>表示层这样就可以实现从通信线路上所用的外部数据格式到接收计算机所用的内部数据格式的转换。</li>
</ul>
<p>（3）<code>示意图</code></p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/002.jpg" alt></p>
<p><strong>2、表示层的基本概念</strong></p>
<p>（1）<code>抽象语法</code>(Abstract Syntax )</p>
<p>数据类型的ASN.1描述称为抽象语法。定义了数据的常用结构（包括不同的数据类型），独立于任何编码技术的，只与应用有关。 </p>
<p>（2）<code>传输语法</code>(Transfer Syntax)</p>
<p>提供从抽象语法表示的数据到比特序列，以及其相反操作的方法。 </p>
<p>（3）<code>编码规则</code>(Encoding Rule)</p>
<p>提供了如何将抽象语法映射为传输语法。</p>
<p><strong>（五）其他规则和概念</strong></p>
<p>1、在互相通信的端系统中至少有一个<code>应用实体</code>（如SNMP、TELNET、 FTP等）和一个<code>表示实体</code>（即ASN.1）。</p>
<p>2、<code>表示实体</code>：定义了应用数据的抽象语法；对应用层数据进行编码，将其转换成二进制的比特串进行传送。</p>
<p>3、<code>应用协议</code>：按照预先定义的抽象语法构造协议数据单元，用于交换信息。</p>
<p>4、 <code>传输语法</code>：是数据在传输过程中的实际表示，通常为字节流。因此，提供从抽象语法表示的数据到比特序列，以及其相反操作的方法。</p>
<p>6、关于信息表示的<code>通信系统模型</code>:</p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/003.jpg" alt></p>
<p><code>备注</code>：<code>ASN.1</code>其实是高层表示方法；<code>Ber</code>相当于一种编码算法。</p>
<p><strong>三、ASN.1语法</strong></p>
<p><strong>（一）ASN.1语法的概述和相关概念</strong></p>
<p><strong>1、ASN.1的由来</strong></p>
<p>（1）ASN.1是由原CCITT和ISO共同开发的标准语言，可在系统间进行数据的传输。</p>
<p>（2）表示、编码、传输和解码数据结构的关键，是要有一种足够灵活的、适应各种类型应用的标准数据结构描写方法。为此，OSI中提出了一种标记法，叫做抽象语法标记1，简称为<code>ASN.1</code>。发送时将ASN.1数据结构编码成位流，这种位流的格式叫做<code>抽象语法</code>。</p>
<p><strong>2、ASN.1语法的作用</strong></p>
<p>（1）<code>示意图</code></p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/004.jpg" alt></p>
<p>（2）<code>表示上下文</code></p>
<ul>
<li><code>传输语法</code>与<code>抽象语法</code>之间是<code>多——多对应关系</code>，即一种传输语法可用于多种抽象语法的数据传输，而一种抽象语法的数据值也可用多种传输语法来传输。</li>
<li>每个应用层协议中的抽象语法与一个能对其进行编码的传输语法的组合,就构成一个<code>表示上下文</code>(PRESentation Context)。</li>
<li>表示上下文可以在表示连接建立时协商确定，也可以在通信过程中重新定义。</li>
<li>表示层提供定义表示上下文的设施。 </li>
</ul>
<p><strong>3、ASN.1的文本约定</strong></p>
<p>（1）多个空格和空行等效于一个<code>空格</code>。<br>（2）用于表示值和字段的标识符、类型指针和模块名由大小写字母、 数字和短线组成。<br>（3）<code>标识符</code>以小写字母开头。<br>（4）<code>类型指针和模块名</code>以大写字母开头。<br>（5）ASN.1定义的<code>内部类型</code>全部用大写字母表示。<br>（6）<code>关键字</code>全部用大写字母表示。<br>（7）<code>注释</code>以一对短线<code>--</code>开始，以一对<code>短线或行尾</code>结束。</p>
<p><strong>4、ASN.1符号</strong></p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/005.jpg" alt></p>
<p><strong>5、常用的ASN.1关键字</strong></p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/006.jpg" alt></p>
<p><strong>（二）ASN.1学习引入</strong></p>
<p><strong>1、ASN.1的两个根本问题</strong></p>
<ul>
<li>数据类型</li>
<li>编码规则：<code>基本编码规则（Basic Encoding Rules ，BER）</code></li>
</ul>
<p><strong>2、示例</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struct Student  &#x2F;&#x2F;声明一个结构体类型Student </span><br><span class="line">&#123;</span><br><span class="line">    int num;</span><br><span class="line">    char name[20]; </span><br><span class="line">    char sex; </span><br><span class="line">    int age; </span><br><span class="line">    float score; </span><br><span class="line">    char address[30]; </span><br><span class="line">&#125;; </span><br><span class="line">学生的学号、姓名、性别、年龄、成绩、家庭地址</span><br><span class="line"></span><br><span class="line">Student ::&#x3D; SEQUENCE &#123; </span><br><span class="line">    num INTEGER, </span><br><span class="line">    name  OCTET STRING, </span><br><span class="line">    age INTEGER, </span><br><span class="line">    score  REAL, </span><br><span class="line">    address  OCTET STRING, </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>3、C语言的数据类型</strong></p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/007.jpg" alt></p>
<p><strong>（三）抽象数据类型</strong></p>
<p><strong>1、标签</strong></p>
<p>（1）在ASN.1中，每一个数据类型都有一个<code>标签(tag)</code>。标签有<code>类型和值</code>，数据类型由标签的类型和值唯一确定。</p>
<p>（2）<code>标签的类型</code>分为以下4种：</p>
<ul>
<li><code>通用标签</code>：UNIVERSAL表示，由标准定义的。</li>
<li><code>应用标签</code>：APPLICATION表示，是由某个具体应用定义的类型。</li>
<li><code>上下文专用标签</code>：Context-Specific表示，这种标签在一定范围中适用。</li>
<li><code>私有标签</code>：PRIVATE表示，用户定义的标签。</li>
</ul>
<p><strong>2、ANSI.1定义的数据类型</strong></p>
<p>ANSI.1定义的数据类型有20多种，标签类型都是<code>UNIVERSA</code>，如下图所示：</p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/008.jpg" alt></p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/009.jpg" alt></p>
<p><strong>3、数据类型的分类：可分为4大类</strong></p>
<ul>
<li><code>简单类型</code>：由单一成分构成的原子类型，包括INTEGER，BOOLEAN，… </li>
<li><code>构造类型</code>：由两种以上成分构成的构造类型，包括SEQUENCE， SEQUENCE OF,… </li>
<li><code>标签类型</code>：由已知类型定义的新类型。 </li>
<li><code>其他类型</code>：包括CHOICE和ANY两种类型。</li>
</ul>
<p><strong>4、简单类型</strong></p>
<p>（1）<code>INTEGER</code></p>
<ul>
<li><code>例2.1</code>：Number ：：=INTEGER</li>
</ul>
<p>（2）<code>BOOLEAN</code></p>
<ul>
<li><code>例2.2</code>：Married ：：=BOOLEAN </li>
</ul>
<p>（3）<code>REAL</code>：<code>实数类型</code>，对精度没有限制。</p>
<ul>
<li>可以表示为科学计数法： <code>M×BE</code>，其中尾数M和指数E可以取任何正或负整数值，基数B可以取2或10。 </li>
</ul>
<p>（4）<code>ENUMERATED</code>：<code>枚举类型</code>，实际上是一组个数有限的整数值。</p>
<ul>
<li><p>可以给每个整型值赋予不同的意义。</p>
</li>
<li><p><code>例2.3</code>：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Week ：：&#x3D;ENUMERATED &#123;</span><br><span class="line">    Monday     （1），</span><br><span class="line">    Tuesday     （2），</span><br><span class="line">    Wednesday  （3），</span><br><span class="line">    Thursday    （4），    </span><br><span class="line">    Friday      （5），</span><br><span class="line">    Saturday    （6），</span><br><span class="line">    Sunday     （7） &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>例2.4</code>：对于SNMP的MIB中，在获取响应信息中的错误状态如下所示</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ErrorStatus：：&#x3D; ENUMERATED &#123;</span><br><span class="line">            noError        (0)，</span><br><span class="line">            tooBig        (1)，</span><br><span class="line">            noSuchname   (2)，</span><br><span class="line">            badValues     (3)，</span><br><span class="line">            readOnly     (4)，</span><br><span class="line">            genError     (5)   &#125;</span><br></pre></td></tr></table></figure>

<p>（5）<code>BIT STRING</code>：<code>位串类型</code>，由0个或多个比特组成的有序位串。</p>
<ul>
<li>位串的值可以由对应的二进制或十六进制串表示。</li>
<li>例如：10100010B或A2H 都是位串类型的有效数值。</li>
</ul>
<p>（6）<code>OCTET STRING</code>：<code>八位位组串</code>，由0个或多个8位位组组成的有序串。</p>
<ul>
<li>和位串类型一样，八位位组串也可以用对应的二进制或十六进制串表示。</li>
</ul>
<p>（7）<code>OBJECT IDENTIFIER</code>：<code>对象标识符</code>，从对象树派生出的一系列点分数字串的形式，用来标识对象。 </p>
<ul>
<li>在ASN.1中对象集合按照树形结构组织，树的每个分支被赋予一个整数标识。</li>
<li>对象标识符是从根节点开始到对象节点路径上边标识的顺序连接，它是<code>对象的唯一标识</code>。</li>
<li>根节点以下有3个节点，分别是<code>ccitt（0）</code>，<code>iso（1）</code>，<code>joint-isoccitt（2）</code>，它们向下又可细分，如iso的子节点包括standard （0），registration-authority(1)，member-body（2），org（3）。 </li>
<li>其中org（3）下面的子节点internet就定义了<code>最常使用的管理对象</code>。</li>
<li><code>例2.5</code>：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">internet  OBJECT IDENTIFIER ：：&#x3D; &#123; </span><br><span class="line">                    iso（1）</span><br><span class="line">                    org（3）</span><br><span class="line">                    dod（6）</span><br><span class="line">                    1 &#125;</span><br><span class="line">对象标识符的值是1.3.6.1</span><br><span class="line">iso.org.dod.1</span><br></pre></td></tr></table></figure>

<p>（8）<code>NULL</code>：空值类型。</p>
<ul>
<li>它仅包含一个值：NULL，主要用于<code>位置的填充</code>。</li>
<li>如果某个时刻无法得知数据的准确值，简单的方法就是将这一数据定义为NULL类型。</li>
<li>还可以用NULL表示序列中可能缺省的某个元素。</li>
</ul>
<p>（9）<code>CHARACTER STRING</code>：字符串类型。</p>
<ul>
<li>ASN.1中定义了一些字符集不完全相同的CHARACTER STRING类型，不同类型包含的字符集不同。</li>
<li>标准ASCII字符可以分为<code>G集</code>（图形符号集，ASCII字符编号范围是33～126）和<code>C集</code>（控制符号集，ASCII字符编号范围是0～31）。空格符（编号32）和删除符（编号127）同时属于两个符号集。</li>
</ul>
<p><strong>5．构造类型</strong></p>
<p>构造类型有<code>序列</code>和<code>集合</code>两种：</p>
<ul>
<li>分别用<code>SEQUENCE</code>和<code>SEQUENCE OF</code>表示不同类型和相同类型元素的序列。</li>
<li>分别用<code>SET</code>和<code>SET OF</code>表示不同类型和相同类型元素的集合。</li>
<li>序列和集合的区别是前者的元素是有序的，而后者是无序的。</li>
</ul>
<p>（1）<code>SEQUENCE</code>，序列类型，是包含0个或多个组成元素的有序列表。</p>
<ul>
<li>列表的不同元素可以分属于不同的数据类型。每个元素由元素名和元素类型组成，元素类型可以是简单类型，也可以是定义的其他构造类型。</li>
<li>元素类型标识符后可以跟<code>OPTIONAL</code>或<code>DEFAULT</code>。</li>
<li>OPTIONAL表示在构造类型的赋值过程中，该元素可以出现，也可以不出现。</li>
<li>DEFAULT表示在构造类型的赋值过程中，该元素没有指定值时的缺省值。</li>
<li><code>COMPONENTS OF</code>表示将另一个类型的成员插入到当前类型中。</li>
<li><code>例2.6</code>如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AirlineFlight ：：&#x3D;SEQUENCE &#123; </span><br><span class="line">    airline	IA5STRING， </span><br><span class="line">    flight	IA5STRING， </span><br><span class="line">    seats	SEQUENCE &#123;</span><br><span class="line">        maximum INTEGER， </span><br><span class="line">        occupied INTEGER， </span><br><span class="line">        vacant INTEGER，</span><br><span class="line">            &#125;， </span><br><span class="line">    airport SEQUENCE &#123; </span><br><span class="line">        origin IA5STRING， </span><br><span class="line">        stop[0] IA5STRING OPTIONAL， </span><br><span class="line">        stop[1] IA5STRING OPTIONAL， </span><br><span class="line">        destination IA5STRING</span><br><span class="line">            &#125;， </span><br><span class="line">    crewsize ENUMERTAED &#123; </span><br><span class="line">        six (6)， </span><br><span class="line">        eight (8)， </span><br><span class="line">        ten (10)&#125;，</span><br><span class="line">    cancel BOOLEAN DEFAULT FALSE</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">它的一个实例是：</span><br><span class="line"></span><br><span class="line">airplane1 AirlineFlight ：：&#x3D;&#123; airline &quot;china&quot;，</span><br><span class="line">                flight &quot;C3416&quot;， </span><br><span class="line">                seats &#123;320 ，280，40&#125;，</span><br><span class="line">                airport &#123; original &quot;Qingdao&quot;，stop[0] &quot;TaiYuan&quot;，destination</span><br><span class="line">&quot;WuLuMuQi&quot;&#125;，</span><br><span class="line">                crewsize 10</span><br><span class="line">                &#125;</span><br><span class="line">或 airplane1 ：： &#x3D;&#123;&quot;china&quot; ， &quot;C3416&quot; ， &#123;320 ， 280 ， 40&#125; ， &#123; original &quot;Qingdao&quot;，stop[0] &quot;TaiYuan&quot;，destination  &quot;WuLuMuQi&quot;&#125;，10&#125;</span><br></pre></td></tr></table></figure>

<p>（2）<code>SEQUENCE OF</code>，单纯序列（数组）类型。</p>
<ul>
<li>即序列中的各项都属于同一类型，可以看作是SEQUENCE类型的特例。</li>
<li><code>例2.7</code>：定义了座位号类型Seats，因为座位号都是整数，所以可以使用单纯序列类型。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Seats ：：&#x3D;SEQUENCE OF INTEGER</span><br></pre></td></tr></table></figure>

<p>（3）<code>SET</code>，集合类型。</p>
<ul>
<li>是包含0个或多个组成元素的无序集合。</li>
<li>这些元素的顺序无任何意义，但是它们之间必须是不相同的，组成元素的类型可以为不同的ASN.1类型。</li>
<li><code>例2.8</code>：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Student ：：&#x3D;SET &#123;</span><br><span class="line">    number  INTEGER，</span><br><span class="line">    name    IA5STRING， </span><br><span class="line">    age      INTEGER， </span><br><span class="line">    gender   ENUMBERTED &#123;male（0）， female（1）&#125;，</span><br><span class="line">	major    IA5STRING </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#123;20040320，&quot;LiYong&quot;，19，&#123;0&#125;，&quot;Network  Engine&quot;&#125;，</span><br><span class="line">&#123;20040720，&quot;WangHua&quot;，20，&#123;1&#125;，&quot;Computer  Application&quot;&#125;，</span><br><span class="line">它们都属于Student类型的同一个实例。</span><br></pre></td></tr></table></figure>

<p>（4）<code>SET OF</code>，单纯集合类型。</p>
<ul>
<li>是包含0个或多个组成元素的无序集合，同单纯序列类型类似，这些组成元素必须为相同的ASN.1类型。</li>
<li><code>例2.9</code>：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VipSeats ：：&#x3D;SET OF INTEGER </span><br><span class="line">vipseats VipSeats ：：&#x3D;&#123;60，80，120&#125;</span><br></pre></td></tr></table></figure>

<p><strong>6．标签类型</strong></p>
<p>（1）<code>注意事项</code></p>
<p>传输数据，一定要避免接收方收到数据解码时出现不清楚的地方。具体说，接收方要明确知道每个收到数据的类型，所以<code>要对各类型进行系统性的编号。这个编号（即tag）是类型的标识符，在ASN.1中每种类型的tag是唯一的</code>。 </p>
<p>（2）<code>组成</code></p>
<p>标签类型由一个标签类（class）和一个标签号（class number）组成。</p>
<p>（3）<code>分类</code>,标签类型有4种：</p>
<ul>
<li>通用类（UNIVERSAL）</li>
<li>应用类（APPLICATION）</li>
<li>私有类（PRIVATE）</li>
<li>上下文无关类（CONTEX-SPECIFIC）。</li>
</ul>
<p><code>备注</code>：通用类标签是ASN.1标准定义的，除了<code>CHOICE</code>和<code>ANY类型</code>之外，所有的简单类型和结构类型都具有统一分配的唯一标签。加标签后的类型实质上是一个新的类型，它和原来的类型在结构上是一样的，但是是不同的类型，举例如下：</p>
<p><code>例2.10</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Number ：：&#x3D;[ UNIVERSAL 2]INTEGER</span><br><span class="line">valA Number：：&#x3D;200603</span><br></pre></td></tr></table></figure>

<p><strong>7．其他类型</strong></p>
<p><code>CHOICE</code>和<code>ANY</code>是两个<code>没有标签</code>的类型，因为它们的值是未定的，而且类型也是未定的。当这种类型的变量被赋值时，它们的类型和标签才能确定。</p>
<p>（1）<code>CHOICE</code>，选择类型，包含一个可供选择的数据类型列表。</p>
<p><code>CHOICE类型</code>的每个值都是其中某一数据类型的值。数据可能在不同情况下取不同的值，若这些可能的类型<code>能够在事先都知道</code>，那么就可以使用CHOICE类型。</p>
<p><code>例2.11</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Prize ：：&#x3D; CHOICE&#123;</span><br><span class="line">    car IA5STRING，</span><br><span class="line">    cash INTEGER，</span><br><span class="line">    nothing BOOLEAN</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">由于奖项的种类是可以预知的，分别为nothing TRUE，car“Lincoln” 和cash 25000。</span><br></pre></td></tr></table></figure>

<p>（2）<code>ANY</code></p>
<p><code>ANY类型</code>和选择类型（具有确定的数据类型选择范围）不同，若在定义数据时<code>不能确定</code>数据的类型，可以使用ANY类型。ANY型可以被任何ASN.1类型置换。</p>
<p><code>例2.12</code>： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Book：：&#x3D;SEQUENCE&#123;</span><br><span class="line">    author IA5STRING，</span><br><span class="line">    reference ANY</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#123;author &quot;Martin&quot; ，reference IA5STRING &quot;ISBN007895&quot;&#125;和</span><br><span class="line">&#123;author &quot;Martin&quot;， reference INTEGER 1998&#125; 都是Book的正确实例。</span><br></pre></td></tr></table></figure>

<p><strong>（四）子类型</strong></p>
<p><strong>1、子类型的定义</strong></p>
<p><code>子类型</code>是由<code>限制父类型的值</code>集合而导出的类型，所以子类型的值集合是父类型的子集。</p>
<p><strong>2、子类型产生子类型的方法</strong></p>
<p>子类型还可以产生子类型，产生子类型的方法有以下6种：</p>
<p>（1）<code>单个值</code>（Single Value）</p>
<ul>
<li>列出子类型可取的各个值。</li>
<li>例如，TestResule：：=INTEGER（0|1|2）表示TestResult可以取0、1或2中的一个值。</li>
</ul>
<p>（2）<code>值区间</code>（Value Range）</p>
<ul>
<li>这种方法只能用于整数和实数，指出子类型可取的区间。</li>
<li>例如，EmployeeNumber::=INTEGER（1000..20000）表示该变量取整数值，范围为1000～20000。</li>
</ul>
<p>（3）<code>允许字符</code>（Permitted Alphabet）</p>
<ul>
<li>允许字符只能用于字符串类型，限制字符集的取值范围。</li>
<li>例如，House Size::= IA5STRING（FROM（“0” | “1” | “2” | “3” |“4” | “5” | “6” | “7” | “8” | “9”）SIZE（5））表示该变量可取的值是5个数字组成的字符串。 </li>
</ul>
<p>（4）<code>限制大小</code>（Size Constrained）</p>
<ul>
<li>可以限制5种类型（BIT STRING，OCTET STRING，CHARACTER STRING，SEQUENCE OF，SET OF）的规模大小。</li>
<li>例如， WorkstationNumber：：=OCTET STRING（SIZE（32））表示该变量的值为32个字节的串。</li>
</ul>
<p>（5）<code>包含子类型</code>（Contained Subtype）</p>
<ul>
<li><p>从已有的子类型定义新的子类型，新子类型包含原子类型的全部可能的值。用关键字INCLUDES，说明被定义的类型包含了已有类型的所有的值。</p>
</li>
<li><p>例如，</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Months：：&#x3D;ENUMERATED&#123;January (1)，February (2)，March（3），</span><br><span class="line">April（4） ，May（5），June（6），July（6），August（8）， September（9），October（10），November（11），December （12）&#125;</span><br><span class="line">First-quarter：：&#x3D;Months（January，February，March）</span><br><span class="line">Second-quarter：：&#x3D;Months（April，May，June）</span><br><span class="line">First-half：：&#x3D;Months（INCLUDES First-quarter | INCLUDES Secondquarter）</span><br></pre></td></tr></table></figure>

<p>（6）<code>内部子类型</code>（Inner Subtype）</p>
<ul>
<li><p>适用于SEQUENCE，SEQUENCE OF，SET，SET OF和CHOICE类型，主要用于对这些结构类型的元素项进行限制。</p>
</li>
<li><p>例如，下面定义的协议数据单元（PDU）类型。</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PDU：：&#x3D;SET &#123; alpha [0] INTEGER，</span><br><span class="line">Beta	[1] IA5STRING OPTIONAL，</span><br><span class="line">Gamma [2] SEQUENCE OF parameter，</span><br><span class="line">Delta	[3] BOOLEAN i8&#125;</span><br></pre></td></tr></table></figure>

<p><strong>（五）应用类型</strong></p>
<p>ASN.1 中的应用类型与特定的应用有关。对于 SNMP，RFC1155定义了以下应用类型。</p>
<p>1、<code>NetWorkAddress：：=CHOICE {internet IpAddress}</code></p>
<p>这种类型用ASN.1的<code>CHOICE构造</code>定义，可以从各种网络地址中选择一种。目前只有Internet 地址，即IP地址。</p>
<p>2、<code>IpAddress：：=[APPLICATION 0] IMPLICIT OCTET    STRING（SIZE（4））</code></p>
<p>以网络序表示的IP地址。因为它是一个32位的值，所以定义为4个字节。</p>
<p>3、<code>Counter：：=[APPLICATION 1] IMPLICIT INTEGER（0..4294977295）</code></p>
<p>计数器类型是一个非负整数，其值可增加，但不能减少，达到最大值2^32−1后回零，再从头开始增加。计数器可用于计算收到的分组数或字节数。</p>
<p>4、<code>Gauge：：=[APPLICATION 2] INTEGER（0..4294977295）</code></p>
<p>计量器类型是一个非负整数，其值可增加，也可减少。最大值为2^32−1 ，与计数器不同的是计量器达到最大值后不回零，而是锁定在2^32−1 ，直到复位，计量器可用于表示存储在缓冲队列中的分组数。 </p>
<p>5、<code>TimeTicks：：=[APPLICATION 3] INTEGER（0..4294977295）</code></p>
<p>时钟类型是非负整数，从1～2^32−1 ，时钟单位以0.01s递增，可表示从某个事件（如设备启动）开始到目前经过的时间。</p>
<p>6、<code>Opaque：：=[APPLICATION 4 ] OCTET STRING</code></p>
<p>不透明类型即未知数据类型，或者说可以表示任意类型。这种数据编码时按照<code>OCTET STRING</code>处理，管理站和代理能解释这种类型。</p>
<p><strong>三、ASN.1基本编码规则BER</strong></p>
<p><strong>（一）几条前提</strong></p>
<ul>
<li>用ASN.1表示的变量必须转换为串行的字节流才能在网络中传输。</li>
<li>基本编码规则（Basic Encoding Rules，BER）：转换文本ASN.1语法到机读代码的算法 </li>
<li>ASN.1用BER来描述传输过程中内容</li>
<li>BER在ISO 8825/X标准中进行了定义,指明了每种数据类型中每个数据的值的表示。</li>
<li>发送端用 BER 编码，将用 ASN.1 所表述的报文转换成惟一的比特序列。接收端用 BER 进行解码，得到该比特序列所表示的ASN.1 报文。</li>
</ul>
<p><strong>（二）BER编码结构</strong></p>
<p>1、BER传输语法的格式</p>
<p>（1）BER传输语法的格式是TLV三元组<code>&lt;标签Tag，长度 Length，值Value&gt;</code></p>
<ul>
<li><code>标签（Tag）</code>字段是关于标签类别和编码格式的信息；</li>
<li><code>长度（Length）</code>字段表示值（Value）字段的数据长度</li>
<li><code>值（Value）</code>字段包含实际的数据。</li>
</ul>
<p>（2）示意图</p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/010.jpg" alt></p>
<p>（3）BER传输语法是基于八位组（<code>由8比特组成，是编码的基本单位</code>）大端编码的。其八位组中的二进制编号从8到1，高8位在左，约定第8位是最高有效位，第1位是最低有效位，示意图如下：</p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/011.jpg" alt></p>
<p>2、<code>标签字段</code></p>
<p>（1）标签字段的结构示意图</p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/012.jpg" alt></p>
<p>（2）标签的编码</p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/013.jpg" alt></p>
<p>（3）标签字段的具体含义</p>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/014.jpg" alt></p>
<p>3、<code>长度字段</code></p>
<p>（1）BER编码中Length表示Value部分所占八位组的个数</p>
<p>（2）格式主要有两大类：<code>确定格式</code>和<code>不确定格式</code></p>
<ul>
<li>在确定格式中又分为短、长两种格式。</li>
<li>采用确定格式，当长度不大于127时，Length只在一个八位组中编码；当长度大于127时，在多个八位组中编码，此时第一个八位组低七位表示的是Length所占的长度，后续八位组表示Value 的长度。</li>
<li>采用不确定格式时，Length所在八位组固定编码为0x80，在Value后以两个0x00结尾。可以在编码没有完全结束的情况下，可以先发送部分消息给对方。</li>
</ul>
<p>（3）编码规则</p>
<ul>
<li>若编码是简单类型，则使用确定格式。</li>
<li><code>短格式</code>：长度字段仅一个八位组，最高位为0。</li>
<li><code>长格式</code>：长度字段包含多个八位组，第1个字节最高位为1，其余7位表示后面有多少字节来表示值字段的长度。例如，25510 可表示为10000001 11111111</li>
<li>若编码是构造类型，并且编码立即可用，则既可以使用确定格式，也可以使用非确定格式，由发送者选择。</li>
<li>若编码是构造类型，但编码不是立即可用，则使用非确定格式。</li>
</ul>
<p>4、<code>值字段</code></p>
<p>内容字段由0个或多个八位组组成，并根据不同类型数据值的不同规定对它们进行编码。</p>
<p><strong>（二）编码举例</strong></p>
<p>以UNIVERSAL Tag和短型Value为例，介绍各种类型的BER编码，重点关注Value部分。</p>
<p>1、<code>BOOLEAN</code></p>
<ul>
<li>布尔值的编码是简单类型，其值由1个八位组组成；</li>
<li>FALSE的编码是01 01 00；TRUE的编码是 01 01 FF；</li>
<li>其中第一个字节表示布尔类型的标签（UNIVERSAL 1）；</li>
<li>第二个字节表示值部分的长度为1个字节；</li>
<li>第三个字节表示布尔值。</li>
</ul>
<p>2、<code>NULL</code></p>
<ul>
<li>空值的编码是简单类型，不需要使用值八位组，相应的长度值0；</li>
<li>空值的标签是<code>UNIVERSAL 5</code>，所以编码为05 00。</li>
<li>如图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/015.jpg" alt></p>
<p>3、<code>INTEGER</code></p>
<ul>
<li>整数值的编码是简单类型，其值由1个或多个八位组组成；</li>
<li>整数值采用二进制补码形式编码；</li>
<li>补码从高位到低位排列在值的第一字节的第8位到第1位，第二字节的第8位到第1位，以下按顺序类推；</li>
<li>编码取需要的最小字节数，因此不可能出现第一字节的所有位和第二字节的第8位全0或全1的情况；</li>
<li>对于正数，如果最高比特位为0则直接编码；</li>
<li>如果为1，则在最高比特位之前增加一个全0的八位组；</li>
<li>对于负数，先取绝对值，再取反，最后加1。</li>
<li>例如1：0的编码02 01 00；127的编码 02 01 7F。其中第一个字节表示整数类型的标（UNIVERSAL 2），第二个字节表示值部分的长度为1个字节。</li>
<li>例如2：128的编码02 02 00 80；256的编码02 02 01 00。其中第一个字节表示整数类型的标签（UNIVERSAL 2），第二个字节表示值部分的长度为2个字节，第三个字节和第四个字节表示值的大小。</li>
<li>例如3：−128的编码 02 01 80；−129的编码02 02 FF 7F。</li>
<li>如图为127、256、−129的BER编码：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/016.jpg" alt></p>
<p>4、<code>REAL</code></p>
<ul>
<li>实数值的编码是简单类型，其值由1个或多个八位位组组成。</li>
<li>如果实数值为0，则不需要使用值八位位组，相应长度值为0，则编码为09 00。如果实数值不为0，则使用“B”作为编码的基。基可以由发送者选择。如果“B”是2，8或16，则选择二进制编码；如果“B”是10，则选择字符编码。</li>
<li>采用二进制编码时，分为尾数编码和指数编码两部分</li>
<li>尾数编码的部分信息和指数编码的长度由第一个值八位组指定，后面接着是指数编码字段，剩余的值字段是尾数编码的其他部分。如果尾数不为0，那么它由符号S、非负整数值B和二进制比例因子F来表示，即<code>M= S × B × 2F，0≤F&lt;4，S = ±1</code>。</li>
<li>S由第一个值八位组的位7表示，S = −1则位7等于1，否则位7等于0。位6和位5根据基数B进行编码。基数为2，编码为00；基数为8，编码为11，基数为16，编码为10。位4和位3是比例因子的无符号二进制表示。</li>
<li>位2和位1对指数编码的形式，如下图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/017.jpg" alt></p>
<ul>
<li>值字段的剩余部分将整数值N编码成无符号二进制。</li>
<li>当使用十进制编码（位8和位7等于00）时，按ISO 6093的规定进行编码。其中第一个值八位组的位6到位1规定使用ISO 6093的何种编码形式，如下图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/018.jpg" alt></p>
<ul>
<li>当对特别实数值进行编码（位8和位7等于01）时，只需要一个值八位组即可。特别实数值是指正无穷（PLUS-INFINITY）和负无穷（MINUS-INFINITY），它们的编码如下图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/019.jpg" alt></p>
<p>5、<code>BIT STRING</code></p>
<ul>
<li>位串值的编码可以是<code>简单类型</code>，也可以是<code>构造类型</code>。</li>
<li><code>简单编码</code>的值八位组包含一个初始八位组，取值为0到7，表征这个值最后补位的个数。由发送方决定补位采用0还是1。后面跟0个、1个或多个后继八位组。位串的第一位置于第一个后继八位组的第8位，以下顺序类推构造编码的值八位组由0个、1个或多个数据值的完整编码组成。每个这样的编码都包括标识、长度和值字段。每个数据值的编码通常采用简单编码，如下图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/020.jpg" alt></p>
<ul>
<li>采用<code>构造编码</code>则为：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">23 80 03 03 000A3B</span><br><span class="line">03 05 045F291CD0</span><br></pre></td></tr></table></figure>

<ul>
<li>将位串值拆为<code>（0A3B）</code>和<code>（045F291CD）</code>两部分，如下图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/021.jpg" alt></p>
<p>6、<code>OCTET STRING</code></p>
<ul>
<li>字节串值的编码与BIT STRING类似，但是不需要增加表征补充位个数的八位组。例如，字节串ACE可编码为04 02 AC E0，而字符串“ACE”编码为16 03 414345，如下图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/022.jpg" alt></p>
<p>7、<code>OBJECT IDENTIFIER</code></p>
<ul>
<li><p>对象标识符值的编码是简单类型，值八位组是互相连接的子标识符编码的表。每个子标识符标识为一个或多个八位组。每个八位组的第8位指示它是否是该系列的最后一个，最后八位组的第8位为0，其他八位组的第8位为1，第1至7位组合起来作子标识符的编码。</p>
</li>
<li><p>第一个编码子标识符的数值从被编码的对象标识符值中的前两个子标识符值得出，使用公式：<code>(X × 40) + Y</code>。其中X和Y是前两个子标识符的值。因此，编码子标识符数比实际对象全部字标识符数少1。</p>
</li>
<li><p>对象标识符{ joint-iso-ccitt 100 3}，即{ 2 100 3}，计算得到2 × 40 + 100 = 180，因此按照{180 3}编码为：06 03 813403H。其中第一个字节表示对象标识符类型的标签（UNIVERSAL 6），第二个字节表示值部分的长度为3个字节。该对象标识符的BER编码如下图所示：</p>
</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/023.jpg" alt></p>
<p>8、<code>SEQUENCE</code></p>
<ul>
<li>序列值的编码是构造类型。值八位组由序列类型ASN.1定义中列出的每个类型的一个数据值得完整编码组成，除非该类型带有关键字<code>“OPTIONAL”</code>或<code>“DEFAULT”</code>，否则这些值的编码可以不出现。例如，序列类型{name IA5String ok BOOLEAN}，值{name “john” ，ok TRUE}，可以编码为：30 0A16 05 73 6D 69 74 68 01 01 FF。</li>
<li>按照序列结构可以展开为下图所示：</li>
</ul>
<p><img src="/2020/03/28/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/024.jpg" alt></p>
<p>9、<code>SET</code></p>
<ul>
<li>与SEQUENCE类似，但是由于集合类型的元素是无序的，故有多种编码，成员顺序由发送者决定。</li>
<li>例如，SET{breadth INTEGER，bent BOOLEAN}的值{breadth 7， bent FALSE}的编码为：31 06 02 01 07 01 01 00；也可以是31 06 01 01 00 02 01 07。成员的顺序可以改变。</li>
</ul>
<p><strong>四、宏定义</strong></p>
<ul>
<li>ASN.1宏提供了创建“模块”的功能，这也是引入ASN.1的原因。ASN.1宏使得ASN.1语言具有良好的扩充。</li>
<li>ASN.1模块是针对某一特定应用，由一组相关的ASN.1类型定义语句和赋值语句组成的命名集合。使用ASN.1，必须在模块中定义类型并赋值。不同模块中定义的数据类型可以相互引用。</li>
<li>宏定义，实际上是使用一个固定的格式，用户可以在这个格式中填写类型符号和值符号的产生式，创造新的类型。宏定义有两部分内容，类型的语法符号书写规则和该类型的值符号规则，即类型和值的符号如何书写。</li>
</ul>
<p><strong>（一）模块定义</strong></p>
<ul>
<li><p>ASN.1的<code>基本单位是模块</code>，类似于C语言中的结构，用于定义一个抽象数据类型ASN.1。模块实际上是由一组类型定义和值定义组成。模块定义的<code>基本形式</code>为：<br>`</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;模块名&gt; DEFINITIONS ::&#x3D;</span><br><span class="line">        BEGIN</span><br><span class="line">            EXPORTS </span><br><span class="line">            IMPORTS</span><br><span class="line">            &lt;模块体&gt;</span><br><span class="line">        END</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中，模块名的第一个字母必须大写。EXPORTS结构用于定义其他模块可以移值的类型或值，而<code>IMPORTS结构</code>规定了模块中某些定义是从其他模块中移植过来的。</p>
</li>
<li><p>模块体部分包含模块定义的所有类型、值和宏定义。</p>
</li>
<li><p>模块定义例子</p>
</li>
</ul>
<p><strong>（二）宏表示</strong></p>
<p>1、ASN.1宏提供了创建“模板”用来定义宏的方法，MIB对象就是采用宏定义模板来定义。下面介绍定义宏的方法，为此需要区分3个不同的概念。</p>
<ul>
<li><code>宏表示</code>：ASN.1提供的一种表示机制，用于定义宏。</li>
<li><code>宏定义</code>：用宏表示定义的一个宏，代表一个宏实例的集合。</li>
<li><code>宏实例</code>：用具体的值代替宏定义中的变量而产生的实例，代表一种具体的类型。</li>
</ul>
<p>2、举例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;macroname&gt;  MACRO ::&#x3D;</span><br><span class="line">            BEGIN</span><br><span class="line">                TYPE NOTATION::&#x3D;</span><br><span class="line">                VALUE NOTATION::&#x3D;</span><br><span class="line">                &lt;支持产生式&gt;</span><br><span class="line">        END</span><br></pre></td></tr></table></figure>

<ul>
<li>其中，macroname是宏的名字，必须全部大写。</li>
<li>宏定义由类型表示、值表示和支持产生式3部分组成，由Backus-Naur 规范说明。</li>
<li>当用一个具体的值代替宏定义中的变量或参数时就产生了宏实例，它表示一个实际的ASN.1类型（称为返回的类型），并且规定了该类型可取的值的集合（称为返回的值）。</li>
<li>可以把宏定义看做是类型的模板，用这种模板制造出形式相似、语义相关的许多数据类型。</li>
<li>实例：FC1212的宏OBJECT-TYPE的定义</li>
</ul>
<p><strong>（三）宏实例的定义</strong></p>
<ul>
<li>当用一个具体的值代替宏定义中的变量（或参数）时就产生了宏实例，它表示一个实际的ASN.1类型（称为返回的类型），并且规定了该类型可取的值的集合（称为返回的值）。宏实例（即ASN.1类型）的定义首先是对象名，然后是宏定义的名字，最后是宏定义规定的宏体部分。</li>
<li>实例：对象定义-例2.14，2.15。</li>
</ul>
<p><strong>五、小结</strong></p>
<ul>
<li>抽象语法表示ASN.1定义了一组用来描述网络上所传输的数据结构规则。在ASN.1中，每一个数据类型都有一个标签，包括标有类型和值。</li>
<li>ANSI.1定义的数据类型有20多种，标签类型都是UNIVERSAL。</li>
<li>用ASN.1定义的应用数据在传送过程中要按照一定的规则变换成比特串，这种规则就是基本编码规则（Basic Encoding Rule，BER）。</li>
<li>ASN.1提供了宏定义功能，可用于扩充语法，定义新的类型和值。</li>
</ul>
<p><strong>六、第二课时作业</strong></p>
<p><strong>（一）单选题</strong></p>
<p><strong>1、在ASN.1的数据类型分类中由已知类型定义的新类型是（  ）。</strong></p>
<p>A、简单类型</p>
<p>B、构造类型</p>
<p>C、标签类型</p>
<p>D、其它类型</p>
<p><code>我的答案：C</code></p>
<p><strong>2、计算机网络管理中提供统一的网络数据表示的形式语言是(  )。</strong></p>
<p>A、ASN.1</p>
<p>B、Java</p>
<p>C、C语言</p>
<p>D、ASP</p>
<p><code>我的答案：A</code></p>
<p><strong>3、（  ）的功能提供统一的网络数据表示。</strong></p>
<p>A、应用层</p>
<p>B、表示层</p>
<p>C、传输层</p>
<p>D、网络层</p>
<p><code>我的答案：B</code></p>
<p><strong>4、ASN.1中，标签的类型可分为（  ）。</strong></p>
<p>A、简单标签、通用标签、上下文专用标签、应用标签</p>
<p>B、简单标签、应用标签、上下文专用标签、私有标签</p>
<p>C、通用标签、应用标签、上下文专用标签、私有标签</p>
<p>D、通用标签、构造标签、上下文专用标签、私有标签</p>
<p><code>我的答案：C</code></p>
<p><strong>5、以下对ASN.1的数据类型描述正确的是 （  ）。</strong></p>
<p>A、每个数据类型（包括CHOICE和ANY）都有标签</p>
<p>B、分别用SEQUENCE和SEQUENCE OF表示相同类型和不同类型元素的序列</p>
<p>C、分别用SET和SET OF表示不同类型和相同类型元素的集合</p>
<p>D、隐含标签的语义是在一个基本类型上加上新标签，从而导出一个新类型</p>
<p><code>我的答案：D</code></p>
<p><strong>（二）填空题</strong></p>
<p><strong>1、（  ）用于定义应用数据，它类似程序设计语言定义的抽象数据类型。</strong></p>
<p><code>我的答案:  第一空：ASN.1</code></p>
<p><strong>2、在ASN.1中，每一个数据类型都有一个标签（tag），标签有（  ）和（  ）。</strong></p>
<p><code>我的答案:  第一空：类型  第二空：值</code></p>
<p><strong>3、ASN.1定义的数据类型可分为4类：分别为（  ）、（  ）、（  ）、（  ）。</strong></p>
<p><code>我的答案:  第一空：简单类型  第二空：构造类型  第三空：标签类型  第四空：其他类型</code></p>
<p><strong>4、序列：用（  ）表示不同类型元素的序列，用（  ）表示相同类型元素的序列。</strong></p>
<p><code>我的答案:  第一空：SEQUENCE  第二空：SEQUENCE OF</code></p>
<p><strong>5、（  ）把ASN.1表示的抽象类型值编码为字节串。</strong></p>
<p><code>我的答案:  第一空：OCTET STRING</code></p>
<p><strong>（三）简答题</strong></p>
<p><strong>1、布尔类型有两个值FALSE和TRUE，分别写出FALSE和TRUE的编码。</strong></p>
<p><code>我的答案</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FALSE：010100</span><br><span class="line"></span><br><span class="line">TRUE：0101FF</span><br></pre></td></tr></table></figure>

<p><strong>2、表示层的功能是什么？抽象语法和传输语法各有什么作用？</strong></p>
<p><code>我的答案</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">表示层的功能：为了保证同一数据对象在不同计算机中语义的正确性，实现在不同应用系统之间的信息交换。两个系统在传输数据前需要协商共用的编码方式。表示层负责在两个应用系统之间进行编码协商和实际信息编码。</span><br><span class="line"></span><br><span class="line">抽象语法的作用：定义了数据的常用结构（包括不同的数据类型）。</span><br><span class="line"></span><br><span class="line">传输语法的作用：提供从抽象语法表示的数据到比特序列，以及其相反操作的方法。</span><br></pre></td></tr></table></figure>

<p><strong>3、用基本编码规则对长度字段L编码：L = 18，L = 180，L = 1044。</strong></p>
<p><code>我的答案</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">L&#x3D;18，00010010；L&#x3D;180，10000001 10110100；L&#x3D;1044，10001000 10010100。</span><br></pre></td></tr></table></figure>

<p><strong>4、用基本编码对数据编码：标签值 = 1011001010，长度 = 255。</strong></p>
<p><code>正确答案</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00011111 10000101 01001010 10000001 11111111</span><br></pre></td></tr></table></figure>

<p><strong>5、写出一个ASN.1的模块，该模块以SEQUENCE数据类型指定monthsOfYear，并以VisibleString类型指定一年中的每一个月（month1，month2，…）。写出ASN.1对于结构的描述，并写出对于值的描述。</strong></p>
<p><code>我的答案</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">monthsOfYear :: &#x3D; SEQUENCE&#123;</span><br><span class="line"></span><br><span class="line">                           Month1 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month2 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month3 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month4 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month5 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month6 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month7 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month8 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month9 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month10 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month11 VisibleString,</span><br><span class="line"></span><br><span class="line">                           Month12 VisibleString &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>网络管理基础知识</category>
      </categories>
      <tags>
        <tag>网络管理</tag>
      </tags>
  </entry>
  <entry>
    <title>Python入门基础知识学习（三）</title>
    <url>/2020/03/21/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h3 id="if-statements"><a href="#if-statements" class="headerlink" title="if statements"></a><strong>if statements</strong></h3><p>if语句在编程中是极其重要的，允许我们建立能够基于某种条件做出决策的程序。如果某些条件是真的我们会做一些事情，否则我们会做其他事情。</p>
<p><strong>1、涉及的知识点</strong></p>
<p>（1）Python条件语句是通过一条或多条语句的执行结果（True或者False）来决定执行的代码块。</p>
<p>（2）Python程序语言指定任何非0和非空（null）值为<code>True</code>，0 或者 null为<code>False</code>。</p>
<p>（3）Python 编程中 if 语句用于控制程序的执行，基本形式为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if 判断条件：</span><br><span class="line">    执行语句……</span><br><span class="line">else：</span><br><span class="line">    执行语句……</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：其中”判断条件”成立时（非零），则执行后面的语句，而执行内容可以多行，以<code>缩进</code>来区分表示同一范围。else 为可选语句，当需要在条件不成立时执行内容则可以执行相关语句。</p>
<a id="more"></a>

<p><strong>2、举例练习</strong></p>
<p>（1）题目1</p>
<ul>
<li>题目内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if it&#39;s hot</span><br><span class="line">    It&#39;s a hot day</span><br><span class="line">    Drink plenty of water</span><br><span class="line">otherwise if it&#39;s cold</span><br><span class="line">    It&#39;s a cold day</span><br><span class="line">    Wear warm clothes</span><br><span class="line">otherwise</span><br><span class="line">    It&#39;s a lovely day</span><br></pre></td></tr></table></figure>

<ul>
<li>实现前两个规则：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">is_hot &#x3D; False</span><br><span class="line"></span><br><span class="line">if is_hot:</span><br><span class="line">    print(&quot;It&#39;s a hot day&quot;)</span><br><span class="line">    print(&quot;Drink plenty of water&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;It&#39;s a cold day&quot;)</span><br><span class="line">    print(&quot;Wear warm clothes&quot;)</span><br><span class="line">print(&quot;Enjoy your day&quot;)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：if语句写完<code>回车</code>后，光标会自动缩进，意味着可以继续编写更多代码；如果条件成立，这些代码将会全部执行，可以使用<code>shift + tab</code>取消缩进，即if语句下不在编写更多额外代码，以终止此块代码；if语句之外，不论条件是否成立，程序都会执行语句。</p>
<ul>
<li>为了实现第三个规则，我们还要新增第二个条件:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">is_hot &#x3D; False</span><br><span class="line">is_cold &#x3D; False</span><br><span class="line"></span><br><span class="line">if is_hot:</span><br><span class="line">    print(&quot;It&#39;s a hot day&quot;)</span><br><span class="line">    print(&quot;Drink plenty of water&quot;)</span><br><span class="line">elif is_cold:</span><br><span class="line">    print(&quot;It&#39;s a cold day&quot;)</span><br><span class="line">    print(&quot;Wear warm clothes&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;It&#39;s a lovely day&quot;)</span><br><span class="line">print(&quot;Enjoy your day&quot;)</span><br></pre></td></tr></table></figure>

<p><strong>3、学习任务</strong></p>
<p>（1）任务内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Price of a house is $1M.</span><br><span class="line">If buyer has good credit,</span><br><span class="line">    they need to put down 10%</span><br><span class="line">Otherwise</span><br><span class="line">    they need to put down 20%</span><br><span class="line">Print the down payment</span><br><span class="line"></span><br><span class="line">房子的价格是100万美元。如果购买者有好的信用，则首付只需要付全款的10%；否则，需要付全款的20%。</span><br></pre></td></tr></table></figure>

<p>（2）解决方案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">price &#x3D; 1000000</span><br><span class="line">has_good_credit &#x3D; True</span><br><span class="line"></span><br><span class="line">if has_good_credit:</span><br><span class="line">    down_payment &#x3D; 0.1 * price</span><br><span class="line">else:</span><br><span class="line">    down_payment &#x3D; 0.2 * price</span><br><span class="line">print(f&quot;Down Payment: $&#123;down_payment&#125;&quot;)</span><br></pre></td></tr></table></figure>

<h3 id="Logical-Operators-逻辑运算符"><a href="#Logical-Operators-逻辑运算符" class="headerlink" title="Logical Operators 逻辑运算符"></a><strong>Logical Operators 逻辑运算符</strong></h3><p><strong>1、涉及的知识点</strong></p>
<p>Python语言支持逻辑运算符如下表所示，其中假设<code>变量 a 为 10</code>, <code>b为 20</code>：</p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">逻辑表达式</th>
<th align="center">描述</th>
<th align="center">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">and</td>
<td align="center">x and y</td>
<td align="center">布尔”与”：如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值</td>
<td align="center">(a and b) 返回 20</td>
</tr>
<tr>
<td align="center">or</td>
<td align="center">x or y</td>
<td align="center">布尔”或”：如果 x 是非 0，它返回 x 的值，否则它返回 y 的计算值</td>
<td align="center">(a or b) 返回 10</td>
</tr>
<tr>
<td align="center">not</td>
<td align="center">not x</td>
<td align="center">布尔”非”：如果 x 为 True，返回 False 。如果 x 为 False，它返回 True</td>
<td align="center">not(a and b) 返回 False</td>
</tr>
</tbody></table>
<p><strong>2、举例练习</strong></p>
<p>（1）题目1</p>
<ul>
<li>题目内容：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if applicant has high income AND good credit</span><br><span class="line">    Eligible for loan</span><br><span class="line">如果申请人有高的收入和好的信用，则有资格获得贷款。</span><br></pre></td></tr></table></figure>

<ul>
<li>解决方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">has_high_income &#x3D; True</span><br><span class="line">has_good_credit &#x3D; True</span><br><span class="line"></span><br><span class="line">if has_high_income and has_good_credit:</span><br><span class="line">    print(&quot;Eligible for loan&quot;)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：两个条件都为真才为真</p>
<p>（2）题目2</p>
<ul>
<li>题目内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if applicant has high income OR good credit</span><br><span class="line">    Eligible for loan</span><br><span class="line">如果申请人有高的收入或者好的信用，则有资格获得贷款。</span><br></pre></td></tr></table></figure>

<ul>
<li>解决方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">has_high_income &#x3D; True</span><br><span class="line">has_good_credit &#x3D; False</span><br><span class="line"></span><br><span class="line">if has_high_income or has_good_credit:</span><br><span class="line">    print(&quot;Eligible for loan&quot;)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：只要有一个条件为真即为真</p>
<p>（3）题目3</p>
<ul>
<li>题目内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if applicant has good credit AND doesn&#39;t have a criminal record</span><br><span class="line">	Eligible for loan</span><br></pre></td></tr></table></figure>
<ul>
<li>解决方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一种情况：</span><br><span class="line">has_good_credit &#x3D; True</span><br><span class="line">has_criminal_record &#x3D; False</span><br><span class="line"></span><br><span class="line">if has_good_credit and not has_criminal_record:</span><br><span class="line">    print(&quot;Eligible for loan&quot;)</span><br><span class="line"></span><br><span class="line"># not 操作符会将False变成True</span><br><span class="line">返回结果：打印Eligible for loan</span><br><span class="line"></span><br><span class="line">第二种情况：</span><br><span class="line">has_good_credit &#x3D; True</span><br><span class="line">has_criminal_record &#x3D; True</span><br><span class="line"></span><br><span class="line">if has_good_credit and not has_criminal_record:</span><br><span class="line">    print(&quot;Eligible for loan&quot;)</span><br><span class="line"></span><br><span class="line"># not 操作符会将True变成False</span><br><span class="line">返回结果：不打印任何数据</span><br></pre></td></tr></table></figure>
<p>（4）总结</p>
<ul>
<li>AND：both，两个条件都为真才为真</li>
<li>OR:：at least one，只要有一个条件为真即为真</li>
<li>NOT：将条件得到的布尔值取反，语句真假跟随and或者or</li>
</ul>
<h3 id="Comparison-Operators-比较运算符"><a href="#Comparison-Operators-比较运算符" class="headerlink" title="Comparison Operators 比较运算符"></a><strong>Comparison Operators 比较运算符</strong></h3><p><strong>1、涉及的知识点</strong></p>
<p>Python语言支持比较运算符如下表所示，其中假设<code>变量a为10</code>，<code>变量b为20</code>：</p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">描述</th>
<th align="center">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">==</td>
<td align="center">等于：比较对象是否相等</td>
<td align="center">(a == b) 返回 False</td>
</tr>
<tr>
<td align="center">!=</td>
<td align="center">不等于：比较两个对象是否不相等</td>
<td align="center">(a != b) 返回 true</td>
</tr>
<tr>
<td align="center">&gt;</td>
<td align="center">大于：返回x是否大于y</td>
<td align="center">(a &gt; b) 返回 False</td>
</tr>
<tr>
<td align="center">&lt;</td>
<td align="center">小于：返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价</td>
<td align="center">(a &lt; b) 返回 true</td>
</tr>
<tr>
<td align="center">&gt;=</td>
<td align="center">大于等于：返回x是否大于等于y</td>
<td align="center">(a &gt;= b) 返回 False</td>
</tr>
<tr>
<td align="center">&lt;=</td>
<td align="center">小于等于：返回x是否小于等于y</td>
<td align="center">(a &lt;= b) 返回 true</td>
</tr>
</tbody></table>
<p><strong>2、举例练习</strong></p>
<p>（1）题目1</p>
<ul>
<li>题目内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if temperature is greater than 30</span><br><span class="line">    it&#39;s a hot day</span><br><span class="line">otherwise if it&#39;s less than 10</span><br><span class="line">    it&#39;s a cold day</span><br><span class="line">otherwise</span><br><span class="line">    it&#39;s neither hot nor cold</span><br></pre></td></tr></table></figure>

<ul>
<li>解决方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">temperature &#x3D; 30</span><br><span class="line"></span><br><span class="line">if temperature &gt; 30:</span><br><span class="line">    print(&quot;It&#39;s a hot day&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;It&#39;s not a hot day&quot;)</span><br></pre></td></tr></table></figure>
<p>（2）题目2</p>
<ul>
<li>题目内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if name is less than 3 characters long</span><br><span class="line">    name must be at least 3 characters</span><br><span class="line">otherwise if it&#39;s more than 50 characters long</span><br><span class="line">    name can be a maximum of 50 characters</span><br><span class="line">otherwise</span><br><span class="line">    name looks good!</span><br></pre></td></tr></table></figure>

<ul>
<li>解决方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name &#x3D; &quot;Zhang Zhiqing&quot;</span><br><span class="line"></span><br><span class="line">if len(name) &lt; 3:</span><br><span class="line">    print(&quot;Name must be at least 3 characters.&quot;)</span><br><span class="line">elif len(name) &gt; 50:</span><br><span class="line">    print(&quot;Name can be a maximum of 50 characters.&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;Name looks good!&quot;)</span><br></pre></td></tr></table></figure>

<p><strong>3、学习任务：Weight Converter</strong></p>
<p>（1）题目内容</p>
<p>先输入体重数值，再输入单位。如果输入的单位为千克，则转换为磅然后输出体重；如果输入的单位为磅，则转换为千克然后输出体重。</p>
<p>（2）解决方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">weight &#x3D; int(input(&#39;Weight: &#39;))</span><br><span class="line">unit &#x3D; input(&#39;(L)bs or (K)g: &#39;)</span><br><span class="line">if unit.upper() &#x3D;&#x3D; &quot;L&quot;:</span><br><span class="line">    converted &#x3D; weight * 0.45</span><br><span class="line">    print(f&quot;You are &#123;converted&#125; kilos&quot;)</span><br><span class="line">else:</span><br><span class="line">    converted &#x3D; weight &#x2F; 0.45</span><br><span class="line">    print(f&quot;You are &#123;converted&#125; pounds&quot;)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：为了防止因用户输入小写字母导致程序不起作用，我们使用点运算符调用方法函数upper()，此方法将用户输入的内容转换为大写。</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title>网络管理基础知识学习（一）</title>
    <url>/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h3 id="一、学习网络管理的目的"><a href="#一、学习网络管理的目的" class="headerlink" title="一、学习网络管理的目的"></a><strong>一、学习网络管理的目的</strong></h3><ul>
<li>掌握计算机网络管理的理论知识和实用技术</li>
<li>熟悉网络管理标准和网络管理平台</li>
<li>具有一定的网络管理程序的开发设计能力</li>
<li>能利用网络工具分析网络中一些常见故障发生的原因并排除故障</li>
<li>具有一定的网络管理和网络维护能力。</li>
</ul>
<h3 id="二、第一课时-网络管理概论"><a href="#二、第一课时-网络管理概论" class="headerlink" title="二、第一课时 网络管理概论"></a><strong>二、第一课时 网络管理概论</strong></h3><p><strong>（一）学习速览</strong></p>
<ul>
<li>网络管理的几个概念</li>
<li>网络管理的体系结构</li>
<li>网络管理的功能</li>
<li>网络管理员的职责</li>
<li>网络操作系统</li>
</ul>
<p><strong>（二）网络管理的几个概念</strong></p>
<p><strong>1、提出几个问题</strong></p>
<ul>
<li>为什么要网络管理？</li>
<li>网络管理的对象？</li>
<li>网络管理的目标？</li>
</ul>
<a id="more"></a>

<p><strong>2、提出几个概念</strong></p>
<ul>
<li>网络管理概述</li>
<li>网络管理的目标</li>
<li>网络管理的对象</li>
<li>网络管理的标准</li>
</ul>
<p><strong>3、网络管理的发展</strong></p>
<p>（1）世界上第一个计算机网络—ARPANET</p>
<p>（2）<code>原因</code>：随着网络的发展，规模增大、复杂性增加，以前的网络管理技术已不能适应网络的迅速发展。</p>
<p>（3）早期网络管理</p>
<ul>
<li><p><code>定义</code>：</p>
</li>
<li><p>网络管理行为在发现故障或接到用户申告之后开始，技术人员到现场通过连接仪器、操作按钮来检测和改变传输装置、路由器、交换机等网络资源的状态。</p>
</li>
<li><p><code>特点</code>：</p>
</li>
<li><p>对应具体业务和设备；</p>
</li>
<li><p>各种网络管理系统之间的没有统一的操作平台，无法互通；</p>
</li>
<li><p>许多是现场的物理操作。</p>
</li>
</ul>
<p>（4）后期网络管理——远程监控</p>
<ul>
<li><p><code>定义</code>：</p>
</li>
<li><p>随着网络技术的更新与发展，提出了以远程监控为基础的网络管理的新框架。</p>
</li>
<li><p><code>特点</code>：</p>
</li>
<li><p>远程逻辑管理：本地的物理管理变成了远程逻辑管理；</p>
</li>
<li><p>有了预测问题的能力：网络的性能状况可以定期或实时得到监视；</p>
</li>
<li><p>对有明确定义的全局信息进行解释：从根据现场检测的局部信息进行孤立判断，转变为对有明确定义的全局信息进行解释。</p>
</li>
</ul>
<p><strong>4、网络管理概述</strong></p>
<p>（1）网络管理的<code>定义</code></p>
<p>网络管理，简称<code>网管</code>，简单地说就是为保证网络系统能够持续、稳定、安全、可靠和高效地运行，对网络实施的一系列方法和措施。</p>
<p>（2）网络管理的任务——<code>监测</code>和<code>控制</code></p>
<p>网络管理的任务就是收集、监控网络中各种设备和设施的工作参数、工作状态信息，将结果显示给管理员并进行处理，从而控制网络中的设备、设施、工作参数和工作状态，使其可靠运行。</p>
<p><strong>5、网络管理的目标</strong></p>
<ul>
<li><code>有效性</code>：网络准确及时地传递信息</li>
<li><code>可靠性</code>：持续稳定地运行</li>
<li><code>开放性</code>：兼容不同类型的设备</li>
<li><code>综合性</code>：综合业务功能</li>
<li><code>安全性</code>：安全保障，防止计算机病毒和非法入侵者的破坏</li>
<li><code>经济性</code>：减少运行费用，提高网络使用效率</li>
</ul>
<p><strong>6、网络管理的对象——网络中的硬件资源和软件资源</strong></p>
<p>（1）<code>硬件资源</code>是指物理介质、计算机设备和网络互连设备<br><code>软件资源</code>主要包括操作系统、应用软件和通信软件</p>
<ul>
<li><p><code>物理介质</code>：</p>
</li>
<li><p>网卡、双绞线、同轴电缆、光纤</p>
</li>
<li><p><code>网络互连设备</code>：</p>
</li>
<li><p>中继器、网桥、交换机、路由器</p>
</li>
</ul>
<p>（2）所有资源被抽象为<code>被管对象（Managed Object，MO）</code></p>
<p>（3）被管对象的集合称为<code>管理信息库（MIB）</code></p>
<p><strong>7、网络管理的标准</strong></p>
<ul>
<li>ISO管理</li>
<li>TCP/IP网络管理（SNMP重点）</li>
<li>RMON</li>
<li>IEEE802.1b LAN/MAN管理</li>
</ul>
<p><strong>（三）网络管理的体系结构</strong></p>
<p><strong>1、提出几个问题</strong></p>
<ul>
<li>网络管理系统由几部分组成，各部分的功能和关系如何？</li>
<li>管理的基本模型？</li>
<li>管理模式有哪些？</li>
</ul>
<p><strong>2、网络管理的体系结构的地位</strong></p>
<p>网络管理的体系结构定义了网络管理系统的结构及系统成员间相互关系的一套规则，它是建立网络管理系统的<code>基础</code>。</p>
<p><strong>3、网络管理系统由几部分组成，各部分的功能和关系如何？</strong></p>
<p>网络管理系统主要包括四大部分：至少一个网络管理站(Manager)、多个被管代理(Agent)、网管协议(如SNMP、CMIP)，以及至少一个网管信息库(MIB)。</p>
<p><code>网络管理站</code>：一般是一个设备，也可以是共享系统的一个能力。管理站驻留在网络管理的服务器上，实施网络管理功能。它被作为网络管理员与网络管理系统的接口。</p>
<p><code>被管代理</code>：主机、网桥、路由器及集线器可作为被管代理工作。被管代理对来自管理站的信息请求和动作请求进行应答，并异步地为管理站报告一些意外事件。它常驻留在被管理的网络设备上，配合网络管理。</p>
<p><code>网管信息库</code>：网络资源常被表示为被管对象，被管对象的集合称为管理信息库</p>
<p><code>网管协议</code>：管理站和被管代理的信息交换是通过SNMP来实现。</p>
<p><strong>4、网络管理的基本模型</strong></p>
<p>（1）<code>总体模型图</code></p>
<p><img src="/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/001.jpg" alt></p>
<p>（2）<code>局部模型图</code></p>
<p><img src="/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/002.jpg" alt></p>
<p><img src="/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/003.jpg" alt></p>
<p>（3）<code>名词解释</code></p>
<p><code>网络管理者</code>：管理指令的发出者。管理者是整个网管系统的核心，负责完成网络的各项管理功能。管理者一般位于网络中的一个主机节点上。</p>
<p><code>管理代理</code>：一般可有多个，分别位于网络中的被管理的设备内部，负责把来自管理者的命令或信息请求转换为本设备特有的指令再执行管理操作，并将结果信息传送给管理者。</p>
<p><code>网络管理协议</code>：网络管理站和代理之间用以交换管理信息的协议。</p>
<ul>
<li><p><code>简单网络管理协议（SNMP）</code>：由一组网络管理的标准组成，包含一个应用层协议（application layer protocol）、数据库模型（database schema）和一组资源对象。SNMP最大的优点是简易性与可扩展性。</p>
</li>
<li><p><code>公共管理信息服务/公共管理信息协议（CMIS/CMIP）</code>。</p>
</li>
</ul>
<p><code>管理信息库（Management Information Base，MIB）</code>：是被管对象结构化组织的一种抽象。它是一个概念上的数据库，是由多个被管对象及其属性组成，能够提供有关网络设备的信息。代理具有从MIB中读取各种变量值和在MIB中修改各种变量值两个基本功能。</p>
<p><strong>5、网络管理模式</strong></p>
<p>（1）网络管理模式分为集中式网络管理模式、分布式网络管理模式以及混合管理模式3种。</p>
<p>（2）<code>集中式网络管理模式</code></p>
<ul>
<li><p><code>定义</code>：由一个网络管理者对整个网络的管理负责。网络管理者处理所有来自被管理系统上的管理代理的通信信息，为全网提供集中的决策支持，并控制和维护管理工作站上的信息存储。</p>
</li>
<li><p><code>模式图</code></p>
</li>
</ul>
<p><img src="/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/004.jpg" alt></p>
<p><img src="/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/005.jpg" alt></p>
<ul>
<li><code>优点</code>：结构简单、低价格以及易维护。</li>
<li><code>缺点</code>：不可扩展性；功能固定，不灵活；不可靠性；传输中的瓶颈。</li>
<li><code>适合使用的网络</code>：小型局域网、部门专用网络、统一经营的公共服务网、专用C/S结构网、企业互联网。</li>
</ul>
<p>（3）<code>分布式网络管理模式</code></p>
<ul>
<li><p><code>定义</code>：为了减少集中控制的负担，将信息智能分布到网络各处，在最靠近问题源的地方能够做出基本的决策，是分布式管理的核心思想。</p>
</li>
<li><p><code>模式图</code>：</p>
</li>
</ul>
<p><img src="/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/006.jpg" alt></p>
<ul>
<li><code>特点</code>：自适应基于策略的管理；分布式的设备查找与监视；智能过滤；分布式阈值监视；轮询引擎；分布式管理任务引擎。</li>
</ul>
<p>（3）<code>混合管理模式</code></p>
<ul>
<li><p><code>定义</code>：以分布式管理模式为基础，指定某个或某些节点为网络管理节点，给予其较高的特权。</p>
</li>
<li><p><code>特点</code>：部分集中，部分分布；联邦制管理模式；分级网中的分级管理。</p>
</li>
</ul>
<p><strong>6、网络管理软件结构</strong></p>
<p>（1）<code>模式图</code></p>
<p><img src="/2020/03/21/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/007.jpg" alt></p>
<p>（2）<code>名词解释</code></p>
<ul>
<li><code>用户接口软件</code>：用户通过网络管理接口与管理专用软件交互作用，监视和控制网络资源。</li>
<li><code>管理专用软件</code>：支持多种网络管理应用，适用于各种网络设备和网络配置。</li>
<li><code>管理支持软件</code>：包括MIB访问模块和通信协议栈。</li>
</ul>
<p><strong>7、网络管理的组织模型</strong></p>
<p>（1）<code>定义</code></p>
<p>描述了网络管理系统的组件、功能和基础。</p>
<p>（2）<code>管理域</code></p>
<p>管理对象的集合叫做管理域。管理域的划分可能是基于地理范围的，也可能是基于行政管理的。</p>
<p><strong>（四）网络管理的功能</strong></p>
<p><strong>1、提出几个问题</strong></p>
<ul>
<li><p>网络管理应该解决哪些问题？</p>
</li>
<li><p>网络管理应有哪些功能？</p>
</li>
</ul>
<p><strong>2、ISO在ISO/IEC 7498-4文件中定义了网络管理的5个功能域</strong></p>
<ul>
<li>故障管理（Fault Management）</li>
<li>配置管理（Configuration Management）</li>
<li>安全管理（Security Management）</li>
<li>性能管理（Performance Management）</li>
<li>计费管理（Accounting Management）</li>
</ul>
<p><strong>3、故障管理</strong></p>
<p>（1）<code>定义</code></p>
<p>故障管理（Fault Management）又称失效管理，主要对来自硬件设备或路径节点的报警信息进行监控、报告和存储，以及进行故障的诊断、定位与处理。</p>
<p><code>备注</code>：<code>故障</code>，就是那些引起系统以非正常方式运行的事件。</p>
<p>（2）<code>主要功能</code></p>
<ul>
<li><p><code>故障检测和报警功能</code>：故障监视代理要随时记录网络系统出错的情况和可能引起故障的事件，并把这些信息存储在运行日志数据库中。</p>
</li>
<li><p><code>故障预测功能</code>：对各种可能引起故障的参数建立门限值并随时监视参数值变化，一旦超过门限值，就发送警报。</p>
</li>
<li><p><code>故障诊断和定位功能</code>：对设备和通信线路进行测试，找出故障原因和地点。</p>
</li>
</ul>
<p><strong>4、配置管理</strong></p>
<p>（1）<code>定义</code></p>
<p>配置管理（Configuration Management）它初始化网络、并配置网络，以使其提供网络服务。配置管理的目的是为了实现某个特定功能或使网络性能达到最优。配置管理包括拓扑管理、软件管理和设备管理。</p>
<ul>
<li><p><code>设备管理包括（尤其重要）</code>：</p>
</li>
<li><p><code>布线系统的维护</code>：做好布线系统的日常维护工作，确保底层网络连接完好，是计算机网络正常、高效运行的基础。对布线系统的测试和维护一般借助于双绞线测试仪、光纤测试仪和信道测试仪等;</p>
</li>
<li><p><code>关键设备管理</code>：网络中的关键设备一般包括网络的主干交换机、中心路由器以及关键服务器。</p>
</li>
</ul>
<p>（2）<code>网络配置信息</code></p>
<ul>
<li>网络设备的拓扑关系，即存在性和连接关系；</li>
<li>网络设备的域名、IP地址，即寻址信息；</li>
<li>网络设备的运行特性，即运行参数；</li>
<li>网络设备的备份操作参数，即是否备份、备份启用条件；</li>
<li>网络设备的配置更改条件。</li>
</ul>
<p>（3）<code>主要功能</code></p>
<ul>
<li>定义配置信息；</li>
<li>设置和修改设备属性；</li>
<li>定义和修改网络元素间的互连关系；</li>
<li>启动和终止网络运行；</li>
<li>发行软件；</li>
<li>检查参数值、互连关系和报告配置现状。</li>
</ul>
<p><strong>5、安全管理</strong></p>
<p>（1）<code>定义</code></p>
<p>安全管理（Security Management）主要保护网络资源与设备不被非法访问，以及对加密机构中的密钥进行管理。</p>
<p>（2）网络中需要解决的<code>安全问题</code></p>
<ul>
<li><code>网络数据的私有性</code>：保护网络数据不被侵入者非法获取</li>
<li><code>授权</code>：防止侵入者在网络上发送错误信息</li>
<li><code>访问控制</code>：控制用户对网络资源的访问</li>
</ul>
<p>（3）<code>主要内容</code></p>
<ul>
<li>安全措施相关信息分发</li>
<li>安全相关通知</li>
<li>安全服务措施管理</li>
<li>事件记录和日志管理</li>
</ul>
<p>（4）保证的<code>安全性</code></p>
<ul>
<li>保密性</li>
<li>数据完整性</li>
<li>可用性</li>
</ul>
<p>（6）面对的<code>安全威胁</code></p>
<ul>
<li>伪装的用户</li>
<li>假冒的管理程序</li>
<li>侵入信息交换过程</li>
</ul>
<p><strong>6、性能管理</strong></p>
<p>（1）<code>定义</code></p>
<p>网络性能管理活动是持续地测评网络运行中的主要性能指标，以检验网络服务是否达到了预定的水平，找出已经发生或潜在的网络瓶颈，报告网络性能的变化趋势，为网络管理决策提供依据。</p>
<p>（2）<code>主要内容</code></p>
<p><code>性能监测</code>与<code>网络控制</code>:性能监测指网络工作状态信息的收集和整理；而网络控制则是为改善网络设备的性能而采取的动作和措施。</p>
<p>（3）<code>基本功能</code></p>
<ul>
<li>实时采集与网络性能相关的数据。</li>
<li>分析和统计数据。</li>
<li>维护并检查系统的运行日志。</li>
<li>性能的预警。</li>
<li>生成性能分析报告。</li>
</ul>
<p>（4）常用的网络性能<code>测评指标</code></p>
<ul>
<li>可用性</li>
<li>响应时间</li>
<li>吞吐量</li>
<li>包（帧）延迟</li>
<li>丢包（帧）率</li>
<li>利用率</li>
</ul>
<p>（5）网络性能的<code>测评方法</code></p>
<ul>
<li><p><code>直接测量法</code>：对网络的信道利用率、碰撞分布和吞吐率等参数进行动态数据统计，以得到测评结果。</p>
</li>
<li><p><code>模拟法</code>：给网络建立数学模型，运用仿真程序通过数学计算得出网络相关参数指标。同时也可以与实测结果进行比较，经过多次校正得到真实的测评结果。</p>
</li>
<li><p><code>分析法</code>：通过采用概率论、过程论和排队论等对各种网络进行模拟，其分析结果可用于对未来的网络进行优化设计。</p>
</li>
</ul>
<p><strong>7、计费管理</strong></p>
<p>（1）<code>主要任务</code></p>
<p>根据网络管理部门指定的计费策略，按用户对网络资源的使用情况收取费用。</p>
<p>（2）<code>主要目的</code></p>
<p>计费管理的目的是正确地计算和收取用户使用网络资源及服务的费用，计费管理还要进行网络资源利用率的统计和网络的成本效益核算</p>
<p>（3）<code>主要功能</code></p>
<ul>
<li>计算网络建设及运营成本，包括设备、网络服务、人工费用等成本</li>
<li>统计网络及其所包含的资源的利用率，确定计费标准</li>
<li>将应该缴纳的费用通知用户</li>
<li>支持用户费用上限的设置</li>
<li>在必须用多个通信实体才能完成通信时，能够把使用多个管理对象的费用结合起来</li>
<li>保存收费账单及必要的原始数据，以备用户查询和质疑</li>
</ul>
<p>（4）<code>主要类型</code></p>
<ul>
<li><p><code>基于网络流量计费</code>：网络流量计费是根据用户的网络或者用户的主机在一段时间内使用的网络流量收取用户费用的一种计费方式，主要用于专线（如DDN、E1、X.25线路等）接入用户。</p>
</li>
<li><p><code>基于使用时间计费</code>：使用时间计费是根据用户使用网络的时间长短来收取用户费用的一种计费方式。该如ADSL接入网络的用户</p>
</li>
<li><p><code>基于网络服务计费</code>：网络服务计费是根据用户使用网络服务的次数或时间来收取用户费用的一种计费方式。收取费用的服务包括电子邮件、数据库信息查询、光盘检索、网络游戏等。</p>
</li>
</ul>
<p>（5）<code>子过程</code></p>
<ul>
<li>使用率度量过程；</li>
<li>计费处理过程；</li>
<li>账单管理过程。</li>
</ul>
<p>（6）<code>管理对象</code></p>
<ul>
<li>使用率度量控制对象；</li>
<li>使用率度量数据对象；</li>
<li>使用率记录。</li>
</ul>
<p><strong>（五）网络管理员的职责</strong></p>
<ul>
<li>基础设施管理</li>
<li>操作系统管理</li>
<li>应用系统管理</li>
<li>用户服务与管理</li>
<li>安全保密管理</li>
<li>信息存储备份管理</li>
<li>机房管理</li>
</ul>
<p><strong>（六）网络操作系统</strong></p>
<p><strong>1、网络操作系统的定义</strong></p>
<p>网络操作系统（Network Operating System, NOS）是能够控制和管理网络资源的特殊的操作系统。它实际上是使网络中各计算机能方便而有效地共享网络资源，为网络用户提供所需的各种服务的软件和有关规则的集合，是网络环境下用户与网络资源之间的接口，它通过网络，向网络上的计算机和外部设备提供各种网络服务。</p>
<p><strong>2、网络操作系统的功能</strong></p>
<p>（1）<code>基本功能</code></p>
<ul>
<li>处理机管理</li>
<li>存储器管理</li>
<li>设备管理</li>
<li>文件管理</li>
</ul>
<p>（2）<code>网络管理方面的功能</code></p>
<ul>
<li><code>协调用户</code>：对系统资源进行合理分配和调度；</li>
<li><code>提供网络通信服务</code>；</li>
<li><code>控制用户访问</code>：可对用户进行访问权限的设置，保证系统的安全性和提供可靠的保密方式；</li>
<li><code>管理文件</code>：在网络系统中，各种文件可达上万个，通常是把它们存放在系统中的一个专用设备里，快速、准确、 安全可靠的对文件进行管理是一件非常重要的任务；</li>
<li><code>系统管理</code>：跟踪网络活动，建立和修改网络的服务，管理网络的应用环境。</li>
</ul>
<p><strong>3、常用网络操作系统</strong></p>
<ul>
<li><p><code>Windows操作系统</code>：Windows系列操作系统是Microsoft开发的一种界面友好操作 简便的网络操作系统。</p>
</li>
<li><p><code>UNIX操作系统</code>：UNIX操作系统是麻省理工学院开发一种时分操作系统的基 础上发展起来的网络操作系统。UNIX是一个多用户、多任 务的实时操作系统。<br>Linux操作系统 Linux是芬兰赫尔辛基大学的学生Linux Torvalds开发的具有 UNIX操作系统特征的新一代的开源网络操作系统。</p>
</li>
<li><p><code>NetWare网络操作系统</code>：NetWare服务器对无盘站和游戏的支持较好，常用于教学网 和游戏厅。</p>
</li>
</ul>
<h3 id="三、第一课时作业"><a href="#三、第一课时作业" class="headerlink" title="三、第一课时作业"></a><strong>三、第一课时作业</strong></h3><p><strong>（一）单选题</strong></p>
<p><strong>1、下列哪些不是网络故障管理的功能？</strong></p>
<p>A、故障检测<br>B、故障诊断<br>C、故障修复<br>D、故障排除</p>
<p><code>我的答案：C</code></p>
<p><strong>2、网络管理的功能不包括？</strong></p>
<p>A、功能管理<br>B、配置管理<br>C、计费管理<br>D、故障管理</p>
<p><code>我的答案：A</code></p>
<p><strong>3、现代管理计算机网络系统基本上有4个部分组成，下列不属于此4个部分的为？</strong></p>
<p>A、多个代理<br>B、至少一个网络管理器<br>C、多个管理信息库<br>D、网关</p>
<p><code>我的答案：D</code></p>
<p><strong>4、一个网络管理系统定义的内容不包含？</strong></p>
<p>A、计算机型号<br>B、系统结构<br>C、系统的功能<br>D、网络资源的表示</p>
<p><code>我的答案：A</code></p>
<p><strong>5、下列哪些不属于网络管理标准？</strong></p>
<p>A、WWCP<br>B、CMIS/CMIP<br>C、LMMP<br>D、SNMP</p>
<p><code>我的答案：A</code></p>
<p><strong>6、网络管理的主要职责不包含？</strong></p>
<p>A、操作系统管理<br>B、基础设施管理<br>C、用户服务与管理<br>D、程序设计</p>
<p><code>我的答案：D</code></p>
<p><strong>7、掌管机房设备供电线布线情况，需要在增减设备时注意什么的合理配置？</strong></p>
<p>A、负载<br>B、适配器<br>C、电源<br>D、文件</p>
<p><code>我的答案：D</code></p>
<p><strong>8、不属于常用的网络操作系统主要有？</strong></p>
<p>A、OPPO<br>B、Windows<br>C、Linux<br>D、UNIX</p>
<p><code>我的答案：A</code></p>
<p><strong>9、以下符合即插即用、多任务、对称多处理和群集功能的操作系统的是？</strong></p>
<p>A、Netware<br>B、Linux<br>C、Windows<br>D、UNIX</p>
<p><code>我的答案：C</code></p>
<p><strong>10、不属于安全管理的主要内容的是？</strong></p>
<p>A、记录、维护和浏览安全日志，以便对安全问题进行事后分析。<br>B、创建、控制和删除与安全有关的服务和设施。<br>C、设置开放系统中有关路由操作的参数。<br>D、分布和设置与安全措施有关的各种信息，如密钥的分发、访问权限的设置。</p>
<p><code>我的答案：D</code></p>
<p><strong>（二）多选题</strong></p>
<p><strong>1、下列属于网络故障管理的是？</strong></p>
<p>A、故障诊断<br>B、故障修复<br>C、故障检测<br>D、故障重启</p>
<p><code>我的答案：BC</code></p>
<p><strong>2、通常对一个网络管理系统需要定义以下内容？</strong></p>
<p>A、网络资源的表示<br>B、网络管理信息的表示<br>C、系统的功能<br>D、系统的结构</p>
<p><code>我的答案：ABC</code></p>
<p><strong>3、下列属于网络管理标准的是？</strong></p>
<p>A、SNMP<br>B、CMIS/CMIP<br>C、LMMP<br>D、CMOT</p>
<p><code>我的答案：ABC</code></p>
<p><strong>4、以下属于网络操作系统功能的为？</strong></p>
<p>A、提供网络通信服务<br>B、协调用户，对系统资源进行合理分配和调度<br>C、控制用户访问<br>D、系统管理</p>
<p><code>我的答案：BD</code></p>
<p><strong>5、网络管理模式包括？</strong></p>
<p>A、集中式网络管理模式<br>B、分布式网络管理模式<br>C、混合式网络管理模式<br>D、C/S式网络管理模式</p>
<p><code>我的答案：ABD</code></p>
<p><strong>（三）判断题</strong></p>
<p>1、网络管理员的主要职责有以下几个方面：基础设施管理、操作系统管理、应用系统管理、用户服务与管理、安全保密管理、信息存储备份管理和机房管理。</p>
<p><code>我的答案： √</code></p>
<p>2、网络操作系统除了具有一般操作系统的处理机管理、存储器管理、设备管理及文件管理的基本功能外，还具有网络管理方面的功能。</p>
<p><code>我的答案： √</code></p>
<p>3、性能管理用来评估系统资源的运行状况及通信效率等系统性能。主要功能包括初始化网络、配置网络使其提供网络服务。</p>
<p><code>我的答案： ×</code></p>
<p>4、公共管理信息服务CMIS定义了每个网络组成部分提供的网络管理服务，公共管理信息协议CMIP则是实现CMIS服务的协议。</p>
<p><code>我的答案： ×</code></p>
<p>5、简单网络管理协议SNMP的优点是复杂和广泛的使用和支持。</p>
<p><code>我的答案： ×</code></p>
<p><strong>（四）简答题</strong></p>
<p><strong>1、什么是网络管理？网络管理的目标是什么？</strong></p>
<p><code>正确答案：</code></p>
<p>网络管理是指对网络的运行状态进行监测和控制，并能提供有效、可靠、安全、经济的服务。</p>
<p>网络管理的目标是使网络的性能达到最优化状态。通过网络管理，要能够预知潜在的网络故障，采取必要的措施加以预防和处理，达到零停机；通过监控网络性能，调整网络运行配置，提高网络性能；借助有效的性能尺度和评估方法，扩充和规划网络的发展。所以网络管理的根本目标就是最大限度地满足网络管理者和网络用户对计算机网络的有效性、可靠性、开放性、综合性、安全性和经济性的要求。</p>
<p><strong>2、集中式网络管理和分布式网络管理有什么区别？各有什么优缺点？</strong></p>
<p><code>正确答案：</code></p>
<p>集中式网络管理模式是由一个网络管理者对整个网络的管理负责。网络管理者处理所有来自被管理系统上的管理代理的通信信息，为全网提供集中的决策支持，并控制和维护管理工作站上的信息存储。</p>
<p>分布式管理将数据采集、监视以及管理分散开来，它可以从网络上的所有数据源采集数据而不必考虑网络的拓扑结构，为网络管理员提供更加有效的、大型的、地理分布广泛的网络管理方案。</p>
<p>集中式网络管理模式的优点是管理集中，有专人负责，有利于从整个网络系统的全局对网络实施较为有效的管理；缺点是管理信息集中汇总到网络管理中心节点上，导致网络信息流比较拥挤，管理不够灵活，管理节点如果发生故障有可能影响全网正常工作。</p>
<p>分布式网络管理模式的优点是随着网络的扩展，监视智能及任务职责会同时不断地分布开来，即提供了很好的扩展性，同时也降低了管理的复杂性。将管理任务都分布到各域的管理者，使网络管理更加稳固可靠，也提高了网络性能，并且使网络管理在通信和计算方面的开销大大减少。</p>
<p><strong>3、网络管理的5大功能是什么？</strong></p>
<p><code>正确答案：</code></p>
<p>网络管理的5个功能域：故障管理（Fault Management）、配置管理（Configuration Management）、安全管理（Security Management）、性能管理（Performance Management）、计费管理（Accounting Management）。</p>
]]></content>
      <categories>
        <category>网络管理基础知识</category>
      </categories>
      <tags>
        <tag>网络管理</tag>
      </tags>
  </entry>
  <entry>
    <title>Python入门基础知识学习（二）</title>
    <url>/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<p><strong>Python内置函数</strong></p>
<p>Python内置函数有很多，这里只介绍<code>print()</code>和<code>len()</code>，查看更多内置函数，请参照<a href="https://www.cnblogs.com/pyyu/p/6702896.html">python内置函数大全</a>。Python内置函数是通用的函数，它们不属于字符串或数字或其他类型的对象。</p>
<a id="more"></a>

<p>使用<code>len()</code>函数返回当前字符串长度，并使用<code>print()</code>函数输出。</p>
<p>（1）举例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;Python for Beginners&#39;</span><br><span class="line">print(len(course))</span><br></pre></td></tr></table></figure>

<p>（2）应用</p>
<p>使用<code>len()</code>函数我们可以对输入的字符串长度予以限制。例如：在输入栏，如果用户输入的字符串长度超出限制范围，我们可以显示一个错误。</p>
<p><strong>Python字符串内置函数</strong></p>
<p>Python的字符串内置函数有很多，这里只介绍以下几种，查看更多字符串内置函数请参照<a href="https://www.cnblogs.com/passagain/p/11395490.html">Python字符串内置函数</a>。Python字符串内置函数是特定的函数，它们的特定使用对象为字符串。</p>
<p>（1）举例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;Python for Beginners&#39;</span><br><span class="line">course.upper()</span><br><span class="line">course.lower()</span><br><span class="line">course.title()</span><br><span class="line">course.find()</span><br><span class="line">course.replace(,)</span><br></pre></td></tr></table></figure>

<p>（2）具体应用</p>
<ul>
<li><code>upper()</code>，将字符转换为大写字母</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(course.upper())</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：使用<code>upper函数</code>不会改变原来的字符串，事实上它创建一个新的字符串并返回它。</p>
<ul>
<li><code>lower()</code>，将字符转换为小写字母</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(course.lower())</span><br></pre></td></tr></table></figure>

<ul>
<li><code>find()</code>，在字符串中查找一个指定字符或字符串，没有找到返回-1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;Python for Beginners&#39;</span><br><span class="line">print(course.find(&#39;P&#39;))</span><br><span class="line"># 字符串中第一个大写P的索引是0，则返回0</span><br><span class="line">print(course.find(&#39;o&#39;))</span><br><span class="line">print(course.find(&#39;O&#39;))</span><br><span class="line"># 在这个字符串中没有大写字母O，则返回-1</span><br><span class="line">print(course.find(&#39;Beginners&#39;))</span><br><span class="line"># 返回指定字符串的首字符在该字符串中的索引，字符串中第一个大写B的索引是11，则返回11</span><br></pre></td></tr></table></figure>

<ul>
<li><code>replace(,)</code>，替换字符或字符串为指定字符或字符串，逗号左边为原值，逗号右边替换值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;Python for Beginners&#39;</span><br><span class="line">print(course.replace(&#39;Beginners&#39;,&#39;Absolute Beginners&#39;))</span><br><span class="line"># find和replace方法都是区分大小写的</span><br><span class="line">print(course.replace(&#39;beginners&#39;,&#39;Absolute Beginners&#39;))</span><br><span class="line"># replace方法如果在字符串中没有找到该字符串，不做任何改变</span><br><span class="line">print(course.replace(&#39;P&#39;,&#39;J&#39;))</span><br><span class="line"># 替换单个字符</span><br></pre></td></tr></table></figure>

<p>（3）<code>in</code> 在字符串中的使用</p>
<ul>
<li>检查字符或字符串是否在当前字符串中时，使用<code>in</code>操作符，表达式产生布尔值，返回<code>True</code>或<code>False</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;Python for Beginners&#39;</span><br><span class="line">print(&#39;Python&#39; in course)</span><br><span class="line"># 检查字符串中是否存在&#96;python&#96;字符串，</span><br><span class="line">print(&#39;python&#39; in course)</span><br><span class="line"># in操作符在使用时区分大小写，&#39;python&#39;在当前字符串中不存在，所以返回False</span><br></pre></td></tr></table></figure>

<p><strong>Python支持的算术运算</strong></p>
<p>（1）加法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(10 + 3)</span><br></pre></td></tr></table></figure>

<p>（2）减法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(10 - 3)</span><br></pre></td></tr></table></figure>

<p>（3）乘法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(10 * 3)</span><br></pre></td></tr></table></figure>

<p>（4）两种除法</p>
<ul>
<li>第一种：一个正斜杆，返回浮点数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(9 &#x2F; 3)</span><br></pre></td></tr></table></figure>

<ul>
<li>第二种：两个正斜杆，返回整数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(9 &#x2F;&#x2F; 3)</span><br></pre></td></tr></table></figure>

<p>（5）操作符 <code>%</code>，返回进行了除法后的余数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(10 % 3)</span><br></pre></td></tr></table></figure>

<p>（6）指数运算，也就是幂运算</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(10 ** 3)</span><br></pre></td></tr></table></figure>

<p>（7）增强型赋值运算符</p>
<ul>
<li>传统方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; 10</span><br><span class="line">x &#x3D; x + 3</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure>

<ul>
<li>使用增强型赋值运算符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; 10</span><br><span class="line">x +&#x3D; 3</span><br><span class="line">print(x)</span><br><span class="line">x -&#x3D; 3</span><br><span class="line">print(x)</span><br><span class="line">x *&#x3D; 3</span><br><span class="line">print(x)</span><br><span class="line">x &#x2F;&#x3D; 3</span><br><span class="line">print(x)</span><br><span class="line">x &#x2F;&#x2F;&#x3D; 3</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure>

<ul>
<li>查看更多增强型赋值运算符，请查看<a href="https://www.cnblogs.com/yi-xixi/p/10973218.html">python中增强型赋值运算符</a></li>
</ul>
<p>（8）运算符的优先级，从高到低</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">parenthesis    eg:()</span><br><span class="line">exponentiation    eg:2**3</span><br><span class="line">multiplication or division    eg:2*3 or 2&#x2F;3</span><br><span class="line">addition or subtraction    eg:2+3 or 2-3</span><br></pre></td></tr></table></figure>

<p>（9）举例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; 10 + 3 * 2</span><br><span class="line">print(x)</span><br><span class="line">x &#x3D; 10 + 3 * 2 ** 2</span><br><span class="line">print(x)</span><br><span class="line">x &#x3D; (10 + 3) * 2 ** 2</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure>

<p>（10）使用练习</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; (2 + 3) * 10 - 2</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure>

<p><strong>Python处理数字的常用函数</strong></p>
<p>（1）使用<code>round()</code>函数返回浮点数x的四舍五入值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; 2.9</span><br><span class="line">print(round(x))</span><br><span class="line"># 返回3</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：更多关于round()函数的使用方法，请参照<a href="https://www.runoob.com/python/func-number-round.html">Python round() 函数</a></p>
<p>（2）使用<code>abs()</code>函数，返回给定值的绝对值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; -2.9</span><br><span class="line">print(abs(x))</span><br><span class="line"># 返回2.9</span><br></pre></td></tr></table></figure>

<p><strong>导入数学模块</strong></p>
<p>在Python中，模块是一个可重用性的独立文件代码</p>
<p>（1）导入方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import math</span><br><span class="line">print(math.ceil(2.9))</span><br><span class="line">print(math.floor(2.9))</span><br></pre></td></tr></table></figure>

<p>（2）了解更多数学函数，请参照<a href="https://docs.python.org/zh-cn/3.7/library/math.html">Python的数学函数</a></p>
<p><code>备注</code>：Python2和Python3的数学模块稍有不同。</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title>Python入门基础知识学习（一）</title>
    <url>/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h3 id="Python是什么"><a href="#Python是什么" class="headerlink" title="Python是什么?"></a><strong>Python是什么?</strong></h3><p><code>Python</code>（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。</p>
<p>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议 。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在我们使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。</p>
<p><code>备注</code>：想要了解更多关于Python的介绍，大家可以前往W3Cschool的<a href="https://www.w3cschool.cn/python/">Python编程入门教程</a>查看。</p>
<a id="more"></a>

<h3 id="初学者学习python2还是python3？"><a href="#初学者学习python2还是python3？" class="headerlink" title="初学者学习python2还是python3？"></a><strong>初学者学习python2还是python3？</strong></h3><p>在开始学习python的时候，我们都会遇到一个比较让人很头疼的问题：版本问题！是学习python2 还是学习 python3 ？这是非常让人纠结的！搜索一下我们便会发现python3 和 python2 是不兼容的，而且差异比较大，到底学习哪个版本呢？就以下几个方面我们来分析一下：</p>
<p><strong>语法设计</strong></p>
<p>当初设计 Python3 的目的是没有代码兼容的包袱的情况下改进 Python，所以python3有很大改进，比 Python2更容易理解，更加合理。</p>
<p><strong>现状分析</strong></p>
<ul>
<li><p>PyPy，各大 Web 框架，科学计算包，Scrapy 等常用模块， 都已经很好的支持Python3。 但是还有部分比较陈旧的库已经无人维护， 也就没有支持最新的Python3，不过不用担心， 这些库往往是不常用的，或者说可以找到替代方案。</p>
</li>
<li><p>大部分的情况下可以直接写 2/3 兼容的代码，也有 six 这类的兼容层可用。</p>
</li>
<li><p>python2对旧库的支持要更多一些，至少在学界还是更流行的。</p>
</li>
</ul>
<p><strong>选择理由</strong></p>
<ul>
<li><p>Python3 才是Python的未来</p>
</li>
<li><p>Python官方都建议指直接学习Python3</p>
</li>
<li><p>Python2 据说只维护到2020年</p>
</li>
</ul>
<p><strong>总结</strong></p>
<p>先学 Python2 还是 Python3 都不是问题，其实差别并不大， 主要的是下定决心学下去， 当我们学会了Python3， Python2代码开发完全没有问题！但是，我还是推荐直接学习Python3，毕竟它的语法更合理，更新。除非我们的外部环境只能允许我们使用Python2。</p>
<p><code>以上仅代表我的个人观点!</code></p>
<h3 id="Python学习资源推荐"><a href="#Python学习资源推荐" class="headerlink" title="Python学习资源推荐"></a><strong>Python学习资源推荐</strong></h3><p><strong>入门基础教学视频推荐</strong></p>
<p>本人关于Python入门基础知识学习的系列博客都是基于B站的Python教学视频撰写，感兴趣的小伙伴们可以去看看，个人感觉讲得很不错，点击<a href="https://www.bilibili.com/video/av75855831?from=search&seid=12944208087680536242">Python教程2019版</a>即可跳转B站进行观看。</p>
<p><strong>入门教程推荐</strong></p>
<p>这里推荐W3Cschool的入门教程，内容非常详细，还有配套练习，大家可以点击<a href="https://www.w3cschool.cn/python3/">W3Cschool的Python板块</a>浏览。</p>
<h3 id="开始Python的学习"><a href="#开始Python的学习" class="headerlink" title="开始Python的学习"></a><strong>开始Python的学习</strong></h3><p><strong>新建一个python的项目工程</strong></p>
<ul>
<li><p>1、打开<code>PyCharm</code></p>
</li>
<li><p>2、点击<code>File</code>-&gt;点击<code>New Project</code></p>
</li>
</ul>
<p><img src="/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/001.jpg" alt></p>
<ul>
<li>填写自己的Python项目名称及路径后，点击<code>Create</code></li>
</ul>
<p><img src="/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/002.jpg" alt></p>
<p><code>备注</code>：<code>Base interpreter</code>选项中需要选择Python3版本的解释器</p>
<ul>
<li>选中自己创建好的Python项目，右击选择<code>New</code>，并在出现的选项框中选择<code>Python File</code></li>
</ul>
<p><img src="/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/003.jpg" alt></p>
<ul>
<li>填写python文件的名称，点击<code>OK</code></li>
</ul>
<p><img src="/2020/03/17/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/004.jpg" alt></p>
<p><strong>第一个任务：画一个自己喜欢的形状</strong></p>
<p>1、涉及的知识点</p>
<p>Python两种输出值的方式: 表达式语句和 print() 函数。这里只介绍：<code>print()函数</code></p>
<p>2、练习使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(&quot;张之卿&quot;)</span><br><span class="line">print(&#39;O----&#39;)</span><br><span class="line">print(&#39; ||||&#39;)</span><br><span class="line">print(&#39;*&#39; * 10)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：搞清楚双引号或者单引号来定义字符串的区别——定义一个字符串单引号或者双引号都可以，但有时存在特殊情况，详细见后文。</p>
<p>3、任务解决</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(&#39; --  --&#39;)</span><br><span class="line">print(&#39;| |__| |&#39;)</span><br><span class="line">print(&#39;|      |&#39;)</span><br><span class="line">print(&#39;|______|&#39;)</span><br></pre></td></tr></table></figure>

<p><strong>第二个任务：<code>We check in a patient named John Smith.He&#39;s 20 years old and is a new patient.</code>根据内容定义三个变量——<code>他的名字</code>、<code>他的年龄</code>、和另一个变量<code>他是否是新病人</code></strong></p>
<p>1、涉及的知识点</p>
<p>python基本数据类型如下表所示：</p>
<table>
<thead>
<tr>
<th>表示</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>int</td>
<td>整数，用来进行数学运算</td>
</tr>
<tr>
<td>str</td>
<td>字符串，存放少量数据</td>
</tr>
<tr>
<td>bool</td>
<td>布尔值，用来判断True，False</td>
</tr>
<tr>
<td>list</td>
<td>列表，存放大量数据，[ ]表示</td>
</tr>
<tr>
<td>tuple</td>
<td>元组，只读列表，( ) 表示</td>
</tr>
<tr>
<td>dict</td>
<td>字典，存放大量数据，{key:value}表示</td>
</tr>
<tr>
<td>set</td>
<td>集合，存放大量数据，不重复</td>
</tr>
</tbody></table>
<p>这里只介绍三种基本数据类型：<code>int</code>，<code>bool</code>，<code>str</code></p>
<p>2、使用练习</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">number &#x3D; 12</span><br><span class="line">number &#x3D; 20</span><br><span class="line">price &#x3D; 4.6</span><br><span class="line">name &#x3D; &#39;Zhang Zhiqing&#39;</span><br><span class="line">is_right &#x3D; True</span><br><span class="line">is_right &#x3D; False</span><br><span class="line"># python严格区分大小写</span><br><span class="line">print(number)</span><br><span class="line">print(price)</span><br><span class="line">print(name)</span><br><span class="line">print(is_right)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：python语句是从上往下逐行运行的，一个变量可以多次赋值，但最终的值以最后一次赋值为准。</p>
<p>3、任务解决</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">h_name &#x3D; &quot;John Smith&quot;</span><br><span class="line">h_age &#x3D; 20</span><br><span class="line">is_new_patient &#x3D; True</span><br></pre></td></tr></table></figure>

<p><strong>第三个任务：Ask two questions:person’s name and favorite color.Then,print a message like “Zhang Zhiqing likes blue.”</strong></p>
<p>1、涉及的知识点</p>
<p>Python3.x 中 <code>input()</code> 函数接受一个标准输入数据，返回为 <code>string 类型</code>。</p>
<p>2、使用练习</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name &#x3D; input(&#39;What is your name? &#39;)</span><br><span class="line">print(&#39;Hello &#39; + name)</span><br></pre></td></tr></table></figure>

<p>3、任务解决</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name &#x3D; input(&#39;What is your name? &#39;)</span><br><span class="line">color &#x3D; input(&#39;What is your favorite color? &#39;)</span><br><span class="line">print(name + &#39; likes &#39; + color + &#39;.&#39;)</span><br></pre></td></tr></table></figure>

<p><strong>第四个任务：Ask a user their weight(in pounds),convert it to kilograms and print on the terminal.</strong></p>
<p>1、涉及的知识点</p>
<p>Python数据类型的<code>显示转换</code>，也称为数据类型的<code>强制类型转换</code>，是通过Python的内建函数来实现的类型转换。</p>
<p>（1）<code>Python显式转换</code>的多种类型如下表所示：</p>
<table>
<thead>
<tr>
<th>表示</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>int(x [,base])</td>
<td>将x转换为一个十进制的整数</td>
</tr>
<tr>
<td>long(x [,base])</td>
<td>将x转换为一个十进制的长整数</td>
</tr>
<tr>
<td>float(x)</td>
<td>将x转换为一个浮点数</td>
</tr>
<tr>
<td>str(object)</td>
<td>转换为字符串</td>
</tr>
<tr>
<td>repr(object)</td>
<td>转换为表达式字符串</td>
</tr>
<tr>
<td>eval(str)</td>
<td>用来计算在字符串中的有效Python表达式,并返回一个对象</td>
</tr>
<tr>
<td>tuple(seq)</td>
<td>将序列seq转换为一个元组</td>
</tr>
<tr>
<td>list(seq)</td>
<td>将序列seq转换为一个列表</td>
</tr>
<tr>
<td>chr(x)</td>
<td>将一个整数转换为一个字符</td>
</tr>
<tr>
<td>unichr(x)</td>
<td>将一个整数转换为Unicode字符</td>
</tr>
<tr>
<td>chr(x)</td>
<td>将一个整数转换为一个字符</td>
</tr>
<tr>
<td>ord(x)</td>
<td>将一个字符转换为它的整数值</td>
</tr>
<tr>
<td>hex(x)</td>
<td>将一个整数转换为一个十六进制字符串</td>
</tr>
<tr>
<td>oct(x)</td>
<td>将一个整数转换为一个八进制字符串</td>
</tr>
</tbody></table>
<p>（2）Python中bool类型转换：<code>bool()</code>，比较特殊</p>
<p>在python中，以下数值会被认为是False，其他的值都认为是True：</p>
<ul>
<li>为0的数字，包括  <code>0，0.0</code></li>
<li>空字符串，包括 <code>&#39;&#39;，&quot;&quot;</code></li>
<li>表示空值的  <code>None</code></li>
<li>空集合，包括 <code>()，[]，{}</code></li>
</ul>
<p><code>备注</code>：None是python中的一个特殊值，表示什么都没有，它和0、空字符、False、空集合都不一样；bool(‘False’)的结果是True，因为’False’是一个不为空的字符串，当被转换成bool类型之后，就得到True；bool(‘ ‘)的结果是True，一个空格不能算作空字符串，bool(‘’)才是False。</p>
<p>此次练习中我们只介绍两种常用的强制类型转换：<code>int()</code>，<code>str()</code></p>
<p>2、使用练习</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">birth_year &#x3D; input(&#39;Birth year: &#39;)</span><br><span class="line"># birth_year &#x3D; &#39;1997&#39; !&#x3D; 1997</span><br><span class="line"># 2019 - &#39;1997&#39; python不知道这是什么意思</span><br><span class="line">print(type(birth_year))</span><br><span class="line">age &#x3D; 2019 - int(birth_year)</span><br><span class="line">print(type(age))</span><br><span class="line">print(age)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：type() 方法的语法：（1）<code>type(object)</code>（2）<code>type(name, bases, dict)</code>。<code>type()</code> 函数如果我们只有第一个参数则返回对象的类型，有三个参数则返回新的类型对象。具体用法及实例请参照：<a href="https://www.runoob.com/python/python-func-type.html">Python type() 函数</a></p>
<p>3、任务解决</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">weight_lbs &#x3D; input(&#39;What is your weight in pounds? &#39;)</span><br><span class="line">weight_kg &#x3D; int(weight_lbs) * 0.45</span><br><span class="line">print(str(weight_kg) + &#39; kg &#39;)</span><br></pre></td></tr></table></figure>

<p><strong>单行字符串定义的特殊情况</strong></p>
<p>1、使用练习</p>
<p>（1）第一种情况：字符串中需要使用单引号时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &quot;Python&#39;s Course for Beginners&quot;</span><br><span class="line">print(course)</span><br></pre></td></tr></table></figure>

<p>（2）第一种情况：字符串中需要使用双引号时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;Python for &quot;Beginners&quot;&#39;</span><br><span class="line">print(course)</span><br></pre></td></tr></table></figure>

<p>2、总结</p>
<p>字符串中有需要用到单引号的地方，那么整个字符串就用双引号定义；<br>字符串中有需要用到双引号的地方，那么整个字符串就用单引号定义。</p>
<p><strong>多行字符串如何定义</strong></p>
<p>1、使用练习</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;&#39;&#39;</span><br><span class="line">Hi John,</span><br><span class="line">    Here is our first email to you.</span><br><span class="line">                         Thank you,</span><br><span class="line">                  The support team.</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(course)</span><br></pre></td></tr></table></figure>

<p>2、总结</p>
<p>使用三引号定义多行字符串，三引号既可以是三个单引号也可以是三个双引号。</p>
<p><strong>Python 字符串的索引</strong></p>
<p>字符串是字符的有序集合，可以通过其位置来获得具体的元素。在 python 中，字符串中的字符是通过索引来提取的，索引从 0 开始。</p>
<p>python 可以取负值，表示从末尾提取，最后一个为 -1，倒数第二个为 -2，即程序认为可以从结束处反向计数。</p>
<p>1、练习使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">course &#x3D; &#39;Python for Beginners.&#39;</span><br><span class="line"># 索引号   0123456789</span><br><span class="line">print(course[0])</span><br><span class="line">print(course[-1])</span><br><span class="line">print(course[0:3])</span><br><span class="line"># python解释器会返回从索引0一直到索引3，但不包括索引3的字符串。</span><br></pre></td></tr></table></figure>

<p>2、几种情况</p>
<p>（1）用户不提供结束索引：<code>print(course[0:])</code></p>
<p>python解释器在用户不提供结束索引的情况下默认会返回从指定索引到末尾的字符串。</p>
<p>（2）用户不提供开始索引：<code>print(course[:5])</code></p>
<p>python解释器在用户不提供开始索引的情况下默认会返回从索引0到指定索引的字符串。</p>
<p>（3）用户既不提供开始索引也不提供结束索引：<code>print(course[:])</code></p>
<p>python解释器在用户不提供开始索引和结束索引的情况下默认会返回从索引0到末尾的所有字符串。</p>
<p>（4）用户提供的结束索引为负数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name &#x3D; &#39;Zhang Zhiqing&#39;</span><br><span class="line"># 索引号 0123456789</span><br><span class="line">print(name[1:-1])</span><br></pre></td></tr></table></figure>

<p>python解释器会返回从索引1一直到倒数第1个索引，但不包括倒数第1个索引的字符串。</p>
<p>3、利用这个语法，我们可以复制或克隆一个字符串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">another &#x3D; course[:]</span><br><span class="line">print(another)</span><br></pre></td></tr></table></figure>

<p><strong>Python格式化字符串<code>f-string</code></strong></p>
<p>f-string，亦称为格式化字符串常量（formatted string literals），是Python3.6新引入的一种字符串格式化方法，该方法源于PEP 498 – Literal String Interpolation，主要目的是使格式化字符串的操作更加简便。f-string在形式上是以 f 或 F 修饰符引领的字符串（f’xxx’ 或 F’xxx’），以大括号 {} 标明被替换的字段。</p>
<p>1、使用练习</p>
<p>目标：输出<code>John [Smith] is a coder.</code></p>
<p>（1）传统方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">first &#x3D; &#39;John&#39;</span><br><span class="line">last &#x3D; &#39;Smith&#39;</span><br><span class="line">message &#x3D; first + &#39; [&#39; + last + &#39;] is a coder.&#39;</span><br><span class="line">print(message)</span><br></pre></td></tr></table></figure>

<p>（2）使用格式化字符串<code>f-string</code>输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">first &#x3D; &#39;John&#39;</span><br><span class="line">last &#x3D; &#39;Smith&#39;</span><br><span class="line">msg &#x3D; f&#39;&#123;first&#125; [&#123;last&#125;] is a coder.&#39;</span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure>

<p>2、总结</p>
<p>格式化字符串常量，<code>f-string</code>用大括号<code>{}</code>表示被替换字段，其中直接填入替换内容。相比较传统的字符串输出，格式化字符串常量的输出方法使我们可以很容易看出最后的输出结果是怎样的。</p>
<p><code>备注</code>：更多关于f-string的介绍和使用方法，请参照<a href="https://blog.csdn.net/sunxb10/article/details/81036693">sunxb10的博客</a></p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title>Python的安装与使用</title>
    <url>/2020/03/16/Python%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="Python的下载与安装"><a href="#Python的下载与安装" class="headerlink" title="Python的下载与安装"></a><strong>Python的下载与安装</strong></h3><p><strong>操作环境</strong></p>
<p><code>Windows 10</code></p>
<p><strong>Python下载</strong></p>
<p>进入<a href="https://www.python.org/">Python官网</a>，下载最新版Python.</p>
<a id="more"></a>

<p><img src="/2020/03/16/Python%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/001.jpg" alt></p>
<p><img src="/2020/03/16/Python%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/002.jpg" alt></p>
<p><img src="/2020/03/16/Python%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/003.jpg" alt></p>
<p><code>备注</code>：建议使用迅雷下载，官网下载速度太慢。</p>
<p><strong>Python安装</strong></p>
<p>1、下载后，双击下载包，进入 Python 安装向导，安装非常简单，你只需要使用默认的设置一直点击”下一步”直到安装完成即可。</p>
<p><code>备注</code>：在打开的安装界面，一定要记得把下方的<code>Add Python  3.8  to PATH</code>勾选上，这样就直接默认把用户变量添加上了，后续不用再添加。</p>
<p>2、安装结束后，通过<code>win+R</code>打开<code>cmd</code>，在cmd中键入命令<code>python --version</code>，则可看到成功安装的Python版本。</p>
<h3 id="Python编辑器的下载与安装"><a href="#Python编辑器的下载与安装" class="headerlink" title="Python编辑器的下载与安装"></a><strong>Python编辑器的下载与安装</strong></h3><p><strong>Python编辑器的推荐</strong></p>
<p>在这里，推荐使用<code>PyCharm</code>，PyCharm 在大佬们经常推荐的python编辑器中，是好评率比较高的一个。而且可以跨平台，在macos和windows下面都可以用，这点比较好。是python现在最好用的编辑器，没有之一。</p>
<p><strong>PyCharm的下载与安装</strong></p>
<p>1、PyCharm的下载</p>
<p>打开<a href="www.jetbrains.com/pycharm/">PyCharm官网</a>，请根据机器是64位还是32位来选择对应的PyCharm版本，下载对应机器的安装包。</p>
<p><code>备注</code>：由于官网部分人员无法打开更无法下载，这里提供<a href="https://pan.baidu.com/s/1jIF5GZ8Ag6FkqrnqB5nN5A">社区版PyCharm2018.3.3</a>的百度云资源，<code>提取码：0zp0</code>，点击即可跳转到百度云进行下载。</p>
<p>2、PyCharm的安装</p>
<p>下载后，双击下载包，进入 PyCharm 安装向导，安装非常简单，这里需要注意两点：</p>
<p>（1）选择安装目录时，Pycharm需要的内存较多，建议将其安装在其他本地磁盘，不建议放在系统盘。</p>
<p>（2）在安装设置<code>Installation Options</code>界面，勾选要求如下图：</p>
<p><img src="/2020/03/16/Python%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/004.jpg" alt></p>
<ul>
<li><p><code>create desktop shortcut</code>（创建桌面快捷方式），系统32位就勾选32-bit，系统64位就勾选64-bit</p>
</li>
<li><p><code>update path variable(restart needed)</code>更新路径变量(需要重新启动)，<code>add launchers dir to the path</code>（将启动器目录添加到路径中），上一个PyCharm版本没有的，所以不勾选</p>
</li>
<li><p><code>update context menu</code>（更新上下文菜单），<code>add open folder as project</code>（添加打开文件夹作为项目），上一个PyCharm版本没有的，所以不勾选</p>
</li>
<li><p><code>create associations</code> 创建关联，关联<code>.py</code>文件，双击都是以pycharm打开，需要勾选</p>
</li>
<li><p><code>Download and install JRE x86 by JetBrains</code>千万不要勾选！！！pycharm网站服务器在国外，下载速度很慢，如果勾选可能等一两个小时，没勾选安装很快完成</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>考研数学中的高中数学知识（三）</title>
    <url>/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h3 id="五、函数的基本特性"><a href="#五、函数的基本特性" class="headerlink" title="五、函数的基本特性"></a><strong>五、函数的基本特性</strong></h3><p><strong>6、一些总结性的结论</strong></p>
<p>（1）设f(x)在定义域[-a,a]上连续</p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/001.jpg" alt></p>
<ul>
<li>例题11</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/002.jpg" alt></p>
<a id="more"></a>

<p>（2）设f(x)是连续的周期函数，周期为T，则有</p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/003.jpg" alt></p>
<ul>
<li>理解</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/004.jpg" alt></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/005.jpg" alt></p>
<p>（3）设f(x)，g(x)在定义域[a,b]上连续，b&gt;=a，则有</p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/006.jpg" alt></p>
<ul>
<li>例题12</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/007.jpg" alt></p>
<h3 id="六、常见不等式"><a href="#六、常见不等式" class="headerlink" title="六、常见不等式"></a><strong>六、常见不等式</strong></h3><p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/008.jpg" alt></p>
<p><strong>1、理解与证明（只证明3、4，此为重点）</strong></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/009.jpg" alt></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/010.jpg" alt></p>
<p><strong>2、考研考点与例题</strong></p>
<ul>
<li>例题13</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/011.jpg" alt></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/012.jpg" alt></p>
<h3 id="七、等比数列"><a href="#七、等比数列" class="headerlink" title="七、等比数列"></a><strong>七、等比数列</strong></h3><p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/013.jpg" alt></p>
<p><strong>1、考研考点与例题</strong></p>
<ul>
<li>考研考点</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/014.jpg" alt></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/015.jpg" alt></p>
<ul>
<li>例题14</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/016.jpg" alt></p>
<h3 id="八、排列（组合）数公式"><a href="#八、排列（组合）数公式" class="headerlink" title="八、排列（组合）数公式"></a><strong>八、排列（组合）数公式</strong></h3><p><strong>1、相关定义</strong></p>
<ul>
<li>排列数定义</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/017.jpg" alt></p>
<ul>
<li>组合数定义</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/018.jpg" alt></p>
<p><strong>2、相关公式</strong></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/019.jpg" alt></p>
<p><strong>3、理解</strong></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/020.jpg" alt></p>
<h3 id="九、图形面积与体积"><a href="#九、图形面积与体积" class="headerlink" title="九、图形面积与体积"></a><strong>九、图形面积与体积</strong></h3><p><strong>1、扇形</strong></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/021.jpg" alt></p>
<p><strong>2、柱体</strong></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/022.jpg" alt></p>
<p><strong>3、理解</strong></p>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/023.jpg" alt></p>
<p><strong>4、考研考点与例题</strong></p>
<p><strong>（1）极坐标下平面图形的面积</strong></p>
<ul>
<li>定义</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/024.jpg" alt></p>
<ul>
<li>理解</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/025.jpg" alt></p>
<ul>
<li>拓展</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/026.jpg" alt></p>
<p><strong>（2）极坐标下旋转体的体积</strong></p>
<ul>
<li>定义</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/027.jpg" alt></p>
<ul>
<li>理解</li>
</ul>
<p><img src="/2020/03/14/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89/028.jpg" alt></p>
]]></content>
      <categories>
        <category>考研2021</category>
      </categories>
      <tags>
        <tag>考研</tag>
        <tag>数学一</tag>
      </tags>
  </entry>
  <entry>
    <title>考研数学中的高中数学知识（二）</title>
    <url>/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h3 id="四、三角函数及反三角函数相关公式"><a href="#四、三角函数及反三角函数相关公式" class="headerlink" title="四、三角函数及反三角函数相关公式"></a><strong>四、三角函数及反三角函数相关公式</strong></h3><p><strong>（三）积分三角换元</strong></p>
<p><strong>1、考研考点与例题</strong></p>
<ul>
<li>涉及的考点（1）</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/001.jpg" alt></p>
<a id="more"></a>

<ul>
<li>涉及的考点（2）</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/002.jpg" alt></p>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/003.jpg" alt></p>
<ul>
<li>涉及的考点（3）</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/004.jpg" alt></p>
<p><strong>（四）y=sinx(或y=cosx)在[0,Π]的面积</strong></p>
<p><strong>1、考研考点与例题</strong></p>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/005.jpg" alt></p>
<h3 id="五、函数的基本特性"><a href="#五、函数的基本特性" class="headerlink" title="五、函数的基本特性"></a><strong>五、函数的基本特性</strong></h3><p><strong>1、有界性</strong></p>
<ul>
<li>定义及其理解</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/006.jpg" alt></p>
<ul>
<li>涉及的考点</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/007.jpg" alt></p>
<p><strong>2、单调性</strong></p>
<ul>
<li>定义及其理解</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/008.jpg" alt></p>
<p><strong>3、奇偶性</strong></p>
<ul>
<li>定义及其理解</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/009.jpg" alt></p>
<ul>
<li>相关拓展</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/014.jpg" alt></p>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/010.jpg" alt></p>
<p><strong>4、周期性</strong></p>
<ul>
<li>定义及其理解</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/011.jpg" alt></p>
<p><strong>5、考研考点与例题</strong></p>
<ul>
<li>例题10</li>
</ul>
<p><img src="/2020/03/07/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/012.jpg" alt></p>
]]></content>
      <categories>
        <category>考研2021</category>
      </categories>
      <tags>
        <tag>考研</tag>
        <tag>数学一</tag>
      </tags>
  </entry>
  <entry>
    <title>考研数学中的高中数学知识（一）</title>
    <url>/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h3 id="一、常见的乘法公式及二项式定理"><a href="#一、常见的乘法公式及二项式定理" class="headerlink" title="一、常见的乘法公式及二项式定理"></a><strong>一、常见的乘法公式及二项式定理</strong></h3><p><strong>1、常见公式</strong></p>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/001.jpg" alt></p>
<p><strong>2、二项式定理</strong></p>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/002.jpg" alt></p>
<a id="more"></a>

<p><strong>3、考研考点与例题</strong></p>
<ul>
<li>涉及的考点</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/003.jpg" alt></p>
<ul>
<li>例题1</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/004.jpg" alt></p>
<ul>
<li>例题2</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/005.jpg" alt></p>
<h3 id="二、对数运算"><a href="#二、对数运算" class="headerlink" title="二、对数运算"></a><strong>二、对数运算</strong></h3><p><strong>1、常见公式</strong></p>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/006.jpg" alt></p>
<p><strong>2、考研考点与例题</strong></p>
<ul>
<li>例题3</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/007.jpg" alt></p>
<ul>
<li>例题4</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/008.jpg" alt></p>
<h3 id="三、反函数"><a href="#三、反函数" class="headerlink" title="三、反函数"></a><strong>三、反函数</strong></h3><p><strong>1、反函数的定义</strong></p>
<ul>
<li>定义</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/031.jpg" alt></p>
<ul>
<li>理解</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/009.jpg" alt></p>
<p><strong>2、考研考点与例题</strong></p>
<ul>
<li>涉及的考点</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/032.jpg" alt></p>
<ul>
<li>例题5</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/010.jpg" alt></p>
<ul>
<li>例题6</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/011.jpg" alt></p>
<h3 id="四、三角函数及反三角函数相关公式"><a href="#四、三角函数及反三角函数相关公式" class="headerlink" title="四、三角函数及反三角函数相关公式"></a><strong>四、三角函数及反三角函数相关公式</strong></h3><p><strong>（一）三角函数</strong></p>
<p><strong>1、常见公式</strong></p>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/012.jpg" alt></p>
<ul>
<li>sinx函数图像及其性质</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/013.jpg" alt></p>
<ul>
<li>cosx函数图像及其性质</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/014.jpg" alt></p>
<ul>
<li>tanx函数图像及其性质</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/015.jpg" alt></p>
<ul>
<li>cotx函数图像及其性质</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/016.jpg" alt></p>
<ul>
<li>相关公式变换由来</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/017.jpg" alt></p>
<p><strong>2、考研考点与例题</strong></p>
<ul>
<li>例题7</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/018.jpg" alt></p>
<ul>
<li>例题8</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/019.jpg" alt></p>
<ul>
<li>例题9</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/020.jpg" alt></p>
<p><strong>（二）反三角函数</strong></p>
<p><strong>1、y=arcsinx</strong></p>
<ul>
<li>函数定义</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/021.jpg" alt></p>
<ul>
<li>函数图像</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/022.jpg" alt></p>
<p><strong>2、y=arccosx</strong></p>
<ul>
<li>函数定义</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/023.jpg" alt></p>
<ul>
<li>函数图像</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/024.jpg" alt></p>
<p><strong>3、y=arctanx</strong></p>
<ul>
<li>函数定义</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/025.jpg" alt></p>
<ul>
<li>函数图像</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/026.jpg" alt></p>
<p><strong>4、y=arccotx</strong></p>
<ul>
<li>函数定义</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/027.jpg" alt></p>
<ul>
<li>函数图像</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/028.jpg" alt></p>
<p><strong>5、考研考点与例题</strong></p>
<ul>
<li>常见考点</li>
</ul>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/029.jpg" alt></p>
<p><img src="/2020/03/06/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/030.jpg" alt></p>
]]></content>
      <categories>
        <category>考研2021</category>
      </categories>
      <tags>
        <tag>考研</tag>
        <tag>数学一</tag>
      </tags>
  </entry>
  <entry>
    <title>考研英语一真题怎么刷</title>
    <url>/2020/02/28/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E4%B8%80%E7%9C%9F%E9%A2%98%E6%80%8E%E4%B9%88%E5%88%B7/</url>
    <content><![CDATA[<h3 id="这里有两种练习方案，当然我觉得也可以把两种结合起来"><a href="#这里有两种练习方案，当然我觉得也可以把两种结合起来" class="headerlink" title="这里有两种练习方案，当然我觉得也可以把两种结合起来"></a><strong>这里有两种练习方案，当然我觉得也可以把两种结合起来</strong></h3><h3 id="第一种，根据考研英语一201历年难度分析来练习真题"><a href="#第一种，根据考研英语一201历年难度分析来练习真题" class="headerlink" title="第一种，根据考研英语一201历年难度分析来练习真题"></a><strong>第一种，根据考研<code>英语一201</code>历年难度分析来练习真题</strong></h3><p><img src="/2020/02/28/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E4%B8%80%E7%9C%9F%E9%A2%98%E6%80%8E%E4%B9%88%E5%88%B7/001.jpg" alt></p>
<a id="more"></a>

<h3 id="第二种，按照时间顺序依次练习真题"><a href="#第二种，按照时间顺序依次练习真题" class="headerlink" title="第二种，按照时间顺序依次练习真题"></a><strong>第二种，按照时间顺序依次练习真题</strong></h3><p><code>第一</code>说说刷题顺序：我们可以按照<code>从1997-2020的顺序</code>练习。</p>
<p><code>第二</code>说说刷题资料：推荐一下真题材料，<code>张剑黄皮书</code>，淘宝有卖，也很便宜。张剑的黄皮是从98年开始的，分为三部分，第一部分98-04年，第二部分05-14年，第三部分15-20年。</p>
<p><code>第三</code>说说刷题思路：我们从98开始，首先98-04年的，单数天做阅读，把阅读做完侯可以背背文章，主要培养语感，不一定真背下来，每篇背诵时间自己斟酌；双数天做新题型、翻译和作文。98-04年的做完后开始做05-14年的，05-14年的做完后开始做15-18年的，如此往复的做上三遍，如果后期实在没时间了15-18年的一定要做三遍，毕竟最近几年重要程度最高，风格、题型和文章类型都十分相似。我们或许会疑惑做这么多遍干什么？但只要我们做下来就会发现，每做一遍都会有新的收获，渐渐的我们便可以掌握出题思路和知道错题如何避免。到这里，我们需要注意，把19-20年的留下来，放在考研前最后一个月再做，给自己测试一下，掌握自己的真实水平。</p>
<p><code>第四</code>作为总结的一句话：<code>题在精不在多，每过一套真题，我们必须把题钻研透彻。</code></p>
<h3 id="最后，我建议两者取长补短，合二为一"><a href="#最后，我建议两者取长补短，合二为一" class="headerlink" title="最后，我建议两者取长补短，合二为一"></a><strong>最后，我建议两者取长补短，合二为一</strong></h3><p>其实，我觉得在第二种方案思路的基础上，我们按照难度系数，依次练习真题，这样在题目难度上由易到难，循序渐进效果会更好一些。</p>
]]></content>
      <categories>
        <category>考研2021</category>
      </categories>
      <tags>
        <tag>考研</tag>
        <tag>英语一</tag>
      </tags>
  </entry>
  <entry>
    <title>如何迎战考研政治</title>
    <url>/2020/02/28/%E5%A6%82%E4%BD%95%E8%BF%8E%E6%88%98%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/</url>
    <content><![CDATA[<h3 id="了解考研政治试卷整体"><a href="#了解考研政治试卷整体" class="headerlink" title="了解考研政治试卷整体"></a><strong>了解考研政治试卷整体</strong></h3><ul>
<li><strong>分值如何分布？</strong></li>
</ul>
<p>总分100分，其中马原、毛中特、近代史、思修、时政分值分别为24、30、14 、16、16。(近代史和毛中特有部分重合)</p>
<p><code>横向分布</code>: 50分选择，50分分析。</p>
<p><code>纵向分布</code>: 50分选择中有16道单选(每题1分)+17道多选(每题2分)</p>
<ul>
<li><strong>考试时怎样获得高分？</strong></li>
</ul>
<p>政治70+就已经算是高分了，至于80+以上的，那就是凤毛麟角了。按选择和分析这两部分来说，70分=选择得分+分析得分。而根据历年分析题答题情况来讲，平均分就是在30分左右。最重要的是，这个分数拉开差距还是很难的。</p>
<p>所以很明显，<code>高分=高分选择</code>，而<code>高分选择=高分多选</code>。</p>
<p>下面我们就一起来看一下，如何在选择题上得高分:</p>
<a id="more"></a>

<p>1、知己知彼——<code>多选题选项分布</code></p>
<p>在近几年的多选题分布来看，可以明显发现：四选三是最多的，平均9.9道；四选二是逐年减少的趋势，平均只有3.3道；四选四最近这三年比较稳定，有5道，平均却也只有3.9道；干扰项的趋势也是逐年减少，平均有16道。</p>
<p>从上面这些数据来看，如果今年我们发现，四选四或四选二明显偏离平均值，那么我们就可以考虑是否有问题了。</p>
<p>2、深入了解——<code>考研政治题号分布</code></p>
<p>先看一下题号分布，多选题有很多规律可能我们都不了解，但是知道了这些会让我们在做题中游刃有余。(比如懵的时候可能更有把握一些)</p>
<p>（1）17-18(哲学)不可能全选;</p>
<p>（2）22-26可能有1至3道全选;</p>
<p>（3）30-31(思修)中至少有1道全选，不可能是4选2;</p>
<p>（4）32-33(时政)至少有1道全选，不可能是4选2，并且很可能是1道全选和1道4选3。</p>
<p>3、得高分的新思路——<code>反向思维</code></p>
<p>不知道我们看了上面的分析之后有没有关注到干扰项的问题。合理利用干扰项，把多选题变成单选题，这题目就好做多了啊!</p>
<p>干扰项的平均数量为16个，近几年有13个，那么如果我们很熟悉干扰项的话，做题的时候紧盯干扰项，在17道多选题里选出13~16个干扰项，相信这套题做的肯定也没问题!</p>
<h3 id="关于考研政治复习的几个问题"><a href="#关于考研政治复习的几个问题" class="headerlink" title="关于考研政治复习的几个问题"></a><strong>关于考研政治复习的几个问题</strong></h3><p><strong>问题一：政治复习花多少时间合适?</strong></p>
<p>　　学习的时间需结合自身情况，我们不做硬性规定。基础阶段，建议平均每天学一个小时的政治。很多同学前面不看政治，冲刺阶段整天背政治，效果极其有限不说，而且严重影响其他科目在冲刺阶段的复习效果，实在是得不尝失。很多人认为政治不需要复习太早，但要知道知识的积累和运营都需要一个过程，任何科目的学习不是一蹴而就的，高分必然不是单靠背的！</p>
<!-- more -->

<p><strong>问题二：现在需要关注政治新闻吗?</strong></p>
<p>　　关注时政新闻是非常有必要的！我们可以每天花几分钟看一眼时政消息，培养政治素养，为日后深入学习、材料分析题的作答和冲刺阶段时政考点背诵，打下良好基础。我们只有在日常关注时政，才不会在后期复习中毫无头绪，陷入死记硬背背了又忘忘了再背的死循环中。</p>
<p><strong>问题三：同一考点三年内不会再出?</strong></p>
<p>　　这个观点显然是不成立的，有些考点很多年才考一次，有一些高频考点特别受命题人青睐，几乎每年都要考，我们在学习过程中要加以关注。</p>
<p><strong>问题四：模块复习要按教材章节么?</strong></p>
<p>　　不建议我们用大学教材作为学习辅导书，因为考试大纲和教材是有所不同的，而且教材的知识点太多，很多都与考研无关。虽然大学政治教材不作为复习依据，但可以做工具书使用，例如我们在马原部分若遇到不理解的知识点，此时可以翻阅教材查看有没有更详细的解释。现在我们复习的时候，应将重点放在马原和毛中特上，建议先看马原，然后看毛中特，在学习马原和毛中特的时候可以适当学习史纲进行调节。</p>
<h3 id="如何高效复习考研政治"><a href="#如何高效复习考研政治" class="headerlink" title="如何高效复习考研政治"></a><strong>如何高效复习考研政治</strong></h3><p><strong>想要政治复习高效，最基本的就是熟悉基本知识+掌握重难点+做题方法总结</strong></p>
<p><strong>下面我们来看一下考研政治【马原】、【毛中特】、【思修】、【史纲】、【时政】复习的一些经验。</strong></p>
<ul>
<li>【马原篇】</li>
</ul>
<p><code>复习重点：知识点理解+逻辑框架梳理</code></p>
<p>马原部分其实需要背的知识点并不多，但是重点就是要学会灵活运用！下面我们来看一下复习马原的一些技巧：</p>
<p>1、梳理知识点框架。首先根据目录确定一级框架，再根据<code>肖秀荣精讲精练</code>里面梳理的框架体系确定二级框架，最后在复习完整个章节之后，细化框架，重要的知识点可以用便利贴补充在上面。</p>
<p>2、比较冗杂的知识点可以<code>先梳理清楚单个知识点的概念</code>，比如实践和认识的辩证关系，先把实践本质、基本特征、基本类型，认识的本质掌握，再理解认识和实践的辩证关系以及方法论。</p>
<p>3、做<code>马克思主义哲学部分题型</code>的时候，一定要理解记忆概念，辩证关系以及方法论的运用，做完这部分大题的时候最好分析题干关键词，回到精讲精练上再巩固一遍知识点。</p>
<p>4、做<code>马克思主义政治经济学的题型</code>的时候要<code>重点注意剩余价值率的计算</code>，注意结合材料分析，有的数值只是障眼法。</p>
<p><code>注意</code>：马哲部分经常会考材料题，所以平时做到相关大题的时候<code>一定要分析理解答案的解析思路</code>，比如：从哪一点切入分析的，方法论如何和材料结合起来的，不要光背答案。</p>
<ul>
<li>【史纲篇】</li>
</ul>
<p><code>复习重点：梳理时间线，了解史实</code></p>
<p>1、史纲部分最好和毛中特结合一起记忆，<code>以史纲梳理的时间线为主，以毛中特的重要会议、讲话、理论为辅</code>，把知识点串起来</p>
<p>2、史纲部分复习的重点就是<code>历史大事件与考研当年的相关事件纪念日结合起来理解</code>。比如今年是建国70周年，那么1949年新中国成立的相关会议纲要，以及今年70周年相关的讲话就一定要注意。</p>
<ul>
<li>【毛中特篇】</li>
</ul>
<p><code>复习重点：梳理知识点理论框架，结合时政</code></p>
<p>1、毛中特部分要<code>明确把握一些大会文件和讲话内容，牢记战略方针、政策、措施等重要理论</code>。（一定不要记混了，所以打框架是很重要的）</p>
<p>2、毛中特部分需要背的东西很多，可以<code>采取关键词记忆</code>，比如：科学发展观-发展-以人为本-全面可持续发展-统筹兼顾等等。</p>
<p>3、大题要注意<code>分析题干的考点，再结合材料去分析</code>，很多题会出现的状况就是材料看着都像考点，结果把材料内容答上去后，考试结束却发现正经的答案内容都没有提及。</p>
<ul>
<li>【思修篇】</li>
</ul>
<p><code>复习重点：反复刷多选题，总结分析</code></p>
<p>1、思修部分就不用花时间去打框架或者串时间线了，重点注意和实际生活联系起来，都是一些常识性，觉悟性问题，过一遍精讲精练，重点放在做题上，尤其是多选题。</p>
<p>2、思修部分的题经常会引用一些经典作家的话和一些大家名人的<code>名言</code>，在做题<code>过程中要积累，明白这些话内涵以及精神，要保证主要精神不偏离</code>！</p>
<p>3、这一部分的<code>多选题</code>要着重注意<code>不要漏选或者是错选了</code>，经常的考点就是<code>选项描述是正确的，但是和材料不相关</code>，所以做题的时候审题要仔细。</p>
<ul>
<li>【时政篇】</li>
</ul>
<p><code>复习重点：反推知识点</code></p>
<p>时政的题型一般和其他四个部分的知识点结合很紧密，我们可以<code>根据每年的大事件来推断主要的考点</code>。就比如“五四运动爆发100周年”，那“中国近代史纲要”里面的“开天辟地的大事件”-“五四运动的标志和影响”这些意义就一定是要背的。还比如：今年是中美建交，中巴建交的重要时间点，那么毛中特里面的“中国特色大国外交”这一块的外交政策以及意义一定要掌握！</p>
<h3 id="考研政治复习具体规划"><a href="#考研政治复习具体规划" class="headerlink" title="考研政治复习具体规划"></a><strong>考研政治复习具体规划</strong></h3><p>考研政治复习分为三个阶段，<code>前期打基础，中期巩固，后期拔高冲刺</code>。</p>
<p>前期和中期（7月到12月）重点看选择题，后期开始背大题。</p>
<p>复习前我们把握总的趋势，政治分为<code>马哲、毛概、史纲、思修、时政</code>。</p>
<p><code>马哲和毛概</code>是其中的难点和重点，内容较杂较多，每年考的题目分量重，而且难度大。<code>史纲和思修</code>多是细碎知识点，理解不难，考的不算深入，所以复习很轻松。<code>时政</code>则是放在最后时间复习，涉及的多是近期热点问题。到此，我们的客观题复习规划就出来了。</p>
<p>以下为时间安排：</p>
<ul>
<li><strong>第一阶段：7月到9月（打牢基础阶段）</strong></li>
</ul>
<p><code>使用书籍</code>：肖秀荣精讲精练+1000题</p>
<p><code>搭配资源</code>：徐涛政治视频</p>
<p><code>复习模式</code>：看徐涛政治视频-&gt;看精讲精练-&gt;刷1000题</p>
<p>看肖老的书<code>肖秀荣精讲精练</code>我们会觉得很难消化，因为涉及的知识点太多太杂，一章看下来脑子都是懵的，这里需要配上<code>徐涛政治视频</code>，但是光看不练也是假把式，所以要辅助做题加强记忆，这里推荐肖老的<code>1000题</code>。肖老是当年政治命题组，他的书质量最好，体系最完整，而且我们最后还要背他的押题卷，一开始就跟着他的思路走准没错。</p>
<p>视频+资料搭配起来没有违和感，我们把课本体系梳理清楚了，知识点理解透了，看书做题就容易多了。</p>
<p>马哲、毛概基本可以做到一天一章，史纲、思修可以做到一天两章。政治这样看视频时间花费较长，这时我们可以利用吃饭的时间看，午睡起来脑子糊的时候看，充分利用一切零碎时间。</p>
<p><code>复习效果</code>：在9月份大纲出来前，我们基本能达到马哲、毛概看过两遍，思修、史纲看过一遍，选择题正确率能逐步提升到70%左右。</p>
<ul>
<li><strong>第二阶段：新大纲出来之后到11月中旬<code>肖8</code>出来之前（中期巩固阶段）</strong></li>
</ul>
<p><code>使用书籍</code>：2021政治大纲、1000题、思想政治理论（风中劲草红皮版）</p>
<p><code>复习模式</code>：结合2021政治大纲查漏补缺-&gt;刷1000题-&gt;背诵思想政治理论（风中劲草红皮版）</p>
<p>政治每年都会发布大纲，考试范围都是大纲里面的。前期我们把精讲精练当做课本用，总体把握知识，但是考纲出来了，重点就看考纲！因为考纲更薄，而且每年还会补充一些新的知识点。</p>
<p>边看考纲边做题目，而且我们这个时候可以自己做一个<code>重点知识梳理本</code>，内容包括：<code>中国土地法的变迁</code>，<code>毛主席各个年份发表的文章</code>，<code>各个年份颁布的文件涉及的内容</code>等等，每次复习的时候我们可以对重点知识做标记。</p>
<p>这个阶段我们可以根据自己复习时间背诵政治，这里推荐一本书：<code>思想政治理论（风中劲草红皮版）</code>，这本书把历年考试重点、难点全部标了出来，在我们复习的时候可以将自己容易混淆的概念补充到书本上去，经常错误的1000题也要多背。到10月中下旬我们可以尝试做历年真题。</p>
<p><code>复习效果</code>：如果复习得当，除去大题目我们基本可以拿到40+。</p>
<ul>
<li><strong>第三阶段：拿到<code>肖8</code>到12.19（拔高冲刺阶段）</strong></li>
</ul>
<p><code>使用书籍</code>：肖秀荣八套、肖秀荣四套、徐涛考前必背20题小黄书</p>
<p><code>复习模式</code>：肖8-&gt;肖4-&gt;小黄书</p>
<p>前期、中期我们不要傻乎乎地背大题，真的很浪费时间。政治大题不看我们复习的基础，完全看押题！之前背太多都没用，最后押题才是真的有用。</p>
<p>这个时候已经到了11月中旬了，基础打好了，我们紧跟老命题组成员肖老。肖老首先会出<code>肖8</code>，类似于考研模拟题。肖8大题不建议背诵，因为内容太多，而且不属于考试大题押题范围。肖8刷几遍，到了12月，就要买<code>肖4</code>。这个时候，大题要提上日程。</p>
<p><code>大题押题推荐</code>：首先必推<code>肖4</code>，肖4的大题必须全部背，而且前面两套要记得特别牢（肖老大题排版重点是依次递减的）。其次推荐<code>徐涛考前必背20题小黄书</code>，小黄书虽然看起来特别小，但是知识点非常全，所以基本全部命中。</p>
<p><code>复习效果</code>：如果复习得当，大题目我们基本可以拿到40+。</p>
<ul>
<li><strong>最后的最后，给出几条建议</strong></li>
</ul>
<p>1、如果我们时间不够，可以只背肖秀荣4套押题卷，前面复习的好也能保证70+。</p>
<p>2、每次错的知识点一定要重点标注，抽空重点看，因为复习到最后我们会发现，我们错的最多的就是我们标注的那些、没认真看的知识点。</p>
<p>3、大题不建议每个字都要背，因为可能我们需要背的押题很多，如果全文抠字眼背，真的很浪费时间。</p>
]]></content>
      <categories>
        <category>考研2021</category>
      </categories>
      <tags>
        <tag>考研</tag>
        <tag>政治一</tag>
      </tags>
  </entry>
  <entry>
    <title>交换机的基本配置</title>
    <url>/2020/02/23/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a><strong>学习资源</strong></h3><ul>
<li><p><a href="https://pan.baidu.com/s/1_i0awBa2q1asnSiGsQHi1w">点击获取<code>Cisco Packet Tracer 6.0</code>，提取码为<code>gxi4</code></a></p>
</li>
<li><p><a href="https://pan.baidu.com/s/1Td_8zLCizfoxt4Pedq4h3w">点击获取<code>基本交换机配置.pka</code>，提取码为<code>lpoy</code></a> </p>
</li>
</ul>
<h3 id="操作环境"><a href="#操作环境" class="headerlink" title="操作环境"></a><strong>操作环境</strong></h3><ul>
<li>操作系统：Windows10</li>
<li>操作软件：Cisco Packet Tracer 6.0</li>
</ul>
<a id="more"></a>

<h3 id="网络拓扑图"><a href="#网络拓扑图" class="headerlink" title="网络拓扑图"></a><strong>网络拓扑图</strong></h3><p><img src="/2020/02/23/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/001.jpg" alt></p>
<h3 id="地址表"><a href="#地址表" class="headerlink" title="地址表"></a><strong>地址表</strong></h3><table>
<thead>
<tr>
<th align="center">设备</th>
<th align="center">接口</th>
<th align="center">IP地址</th>
<th align="center">子网掩码</th>
<th align="center">默认网关</th>
</tr>
</thead>
<tbody><tr>
<td align="center">PC1</td>
<td align="center">网卡</td>
<td align="center">172.17.99.21</td>
<td align="center">255.255.255.0</td>
<td align="center">172.17.99.11</td>
</tr>
<tr>
<td align="center">PC2</td>
<td align="center">网卡</td>
<td align="center">172.17.99.22</td>
<td align="center">255.255.255.0</td>
<td align="center">172.17.99.11</td>
</tr>
<tr>
<td align="center">S1</td>
<td align="center">VLAN99</td>
<td align="center">172.17.99.11</td>
<td align="center">255.255.255.0</td>
<td align="center">172.17.99.1</td>
</tr>
</tbody></table>
<h3 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a><strong>学习目标</strong></h3><ul>
<li>清除交换机的现有配置</li>
<li>检验默认交换机配置</li>
<li>创建基本交换机配置</li>
<li>管理 MAC 地址表</li>
<li>配置端口安全性</li>
</ul>
<h3 id="学习说明"><a href="#学习说明" class="headerlink" title="学习说明"></a><strong>学习说明</strong></h3><p>本次学习中，我们将检查并配置一台独立式 LAN 交换机。虽然交换机在出厂默认状态下能够执行基本功能，但为了保证 LAN 的安全并优化 LAN，网络管理员应当修改几个参数。本次学习将向我们介绍交换机配置的基本知识。</p>
<h3 id="学习过程"><a href="#学习过程" class="headerlink" title="学习过程"></a><strong>学习过程</strong></h3><p><strong>任务 1：清除交换机的现有配置</strong></p>
<p>（一）步骤 1. 键入 <code>enable</code> 命令进入特权执行模式。</p>
<p><code>操作说明</code>：单击交换机 S1，进入图形配置界面，然后单击 CLI 选项卡，进入控制台，回车结束以前的操作，发出 <code>enable</code> 命令以进入特权执行模式。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch&gt;enable</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure>

<p>（二）步骤 2. 删除 VLAN 数据库信息文件。</p>
<p><code>操作说明</code>：VLAN 数据库信息与配置文件分开存储，以 vlan.dat 文件名存储在闪存中。要删除 VLAN 文件，请发出命令<code>delete flash:vlan.dat</code>。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#delete flash:vlan.dat </span><br><span class="line">Delete filename [vlan.dat]? [Enter]</span><br><span class="line">Delete flash:vlan.dat? [confirm] [Enter]</span><br></pre></td></tr></table></figure>

<p>（三）步骤 3. 从 NVRAM 中删除交换机启动配置文件。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#erase startup-config </span><br><span class="line">Erasing the nvram filesystem will remove all configuration files! Continue? [confirm] [Enter]</span><br><span class="line">[OK]</span><br><span class="line">Erase of nvram: complete</span><br></pre></td></tr></table></figure>

<p>（四）步骤 4. 确认 VLAN 信息已删除。</p>
<p><code>操作说明</code>：使用 <code>show vlan</code> 命令检查是否确实删除了 VLAN 配置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line">1    default                          active    Fa0&#x2F;1, Fa0&#x2F;2, Fa0&#x2F;3, Fa0&#x2F;4</span><br><span class="line">                                                Fa0&#x2F;5, Fa0&#x2F;6, Fa0&#x2F;7, Fa0&#x2F;8</span><br><span class="line">                                                Fa0&#x2F;9, Fa0&#x2F;10, Fa0&#x2F;11, Fa0&#x2F;12</span><br><span class="line">                                                Fa0&#x2F;13, Fa0&#x2F;14, Fa0&#x2F;15, Fa0&#x2F;16</span><br><span class="line">                                                Fa0&#x2F;17, Fa0&#x2F;18, Fa0&#x2F;19, Fa0&#x2F;20</span><br><span class="line">                                                Fa0&#x2F;21, Fa0&#x2F;22, Fa0&#x2F;23, Fa0&#x2F;24</span><br><span class="line">                                                Gig1&#x2F;1, Gig1&#x2F;2</span><br><span class="line">10   VLAN10                           active    </span><br><span class="line">30   VLAN30                           active    </span><br><span class="line">1002 fddi-default                     act&#x2F;unsup </span><br><span class="line">1003 token-ring-default               act&#x2F;unsup </span><br><span class="line">1004 fddinet-default                  act&#x2F;unsup </span><br><span class="line">1005 trnet-default                    act&#x2F;unsup </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line">1    enet  100001     1500  -      -      -        -    -        0      0</span><br><span class="line">10   enet  100010     1500  -      -      -        -    -        0      0</span><br><span class="line">30   enet  100030     1500  -      -      -        -    -        0      0</span><br><span class="line">1002 fddi  101002     1500  -      -      -        -    -        0      0   </span><br><span class="line">1003 tr    101003     1500  -      -      -        -    -        0      0   </span><br><span class="line">1004 fdnet 101004     1500  -      -      -        ieee -        0      0   </span><br><span class="line">1005 trnet 101005     1500  -      -      -        ibm  -        0      0   </span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：发现VLAN 信息仍在交换机上，执行下一步骤予以清除。</p>
<p>（五）步骤 5. 重新加载交换机。</p>
<p><code>操作说明</code>：在特权执行模式提示符下，输入 <code>reload</code> 命令开始这一过程。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#reload</span><br><span class="line">Proceed with reload? [confirm] [enter]</span><br><span class="line"></span><br><span class="line">%SYS-5-RELOAD: Reload requested by console. Reload Reason: Reload Command.</span><br><span class="line"></span><br><span class="line">&lt;省略部分输出&gt;</span><br><span class="line"></span><br><span class="line">Press RETURN to get started! [Enter]</span><br><span class="line"></span><br><span class="line">Switch&gt;</span><br></pre></td></tr></table></figure>

<p><strong>任务 2：检验默认交换机配置</strong></p>
<p>（一）步骤 1. 进入特权模式。</p>
<p><code>操作说明</code>：特权模式下，我们可以使用全部交换机命令。不过，由于许多特权命令会配置操作参数，因此应使用口令对特权访问加以保护，防止未授权使用。特权命令集不仅包括用户执行模式所包含的那些命令，还包括 configure 命令，通过该命令可以访问其余命令模式。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch&gt;enable</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：请注意特权执行模式下配置中提示符的变化。</p>
<p>（二）步骤 2. 检查当前交换机配置。</p>
<p>（1）发出 <code>show running-config</code> 命令，检查当前的运行配置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch&gt;enable</span><br><span class="line">Switch#show running-config</span><br><span class="line">Building configuration...</span><br><span class="line"></span><br><span class="line">Current configuration : 1037 bytes</span><br><span class="line">!</span><br><span class="line">version 12.2</span><br><span class="line">no service timestamps log datetime msec</span><br><span class="line">no service timestamps debug datetime msec</span><br><span class="line">no service password-encryption</span><br><span class="line">!</span><br><span class="line">hostname Switch</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">spanning-tree mode pvst</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;1  &#x2F;&#x2F;快速以太网接口</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;2</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;3</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;4</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;5</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;6</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;7</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;8</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;9</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;10</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;11</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;12</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;13</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;14</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;15</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;16</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;17</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;18</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;19</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;20</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;21</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;22</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;23</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;24</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet1&#x2F;1  &#x2F;&#x2F;千兆以太网接口</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet1&#x2F;2</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">line con 0</span><br><span class="line">!</span><br><span class="line">line vty 0 4</span><br><span class="line"> login</span><br><span class="line">line vty 5 15</span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>该交换机有多少个快速以太网接口？<br>答：24个</li>
<li>该交换机有多少个千兆以太网接口？<br>答：2个</li>
<li>该交换机中显示的 vty 线路值范围是什么？<br>答：0-15</li>
</ul>
<p>（2）发出 <code>show startup-config</code> 命令，检查当前 NVRAM 的内容。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show startup-config</span><br><span class="line">startup-config is not present</span><br></pre></td></tr></table></figure>

<p>（3）发出 <code>show interface vlan1</code> 命令，检查虚拟接口 VLAN1 的特征。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show interface vlan1</span><br><span class="line">Vlan1 is administratively down, line protocol is down</span><br><span class="line">  Hardware is CPU Interface, address is 0060.47ac.1eb8 (bia 0060.47ac.1eb8)</span><br><span class="line">  MTU 1500 bytes, BW 100000 Kbit, DLY 1000000 usec,</span><br><span class="line">     reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255</span><br><span class="line">  Encapsulation ARPA, loopback not set</span><br><span class="line">  ARP type: ARPA, ARP Timeout 04:00:00</span><br><span class="line">  Last input 21:40:21, output never, output hang never</span><br><span class="line">  Last clearing of &quot;show interface&quot; counters never</span><br><span class="line">  Input queue: 0&#x2F;75&#x2F;0&#x2F;0 (size&#x2F;max&#x2F;drops&#x2F;flushes); Total output drops: 0</span><br><span class="line">  Queueing strategy: fifo</span><br><span class="line">  Output queue: 0&#x2F;40 (size&#x2F;max)</span><br><span class="line">  5 minute input rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">  5 minute output rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">     1682 packets input, 530955 bytes, 0 no buffer</span><br><span class="line">     Received 0 broadcasts (0 IP multicast)</span><br><span class="line">     0 runts, 0 giants, 0 throttles</span><br><span class="line">     0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored</span><br><span class="line">     563859 packets output, 0 bytes, 0 underruns</span><br><span class="line">     0 output errors, 23 interface resets</span><br><span class="line">     0 output buffer failures, 0 output buffers swapped out</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>该交换机上设置了 IP 地址吗？<br>答：没有</li>
<li>该虚拟交换机接口的 MAC 地址是什么？<br>答：0060.47ac.1eb8</li>
<li>此接口打开了吗？<br>答：没有</li>
</ul>
<p>（4）现在使用 <code>show ip interface vlan1</code> 命令查看该接口的 IP 属性。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show ip interface vlan1</span><br><span class="line">Vlan1 is administratively down, line protocol is down</span><br><span class="line">  Internet protocol processing disabled</span><br></pre></td></tr></table></figure>

<p>（三）步骤 3. 显示 Cisco IOS 信息。</p>
<p><code>操作说明</code>：使用 <code>show version</code> 命令显示 Cisco IOS 信息。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show version</span><br><span class="line">Cisco IOS Software, C2960 Software (C2960-LANBASE-M), Version 12.2(25)FX, RELEASE SOFTWARE (fc1)</span><br><span class="line">Copyright (c) 1986-2005 by Cisco Systems, Inc.</span><br><span class="line">Compiled Wed 12-Oct-05 22:05 by pt_team</span><br><span class="line"></span><br><span class="line">ROM: C2960 Boot Loader (C2960-HBOOT-M) Version 12.2(25r)FX, RELEASE SOFTWARE (fc4)</span><br><span class="line"></span><br><span class="line">System returned to ROM by power-on</span><br><span class="line"></span><br><span class="line">Cisco WS-C2960-24TT (RC32300) processor (revision C0) with 21039K bytes of memory.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">24 FastEthernet&#x2F;IEEE 802.3 interface(s)</span><br><span class="line">2 Gigabit Ethernet&#x2F;IEEE 802.3 interface(s)</span><br><span class="line"></span><br><span class="line">32768K bytes of flash-simulated non-volatile configuration memory.</span><br><span class="line">Base ethernet MAC Address       : 0060.47AC.1EB8</span><br><span class="line">Motherboard assembly number     : 73-9832-06</span><br><span class="line">Power supply part number        : 341-0097-02</span><br><span class="line">Motherboard serial number       : FOC103248MJ</span><br><span class="line">Power supply serial number      : DCA102133JA</span><br><span class="line">Model revision number           : B0</span><br><span class="line">Motherboard revision number     : C0</span><br><span class="line">Model number                    : WS-C2960-24TT</span><br><span class="line">System serial number            : FOC1033Z1EY</span><br><span class="line">Top Assembly Part Number        : 800-26671-02</span><br><span class="line">Top Assembly Revision Number    : B0</span><br><span class="line">Version ID                      : V02</span><br><span class="line">CLEI Code Number                : COM3K00BRA</span><br><span class="line">Hardware Board Revision Number  : 0x01</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch   Ports  Model              SW Version              SW Image</span><br><span class="line">------   -----  -----              ----------              ----------</span><br><span class="line">*    1   26     WS-C2960-24TT      12.2                    C2960-LANBASE-M</span><br><span class="line"></span><br><span class="line">Configuration register is 0xF</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>交换机运行的 Cisco IOS 版本是什么？<br>答：版本12.2(25)FX</li>
<li>系统映像文件名是什么？<br>答：C2960-LANBASE-M</li>
<li>此交换机的基本 MAC 地址是什么？<br>答：0060.47AC.1EB8</li>
</ul>
<p>（四）步骤 4. 检查快速以太网接口。</p>
<p><code>操作说明</code>：使用 <code>show interface fastethernet 0/18</code> 命令检查 PC1 所用快速以太网接口的默认属性。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show interface fastethernet 0&#x2F;18</span><br><span class="line">FastEthernet0&#x2F;18 is up, line protocol is up (connected)</span><br><span class="line">  Hardware is Lance, address is 0060.5c36.4412 (bia 0060.5c36.4412)</span><br><span class="line"> BW 100000 Kbit, DLY 1000 usec,</span><br><span class="line">     reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255</span><br><span class="line">  Encapsulation ARPA, loopback not set</span><br><span class="line">  Keepalive set (10 sec)</span><br><span class="line">  Full-duplex, 100Mb&#x2F;s</span><br><span class="line">  input flow-control is off, output flow-control is off</span><br><span class="line">  ARP type: ARPA, ARP Timeout 04:00:00</span><br><span class="line">  Last input 00:00:08, output 00:00:05, output hang never</span><br><span class="line">  Last clearing of &quot;show interface&quot; counters never</span><br><span class="line">  Input queue: 0&#x2F;75&#x2F;0&#x2F;0 (size&#x2F;max&#x2F;drops&#x2F;flushes); Total output drops: 0</span><br><span class="line">  Queueing strategy: fifo</span><br><span class="line">  Output queue :0&#x2F;40 (size&#x2F;max)</span><br><span class="line">  5 minute input rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">  5 minute output rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">     956 packets input, 193351 bytes, 0 no buffer</span><br><span class="line">     Received 956 broadcasts, 0 runts, 0 giants, 0 throttles</span><br><span class="line">     0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort</span><br><span class="line">     0 watchdog, 0 multicast, 0 pause input</span><br><span class="line">     0 input packets with dribble condition detected</span><br><span class="line">     2357 packets output, 263570 bytes, 0 underruns</span><br><span class="line">     0 output errors, 0 collisions, 10 interface resets</span><br><span class="line">     0 babbles, 0 late collision, 0 deferred</span><br><span class="line">     0 lost carrier, 0 no carrier</span><br><span class="line">     0 output buffer failures, 0 output buffers swapped out</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>该接口是打开还是关闭？<br>答：打开</li>
<li>什么事件会打开接口？<br>答：no shutdown</li>
<li>该接口的 MAC 地址是什么？<br>答：0060.5c36.4412</li>
<li>该接口的速率和双工设置是什么？<br>答：双工设置为：Full-duplex，速率为：100Mb/s</li>
</ul>
<p>（五）步骤 5. 检查 VLAN 信息。</p>
<p><code>操作说明</code>：使用 show vlan 命令检查交换机的默认 VLAN 配置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line">1    default                          active    Fa0&#x2F;1, Fa0&#x2F;2, Fa0&#x2F;3, Fa0&#x2F;4</span><br><span class="line">                                                Fa0&#x2F;5, Fa0&#x2F;6, Fa0&#x2F;7, Fa0&#x2F;8</span><br><span class="line">                                                Fa0&#x2F;9, Fa0&#x2F;10, Fa0&#x2F;11, Fa0&#x2F;12</span><br><span class="line">                                                Fa0&#x2F;13, Fa0&#x2F;14, Fa0&#x2F;15, Fa0&#x2F;16</span><br><span class="line">                                                Fa0&#x2F;17, Fa0&#x2F;18, Fa0&#x2F;19, Fa0&#x2F;20</span><br><span class="line">                                                Fa0&#x2F;21, Fa0&#x2F;22, Fa0&#x2F;23, Fa0&#x2F;24</span><br><span class="line">                                                Gig1&#x2F;1, Gig1&#x2F;2</span><br><span class="line">1002 fddi-default                     act&#x2F;unsup </span><br><span class="line">1003 token-ring-default               act&#x2F;unsup </span><br><span class="line">1004 fddinet-default                  act&#x2F;unsup </span><br><span class="line">1005 trnet-default                    act&#x2F;unsup </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line">1    enet  100001     1500  -      -      -        -    -        0      0</span><br><span class="line">1002 fddi  101002     1500  -      -      -        -    -        0      0   </span><br><span class="line">1003 tr    101003     1500  -      -      -        -    -        0      0   </span><br><span class="line">1004 fdnet 101004     1500  -      -      -        ieee -        0      0   </span><br><span class="line">1005 trnet 101005     1500  -      -      -        ibm  -        0      0   </span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>VLAN 1 的名称是什么？<br>答：默认，没有设置</li>
<li>此 VLAN 中有哪些端口？<br>答： Fa0/1-24，Gig1/1-2</li>
<li>VLAN 1 是活动的吗？<br>答：是的</li>
<li>什么类型的 VLAN 是默认 VLAN？<br>答：vlan 1、vlan 1002-1005是默认VLAN</li>
</ul>
<p>（六）步骤 6. 检查闪存。</p>
<p><code>操作说明</code>：检查闪存的命令有两个：<code>dir flash:</code> 和 <code>show flash</code>。 发出其中任一命令检查闪存目录中的内容。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#show flash</span><br><span class="line">Directory of flash:&#x2F;</span><br><span class="line"></span><br><span class="line">    1  -rw-     4414921          &lt;no date&gt;  c2960-lanbase-mz.122-25.FX.bin</span><br><span class="line"></span><br><span class="line">32514048 bytes total (28099127 bytes free)</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>发现了哪些文件或目录？如果是文件，则文件名的最后是扩展名，例如 .bin。目录没有扩展名。<br>答：发现了c2960-lanbase-mz.122-25.FX.bin这个文件</li>
<li>Cisco IOS 映像文件的名称是什么？<br>答：c2960-lanbase-mz.122-25.FX.bin</li>
</ul>
<p>（七）步骤 7. 检查并保存启动配置文件。</p>
<p>（1）早在步骤 2 中，我们已看到启动配置文件不存在。更改交换机的某项配置，然后保存配置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#configure terminal</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL&#x2F;Z.</span><br><span class="line">Switch(config)#hostname S1</span><br><span class="line">S1(config)#exit</span><br><span class="line">S1#</span><br></pre></td></tr></table></figure>

<p>（2）要把运行配置文件的内容保存到非易失性 RAM (NVRAM)，请发出命令 <code>copy running-config startup-config</code>。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Switch#copy running-config startup-config </span><br><span class="line">Destination filename [startup-config]? [enter]</span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：现在显示 NVRAM 的内容，发现当前配置已写入 NVRAM。</p>
<p><strong>任务 3：创建基本交换机配置</strong></p>
<p>（一）步骤 1. 为交换机指定名称。</p>
<p><code>操作说明</code>：进入全局配置模式。利用配置模式，我们可以管理交换机。输入配置命令，每行一条。请注意命令行提示符的变化反应了当前的提示符和交换机名称。在前一学习任务的最后步骤中，我们配置了主机名。下面是对所用命令的回顾。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#configure terminal</span><br><span class="line">S1(config)#hostname S1</span><br><span class="line">S1(config)#exit</span><br></pre></td></tr></table></figure>

<p>（二）步骤 2. 设置访问口令。</p>
<p><code>操作说明</code>：进入控制台线路配置模式。将登录口令设置为 cisco。另外，使用口令 cisco 配置 vty 线路 0 到 15。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#configure terminal</span><br><span class="line">S1(config)#line console 0 </span><br><span class="line">S1(config-line)#password cisco</span><br><span class="line">S1(config-line)#login</span><br><span class="line">S1(config-line)#line vty 0 15</span><br><span class="line">S1(config-line)#password cisco</span><br><span class="line">S1(config-line)#login</span><br><span class="line">S1(config-line)#exit</span><br></pre></td></tr></table></figure>

<p>（三）步骤 3. 设置命令模式口令。</p>
<p><code>操作说明</code>：将使能加密口令设置为 class。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config)#enable secret class</span><br></pre></td></tr></table></figure>

<p>（四）步骤 4. 配置交换机的第 3 层地址。</p>
<p><code>操作说明</code>：在内部虚拟接口 VLAN 99 上将交换机的 IP 地址设置为 172.17.99.11，子网掩码为 255.255.255.0。首先必须在交换机上创建 VLAN，然后才能分配地址。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config)#vlan 99</span><br><span class="line">S1(config-vlan)#exit</span><br><span class="line">S1(config)#interface vlan99</span><br><span class="line">S1(config-if)#ip address 172.17.99.11 255.255.255.0</span><br><span class="line">S1(config-if)#no shutdown</span><br><span class="line">S1(config-if)#exit</span><br></pre></td></tr></table></figure>

<p>（五）步骤 5. 为交换机 VLAN 分配端口。</p>
<p><code>操作说明</code>：将 Fastethernet 0/1、0/8 和 0/18 端口分配给 VLAN 99。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config)#interface fa0&#x2F;1</span><br><span class="line">S1(config-if)#switchport access vlan 99</span><br><span class="line">S1(config-if)#exit</span><br><span class="line">S1(config)#interface fa0&#x2F;8</span><br><span class="line">S1(config-if)#switchport access vlan 99</span><br><span class="line">S1(config-if)#exit</span><br><span class="line">S1(config)#interface fa0&#x2F;18</span><br><span class="line">S1(config-if)#switchport access vlan 99</span><br><span class="line">S1(config-if)#exit</span><br></pre></td></tr></table></figure>

<p>（六）步骤 6. 设置交换机默认网关。</p>
<p><code>操作说明</code>：S1 为第 2 层交换机，因此它根据第 2 层报头做出转发决策。如果多个网络连到一台交换机，则需要明确交换机如何转发内部工作帧，因为路径必须在第 3 层确定。这就需要指定默认网关地址，它指向路由器或第 3 层交换机。虽然本次学习没有包括外部 IP 网关，但可以假设我们最终会把 LAN 连接到路由器进行外部访问。假设路由器上的 LAN 接口为 172.17.99.1，据此为交换机设置默认网关。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config)#ip default-gateway 172.17.99.1</span><br><span class="line">S1(config)#exit</span><br></pre></td></tr></table></figure>

<p>（七）步骤 7. 检验管理 LAN 设置。</p>
<p><code>操作说明</code>：使用 <code>show interface vlan 99</code> 命令检验 VLAN 99 上的接口设置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show interface vlan 99</span><br><span class="line">Vlan99 is up, line protocol is down</span><br><span class="line">  Hardware is CPU Interface, address is 0060.47ac.1eb8 (bia 0060.47ac.1eb8)</span><br><span class="line">  Internet address is 172.17.99.11&#x2F;24</span><br><span class="line">  MTU 1500 bytes, BW 100000 Kbit, DLY 1000000 usec,</span><br><span class="line">&#x2F;&#x2F;MTU （该接口的最大传输单元）, BW （该接口的带宽）, DLY (该接口的延迟，以微秒计)</span><br><span class="line">     reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255</span><br><span class="line">  Encapsulation ARPA, loopback not set</span><br><span class="line">  ARP type: ARPA, ARP Timeout 04:00:00</span><br><span class="line">  Last input 21:40:21, output never, output hang never</span><br><span class="line">  Last clearing of &quot;show interface&quot; counters never</span><br><span class="line">  Input queue: 0&#x2F;75&#x2F;0&#x2F;0 (size&#x2F;max&#x2F;drops&#x2F;flushes); Total output drops: 0</span><br><span class="line">  Queueing strategy: fifo  &#x2F;&#x2F;排队策略</span><br><span class="line">  Output queue: 0&#x2F;40 (size&#x2F;max)</span><br><span class="line">  5 minute input rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">  5 minute output rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">     1682 packets input, 530955 bytes, 0 no buffer</span><br><span class="line">     Received 0 broadcasts (0 IP multicast)</span><br><span class="line">     0 runts, 0 giants, 0 throttles</span><br><span class="line">     0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored</span><br><span class="line">     563859 packets output, 0 bytes, 0 underruns</span><br><span class="line">     0 output errors, 23 interface resets</span><br><span class="line">     0 output buffer failures, 0 output buffers swapped out</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>此接口的带宽是多少？<br>答： 带宽是100000 Kbit</li>
<li>排队策略是什么？<br>答： fifo</li>
</ul>
<p>（八）步骤 8. 配置 PC1 的 IP 地址和默认网关。</p>
<p><code>操作说明</code>：将 PC1 的 IP 地址设置为 172.17.99.21，子网掩码设置为 255.255.255.0。配置默认网关为 172.17.99.11。单击 PC1 -&gt; Desktop（桌面）选项卡 -&gt; IP 配置，输入上述编址参数。</p>
<p><img src="/2020/02/23/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/002.jpg" alt></p>
<p>（九）步骤 9. 检验连通性。</p>
<p><code>操作说明</code>：要检验主机和交换机的配置是否正确，请从 PC1 ping 交换机。如果 ping 不成功，请排除交换机和主机的配置故障。请注意，可能需要尝试好几次才能 ping 成功。</p>
<p><img src="/2020/02/23/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/003.jpg" alt></p>
<p><code>备注</code>：如果出现ping不通的情况，请做以下排查：（1）请尝试多ping几次；（2）在步骤5中我们已经将交换机的Fastethernet 0/1、0/8 和 0/18 端口分配给 VLAN 99，所以主机PC1连接交换机的端口必须是其中之一，因为他们要在相同vlan间才能实现通讯，这个知识点以后会深入学习。我们为其更换正确的端口后需要稍等一会，等待建立链接完成，再次尝试从主机ping交换机。</p>
<p>（十）步骤 10. 配置快速以太网接口的端口速率和双工设置。</p>
<p>（1）配置 FastEthernet 0/18 的双工和速率设置。完成后使用 end 命令返回特权执行模式。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#configure terminal</span><br><span class="line">S1(config)#interface fastethernet 0&#x2F;18</span><br><span class="line">S1(config-if)#speed 100 </span><br><span class="line">S1(config-if)#duplex full</span><br><span class="line">S1(config-if)#end</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：交换机以太网接口的默认设置是自动检测，因此它会自动采用最佳设置。只有当一个端口必须以某一速率和双工模式运作时，才需要手动设置双工模式和速率。手动配置端口可能会导致双工不匹配，从而显著降低性能。</p>
<p>（2）请注意 PC1 与 S1 之间的链路是如何关闭的，删除 speed 100 和 duplex full 命令，现在使用 <code>show interface fa0/18</code> 命令检验快速以太网接口的设置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show interface fa0&#x2F;18</span><br><span class="line">FastEthernet0&#x2F;18 is up, line protocol is up (connected)</span><br><span class="line">  Hardware is Lance, address is 0060.5c36.4412 (bia 0060.5c36.4412)</span><br><span class="line"> BW 100000 Kbit, DLY 1000 usec,</span><br><span class="line">     reliability 255&#x2F;255, txload 1&#x2F;255, rxload 1&#x2F;255</span><br><span class="line">  Encapsulation ARPA, loopback not set</span><br><span class="line">  Keepalive set (10 sec)</span><br><span class="line">  Full-duplex, 100Mb&#x2F;s</span><br><span class="line">  input flow-control is off, output flow-control is off</span><br><span class="line">  ARP type: ARPA, ARP Timeout 04:00:00</span><br><span class="line">  Last input 00:00:08, output 00:00:05, output hang never</span><br><span class="line">  Last clearing of &quot;show interface&quot; counters never</span><br><span class="line">  Input queue: 0&#x2F;75&#x2F;0&#x2F;0 (size&#x2F;max&#x2F;drops&#x2F;flushes); Total output drops: 0</span><br><span class="line">  Queueing strategy: fifo</span><br><span class="line">  Output queue :0&#x2F;40 (size&#x2F;max)</span><br><span class="line">  5 minute input rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">  5 minute output rate 0 bits&#x2F;sec, 0 packets&#x2F;sec</span><br><span class="line">     956 packets input, 193351 bytes, 0 no buffer</span><br><span class="line">     Received 956 broadcasts, 0 runts, 0 giants, 0 throttles</span><br><span class="line">     0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort</span><br><span class="line">     0 watchdog, 0 multicast, 0 pause input</span><br><span class="line">     0 input packets with dribble condition detected</span><br><span class="line">     2357 packets output, 263570 bytes, 0 underruns</span><br><span class="line">     0 output errors, 0 collisions, 10 interface resets</span><br><span class="line">     0 babbles, 0 late collision, 0 deferred</span><br><span class="line">     0 lost carrier, 0 no carrier</span><br><span class="line">     0 output buffer failures, 0 output buffers swapped out</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：删除 speed 100 和 duplex full 命令的步骤：其他步骤和添加相同，只要在相应命令前加上<code>no</code>即可。</p>
<p>（十一）步骤 11. 保存配置。</p>
<p><code>操作说明</code>：我们已经完成交换机的基本配置。现在将运行配置文件备份到 NVRAM，确保所做的变更不会因系统重启或断电而丢失。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#copy running-config startup-config </span><br><span class="line"></span><br><span class="line">Destination filename [startup-config]?[Enter]</span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br></pre></td></tr></table></figure>

<p>（十二）步骤 12. 检查启动配置文件。</p>
<p><code>操作说明</code>：要查看 NVRAM 中存储的配置，请在特权执行（enable 模式）下发出 show startup-config 命令。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show startup-config</span><br><span class="line">Using 1309 bytes</span><br><span class="line">!</span><br><span class="line">version 12.2</span><br><span class="line">no service timestamps log datetime msec</span><br><span class="line">no service timestamps debug datetime msec</span><br><span class="line">no service password-encryption</span><br><span class="line">!</span><br><span class="line">hostname S1</span><br><span class="line">!</span><br><span class="line">enable secret 5 $1$mERr$9cTjUIEqNGurQiFU.ZeCi1</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">spanning-tree mode pvst</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;1</span><br><span class="line"> switchport access vlan 99</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;2</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;3</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;4</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;5</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;6</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;7</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;8</span><br><span class="line"> switchport access vlan 99</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;9</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;10</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;11</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;12</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;13</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;14</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;15</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;16</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;17</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;18</span><br><span class="line"> switchport access vlan 99</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;19</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;20</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;21</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;22</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;23</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;24</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet1&#x2F;1</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet1&#x2F;2</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface Vlan99</span><br><span class="line"> ip address 172.17.99.11 255.255.255.0</span><br><span class="line">!</span><br><span class="line">ip default-gateway 172.17.99.1</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">line con 0</span><br><span class="line"> password cisco</span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">line vty 0 4</span><br><span class="line"> password cisco</span><br><span class="line"> login</span><br><span class="line">line vty 5 15</span><br><span class="line"> password cisco</span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><strong>任务 4：管理 MAC 地址表</strong></p>
<p>（一）步骤 1. 记录主机的 MAC 地址。</p>
<p><code>操作说明</code>：通过下列步骤确定并记录 PC 网络接口卡的第 2 层（物理）地址单击 PC-&gt;选择 Desktop（桌面）选项卡-&gt;单击 Command Prompt（命令提示符）-&gt;键入 ipconfig /all。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PC&gt;ipconfig &#x2F;all</span><br><span class="line"></span><br><span class="line">FastEthernet0 Connection:(default port)</span><br><span class="line">Physical Address................: 0002.16E8.C285</span><br><span class="line">Link-local IPv6 Address.........: FE80::202:16FF:FEE8:C285</span><br><span class="line">IP Address......................: 172.17.99.21</span><br><span class="line">Subnet Mask.....................: 255.255.255.0</span><br><span class="line">Default Gateway.................: 172.17.99.11</span><br><span class="line">DNS Servers.....................: 0.0.0.0</span><br><span class="line">DHCP Servers....................: 0.0.0.0</span><br></pre></td></tr></table></figure>

<p>（二）步骤 2. 确定交换机已学习的 MAC 地址。</p>
<p><code>操作说明</code>：在特权执行模式下使用 <code>show mac-address-table</code> 命令显示 MAC 地址。 如果没有显示 MAC 地址，请从 PC1 ping S1，然后再次检查。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show mac-address-table</span><br><span class="line">          Mac Address Table</span><br><span class="line">-------------------------------------------</span><br><span class="line"></span><br><span class="line">Vlan    Mac Address       Type        Ports</span><br><span class="line">----    -----------       --------    -----</span><br><span class="line"></span><br><span class="line">  99    0002.16e8.c285    DYNAMIC     Fa0&#x2F;18</span><br></pre></td></tr></table></figure>

<p>（三）步骤 3. 清除 MAC 地址表。</p>
<p><code>操作说明</code>：要删除现有 MAC 地址，请在特权执行模式下使用 <code>clear mac-address-table dynamic</code> 命令。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#clear mac-address-table dynamic</span><br></pre></td></tr></table></figure>

<p>（四）步骤 4. 确认结果。</p>
<p><code>操作说明</code>：确认 MAC 地址表已清除。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show mac-address-table</span><br><span class="line">          Mac Address Table</span><br><span class="line">-------------------------------------------</span><br><span class="line"></span><br><span class="line">Vlan    Mac Address       Type        Ports</span><br><span class="line">----    -----------       --------    -----</span><br></pre></td></tr></table></figure>

<p>（五）步骤 5. 再次检查 MAC 地址表。</p>
<p><code>操作说明</code>：在特权执行模式下再次查看 MAC 地址表。如果地址表没有变化，请从 PC1 ping S1，然后再次检查。</p>
<p>（六）步骤 6. 设置静态 MAC 地址。</p>
<p><code>操作说明</code>：要指定主机可以连接到哪些接口，一个方法是创建主机 MAC 地址与端口的静态映射表。使用本任务步骤 1 中为 PC1 记录的地址 0002.16E8.C285 设置快速以太网接口 0/18 的静态 MAC 地址。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config)#mac-address-table static 0002.16E8.C285 vlan 99 interface fastethernet 0&#x2F;18</span><br></pre></td></tr></table></figure>

<p>（七）步骤 7. 确认结果。</p>
<p><code>操作说明</code>：检查 MAC 地址表条目。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show mac-address-table</span><br><span class="line">          Mac Address Table</span><br><span class="line">-------------------------------------------</span><br><span class="line"></span><br><span class="line">Vlan    Mac Address       Type        Ports</span><br><span class="line">----    -----------       --------    -----</span><br><span class="line"></span><br><span class="line">  99    0002.16e8.c285    STATIC      Fa0&#x2F;18</span><br></pre></td></tr></table></figure>

<p>（八）步骤 8. 删除静态 MAC 条目。</p>
<p><code>操作说明</code>：进入配置模式，在命令串前加上 no 以删除静态 MAC。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config)#no mac-address-table static 0002.16E8.C285 vlan 99 interface fastethernet 0&#x2F;18</span><br></pre></td></tr></table></figure>

<p>（九）步骤 9. 确认结果。</p>
<p><code>操作说明</code>：使用 show mac-address-table static 命令确认静态 MAC 地址已被清除。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show mac-address-table</span><br><span class="line">          Mac Address Table</span><br><span class="line">-------------------------------------------</span><br><span class="line"></span><br><span class="line">Vlan    Mac Address       Type        Ports</span><br><span class="line">----    -----------       --------    -----</span><br></pre></td></tr></table></figure>

<p><strong>任务 5：配置端口安全性</strong></p>
<p>（一）步骤 1. 配置第二台主机。</p>
<p><code>操作说明</code>：本任务需要第二台主机，将 PC2 的 IP 地址设置为 172.17.99.22，子网掩码为 255.255.255.0，默认网关为 172.17.99.11，暂时不要将此 PC 连接到交换机。</p>
<p><img src="/2020/02/23/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/004.jpg" alt></p>
<p>（二）步骤 2. 检验连通性。</p>
<p><code>操作说明</code>：从主机 ping 交换机的 VLAN 99 IP 地址，检验 PC1 和交换机的配置是否仍然正确。如果 ping 失败，请排除主机和交换机的配置故障。</p>
<p>（三）步骤 3. 确定交换机已学习了哪些 MAC 地址。</p>
<p><code>操作说明</code>：在特权执行模式下使用 <code>show mac-address-table</code> 命令显示已学习的 MAC 地址。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show mac-address-table</span><br><span class="line">          Mac Address Table</span><br><span class="line">-------------------------------------------</span><br><span class="line"></span><br><span class="line">Vlan    Mac Address       Type        Ports</span><br><span class="line">----    -----------       --------    -----</span><br><span class="line"></span><br><span class="line">  99    0002.16e8.c285    DYNAMIC     Fa0&#x2F;18</span><br></pre></td></tr></table></figure>

<p>（四）步骤 4. 列出端口安全选项。</p>
<p><code>操作说明</code>：研究用于在快速以太网接口 0/18 上设置端口安全的选项。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1# configure terminal</span><br><span class="line">S1(config)#interface fastethernet 0&#x2F;18</span><br><span class="line">S1(config-if)#switchport port-security ?</span><br><span class="line">  mac-address  Secure mac address</span><br><span class="line">  maximum      Max secure addresses</span><br><span class="line">  violation    Security violation mode</span><br><span class="line">  &lt;cr&gt;</span><br></pre></td></tr></table></figure>

<p>（五）步骤 5. 在接入端口上配置端口安全性。</p>
<p><code>操作说明</code>：配置交换机端口 FastEthernet 0/18 仅接受两台设备，动态学习这些设备的 MAC 地址，并在发生安全违规事件时关闭端口。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config-if)#switchport mode access</span><br><span class="line">S1(config-if)#switchport port-security</span><br><span class="line">S1(config-if)#switchport port-security maximum 2</span><br><span class="line">S1(config-if)#switchport port-security mac-address sticky</span><br><span class="line">S1(config-if)#switchport port-security violation shutdown</span><br><span class="line">S1(config-if)#exit</span><br></pre></td></tr></table></figure>

<p>（六）步骤 6. 确认结果。</p>
<p><code>操作说明</code>：使用 <code>show port-security interface fa0/18</code> 命令显示端口安全设置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show port-security interface fa0&#x2F;18</span><br><span class="line">Port Security              : Enabled</span><br><span class="line">Port Status                : Secure-up</span><br><span class="line">Violation Mode             : Shutdown</span><br><span class="line">Aging Time                 : 0 mins</span><br><span class="line">Aging Type                 : Absolute</span><br><span class="line">SecureStatic Address Aging : Disabled</span><br><span class="line">Maximum MAC Addresses      : 2</span><br><span class="line">Total MAC Addresses        : 0</span><br><span class="line">Configured MAC Addresses   : 0</span><br><span class="line">Sticky MAC Addresses       : 0</span><br><span class="line">Last Source Address:Vlan   : 0000.0000.0000:0</span><br><span class="line">Security Violation Count   : 0</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>FastEthernet 0/18 上允许多少安全地址？<br>答：只接受两台设备，即只允许两个安全地址</li>
<li>此端口的安全操作是什么？<br>答：在发生违规时拦截来自无效主机的流量</li>
</ul>
<p>（七）步骤 7. 检查运行配置文件。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show running-config</span><br><span class="line">Building configuration...</span><br><span class="line"></span><br><span class="line">Current configuration : 1441 bytes</span><br><span class="line">!</span><br><span class="line">version 12.2</span><br><span class="line">no service timestamps log datetime msec</span><br><span class="line">no service timestamps debug datetime msec</span><br><span class="line">no service password-encryption</span><br><span class="line">!</span><br><span class="line">hostname S1</span><br><span class="line">!</span><br><span class="line">enable secret 5 $1$mERr$9cTjUIEqNGurQiFU.ZeCi1</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">spanning-tree mode pvst</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;1</span><br><span class="line"> switchport access vlan 99</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;2</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;3</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;4</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;5</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;6</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;7</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;8</span><br><span class="line"> switchport access vlan 99</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;9</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;10</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;11</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;12</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;13</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;14</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;15</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;16</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;17</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;18</span><br><span class="line"> switchport access vlan 99</span><br><span class="line"> switchport mode access</span><br><span class="line"> switchport port-security</span><br><span class="line"> switchport port-security maximum 2</span><br><span class="line"> switchport port-security mac-address sticky </span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;19</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;20</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;21</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;22</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;23</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0&#x2F;24</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet1&#x2F;1</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet1&#x2F;2</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface Vlan99</span><br><span class="line"> ip address 172.17.99.11 255.255.255.0</span><br><span class="line">!</span><br><span class="line">ip default-gateway 172.17.99.1</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">line con 0</span><br><span class="line"> password cisco</span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">line vty 0 4</span><br><span class="line"> password cisco</span><br><span class="line"> login</span><br><span class="line">line vty 5 15</span><br><span class="line"> password cisco</span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>所列语句是否直接反映了运行配置安全的实施情况？<br>答：是的</li>
</ul>
<p>（八）步骤 8. 在端口上修改端口安全设置。</p>
<p><code>操作说明</code>：在快速以太网接口 0/18 上，将端口安全最大 MAC 地址计数更改为 1。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1(config)#int f0&#x2F;18</span><br><span class="line">S1(config-if)#switchport port-security maximum 1</span><br></pre></td></tr></table></figure>

<p>（九）步骤 9. 确认结果。</p>
<p>（1）使用 <code>show port-security interface fa0/18</code> 命令显示端口安全设置。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show port-security interface fa0&#x2F;18</span><br><span class="line">Port Security              : Enabled</span><br><span class="line">Port Status                : Secure-up</span><br><span class="line">Violation Mode             : Shutdown</span><br><span class="line">Aging Time                 : 0 mins</span><br><span class="line">Aging Type                 : Absolute</span><br><span class="line">SecureStatic Address Aging : Disabled</span><br><span class="line">Maximum MAC Addresses      : 1</span><br><span class="line">Total MAC Addresses        : 0</span><br><span class="line">Configured MAC Addresses   : 0</span><br><span class="line">Sticky MAC Addresses       : 0</span><br><span class="line">Last Source Address:Vlan   : 0000.0000.0000:0</span><br><span class="line">Security Violation Count   : 0</span><br></pre></td></tr></table></figure>

<p><code>学习小问</code>：</p>
<ul>
<li>端口安全设置是否已更改为步骤 8 中的配置？<br>答：已经更改</li>
</ul>
<p>（2）从 PC1 ping 交换机的 VLAN 99 地址，检验连通性并刷新 MAC 地址表。</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#show mac-address-table</span><br><span class="line">          Mac Address Table</span><br><span class="line">-------------------------------------------</span><br><span class="line"></span><br><span class="line">Vlan    Mac Address       Type        Ports</span><br><span class="line">----    -----------       --------    -----</span><br><span class="line"></span><br><span class="line">  99    0002.16e8.c285    STATIC      Fa0&#x2F;18</span><br></pre></td></tr></table></figure>

<p>（十）步骤 10. 引入一台流氓主机。</p>
<p>（1）断开连接到交换机快速以太网接口 0/18 的 PC。将分配有 IP 地址 172.17.99.22 的 PC2 连接到端口 FastEthernet 0/18。 从新主机 ping VLAN 99 地址 172.17.99.11。注：网络收敛可能需要一些时间。切换仿真模式和实时模式可加快收敛。</p>
<p><img src="/2020/02/23/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/005.jpg" alt></p>
<p>（2）此时尝试从PC2 ping S1 时会发现无法啊ping通。</p>
<p><img src="/2020/02/23/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/006.jpg" alt></p>
<p>（十一）步骤 11. 重新激活端口。</p>
<p><code>操作说明</code>：只要流氓主机与 FastEthernet 0/18 相连，主机与交换机之间便不会有流量通过。流氓主机与交换机的连接，重新连接 PC1 与 FastEthernet 0/18，在交换机上输入下列命令以重新激活该端口：</p>
<p><code>键入代码</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S1#configure terminal</span><br><span class="line">S1(config)#interface fastethernet 0&#x2F;18</span><br><span class="line">S1(config-if)#no shutdown</span><br><span class="line">S1(config-if)#exit</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：如果发现无法重新开启该端口，请重新加载交换机即可，具体方法请查阅<code>任务1的步骤5</code>。</p>
<p>（十二）步骤 12. 检验连通性。</p>
<p><code>操作说明</code>：网络收敛后，PC1 可以再次 ping 通 S1。</p>
<h3 id="学习总结"><a href="#学习总结" class="headerlink" title="学习总结"></a><strong>学习总结</strong></h3><p><strong>到此为止，有关交换机的基本配置我们已经初步掌握，加下来要做的就是反复练习，加油！</strong></p>
]]></content>
      <categories>
        <category>网络工程专业学习</category>
      </categories>
      <tags>
        <tag>网络工程</tag>
        <tag>交换机</tag>
      </tags>
  </entry>
  <entry>
    <title>博客网站的发布</title>
    <url>/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/</url>
    <content><![CDATA[<h3 id="域名的注册"><a href="#域名的注册" class="headerlink" title="域名的注册"></a><strong>域名的注册</strong></h3><p><strong>选择域名注册商的因素有哪些？</strong></p>
<p>域名注册商有很多，国内的万网、百度云、腾讯云，国外的GoDaddy、 Namesilo等等。</p>
<p><code>考虑因素之一</code>：备案。</p>
<p>国内域名注册后需要备案，因为政策因素也可能随时被停用，国外域名注册后无需备案。</p>
<p><code>考虑因素之二</code>：控制权与转移权</p>
<p>因为没有国内的政策限制，国外的域名注册商通常会给予用户域名的完全控制权与转移权。</p>
<a id="more"></a>

<p><code>考虑因素之三</code>：安全性</p>
<p>因为国外域名的服务器在国外，在安全性方面可能比国内域名稍差。</p>
<p><code>考虑因素之四</code>：交流和沟通</p>
<p>注册国外域名在交流和沟通上需要熟悉外语，不如国内方便。</p>
<p><code>考虑因素之五</code>：价格</p>
<p>不论国内还是国外的域名平台，都存在比较便宜的域名，这一点需要我们自己比较。</p>
<p>综合以上五点考虑，本站域名申请使用国外域名平台<code>Namesilo</code>，是目前价格较便宜的域名平台，支持支付宝、Paypal、Visa 等多种付款方式，提供免费的域名隐私保护，性价比较高，用户评价也不错。</p>
<p><strong>域名注册步骤</strong></p>
<p><code>第一步</code>，打开<a href="https://www.namesilo.com/create_account.php">Namesilo官网的注册界面</a>，注册我们的账户。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/001.jpg" alt></p>
<p><code>备注</code>：按照相关信息填写，这里需要注意的是在注册成功后会发送一份验证邮件到我们注册时填写的邮箱内，我们点击邮件内的链接并登陆账户即可验证成功。</p>
<p><code>第二步</code>，登录到我们的账户，选择并点击菜单栏的<code>register</code>，跳转到域名注册页面。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/002.jpg" alt></p>
<p><code>第三步</code>，在搜索框中输入我们想要注册域名的关键词并搜索，例如<code>zazlove</code>，跳转到搜索结果页面。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/003.jpg" alt></p>
<p><code>第四步</code>，勾选我们需要的域名类型，并点击<code>REGISTER CHECKED DOMAINS</code>蓝色按钮，跳转到<code>高级DNS</code>服务选择页面。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/004.jpg" alt></p>
<p><code>第五步</code>，勾选<code>No</code>并点击<code>Continue to Cart</code>跳转到域名服务配置页面。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/005.jpg" alt></p>
<p><code>第六步</code>，这里有几个需要注意的服务选择：<code>Service Link</code>不做改变，<code>NameServers</code>不做改变，<code>Auto-Renew</code>（自动续费）选择<code>No</code>，<code>Privacy Setting</code>（个人隐私保护）选择<code>WHOIS Privacy</code>，<code>Set all years to</code>（首次购买域名年限）选择<code>1</code>，当然也可以按照我们的需求做相应改变，点击<code>CONTINUE</code>橙色按钮跳转到支付方式选择页面。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/006.jpg" alt></p>
<p><code>第七步</code>，选择相应的支付方式进行支付，这里我选择支付宝支付，但需要注意的是支付宝需要提供绑定邮箱，如果自己的支付宝没有绑定邮箱，可以查看教程<a href="https://jingyan.baidu.com/article/b2c186c8cc3d70c46ef6ffec.html">支付宝如何绑定邮箱</a>，点击一旁的<code>go</code>橙色按钮跳转到支付页面。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/007.jpg" alt></p>
<p><code>第八步</code>，支付成功后，你的域名已经注册完成了，这时可以点击页面右上角的<code>Manage My Domains</code>按钮打开域名管理界面进行域名的相关设置操作。</p>
<h3 id="将本地博客文件上传到GitHub"><a href="#将本地博客文件上传到GitHub" class="headerlink" title="将本地博客文件上传到GitHub"></a><strong>将本地博客文件上传到GitHub</strong></h3><p><code>第一步</code>：打开<code>我的GitHub主页</code>，点击右上角<code>我的头像</code>，选择并打开<code>Your repositories</code>，点击靠近右上角的<code>New</code>绿色按钮新建一个代码仓库。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/008.jpg" alt></p>
<p><code>备注</code>：这里需要注意几点：<code>Repository name</code>填写<code>你的用户名.github.io</code>，例如，我的GitHub用户名是zazdream，那么仓库名称就是 <code>zazdream.github.io</code>；<code>Description</code>填写关于这个仓库的描述，我这里填写的就是<code>张之卿的个人博客网站</code>方便记忆；代码仓库创建成功后不会立即生效，需要过一段时间。</p>
<p><code>第二步</code>：修改博客网站根配置文件<code>_config.yml</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: </span><br><span class="line">    github: git@github.com:zazdream&#x2F;zazdream.github.io.git,master</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：github后面的地址书写格式：前部分不变，后部分将<code>zazdream</code>修改成对应名称即可。</p>
<p><code>第三步</code>：将个人博客的本地文件部署到GitHub代码仓库。</p>
<p>从个人博客本地文件的根目录打开Git控制台，依次键入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean 回车</span><br><span class="line"></span><br><span class="line">hexo g 回车</span><br><span class="line"></span><br><span class="line">hexo d 回车</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：如果执行<code>hexo d</code>时报如错：<code>Deployer not found: git</code>，这是因为缺少一个插件，我们可以通过命令安装：<code>npm install hexo-deployer-git --save</code>，安装插件完成后再次输入<code>hexo d</code>即可将博客网站本地文件中本次有改动的代码全部提交。</p>
<h3 id="修改域名服务器NS"><a href="#修改域名服务器NS" class="headerlink" title="修改域名服务器NS"></a><strong>修改域名服务器NS</strong></h3><p>由于 GitHub Pages 的服务器在国外，国内访问速度可能会非常慢。这里我们配置<code>Cloudflare</code>的免费CDN为我们的网站进行加速。</p>
<p><strong>什么是CDN?</strong></p>
<p>CDN（Content delivery network 或 Content distribution network）是指一种透过互联网互相连接的计算机网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、影片、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。</p>
<p>简单来说，CDN 就是部署在世界各地的缓存服务器，它们会提前缓存网站上的资源，然后当用户想要访问相关资源时，直接从 CDN 服务器上取就可以了。这样不仅可以增加访问速度减少访问延迟，还可以减缓网站服务器上的压力。</p>
<p><strong>选择Cloudflare的几大优势</strong></p>
<p>第一，国内的 CDN 服务提供商有不少，但是基本都需要备案，国外的Cloudflare无需备案。</p>
<p>第二，Cloudflare 是全球最大的 DNS 服务提供商之一。</p>
<p>第三，Cloudflare 还提供 CDN、SSL 证书、DDos 保护等服务。</p>
<p>第四，Cloudflare 在国内部署有大量的节点。</p>
<p>第五，Cloudflare 与百度合作，能解决百度爬无法抓取 GitHub Pages 的问题。</p>
<p>综合以上几点，我们选择国外的 <code>Cloudflare</code>作为我们的CDN 服务提供商。</p>
<p><strong>CDN 配置</strong></p>
<p><code>第一步</code>，打开<code>Cloudflare</code>官网(国际版，不是和百度云合作的官网)注册一个帐号，注意注册完成后需要验证邮箱。</p>
<p><code>第二步</code>，注册好后，登陆到我的账户，点击<code>Add site</code>添加你的个性化域名，例如我的<code>zazdream.com</code>。</p>
<p><code>第三步</code>，添加好域名后，选择<code>免费计划</code>。当然这里根据自己的情况选择，可以选择收费计划，提供的服务更多。</p>
<p><code>第四步</code>，点击<code>Scan DNS Records</code>，等待扫描完成。即使没有扫到DNS记录也没有关系，我们可以自己添加，这里只需要添加如下两条，图中也给出添加步骤：</p>
<table>
<thead>
<tr>
<th align="center">Type</th>
<th align="center">Name</th>
<th align="center">Cotent</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td align="center">zazdream.com</td>
<td align="center">185.199.108.153</td>
</tr>
<tr>
<td align="center">CNAME</td>
<td align="center">www</td>
<td align="center">zazdream.github.io</td>
</tr>
</tbody></table>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/009.jpg" alt></p>
<p><code>备注</code>：关于添加两条DNS配置记录，这里需要注意几点：</p>
<p>（1）添加<code>A记录</code>，将其指向以下 4 个 IP 地址中的至少一个。此条<code>A记录</code>的意思是，当我输入<code>zazdream.com</code>这个域名的时候，访问的是<code>185.199.108.153</code>这个地址，而<code>185.199.108.153</code>是 GitHub 的地址，其他同理。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure>

<p>（2）添加<code>CNAME记录</code>。此条<code>CNAME记录</code>的意思是，当我访问<code>zazdream.github.io</code>这个地址的时候，会跳转到<code>zazdream.com</code>，之后的过程就和<code>A记录</code>相同了，即最终访问 <code>185.199.108.153</code>。</p>
<p>（3）添加<code>CNAME文件</code>。要想使<code>CNAME记录</code>生效，需要在在博客网站本地文件的根目录的<code>source</code>文件夹里，新建一个命名为<code>CNAME</code>的无后缀文件，文件内容填写我们的个性域名，如下图所示。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/010.jpg" alt></p>
<p><code>第五步</code>，添加DNS记录完成后，<code>Cloudflare</code>会要求我们把自己的<code>DNS服务器</code>替换成他提供的。这时，我们需要登录到自己的域名服务商网站，我们的是<a href="https://www.namesilo.com/login.php">namesilo</a>，打开域名管理页面，勾选我们需要更改的域名，点击上方菜单选项中的<code>ChangeNameservers</code>跳转到<code>NameServers</code>修改页面，将前两条<code>NameServer1</code>和<code>NameServer2</code>修改成<code>Cloudflare</code>提供的，删除第三条<code>NameServer3</code>，点击<code>SUBMIT</code>橙色按钮，静待几分钟，刷新页面。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/011.jpg" alt></p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/012.jpg" alt></p>
<p>备注：<code>Cloudflare</code>提供的的<code>DNS服务器记录</code>在<code>DNS管理页面</code>的下方可以查看，如下图所示。</p>
<p><img src="/2020/02/22/%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%9A%84%E5%8F%91%E5%B8%83/013.jpg" alt></p>
<p><code>第六步</code>，DNS 修改完成后，点击<code>DNS管理页面</code>的下方的<code>Recheck Nameservers</code>按钮来检查<code>NS记录</code>是否正确设置。几分钟以后，显示<code>Great news! Cloudflare is now protecting your site</code>说明设置成功。</p>
<p><strong>Cloudflare的菜单详解及基础设置</strong></p>
<p><strong>Overview菜单设置</strong></p>
<p><code>under attack mode</code>：当我们的网站被攻击的时候打开它，这样可以阻止攻击。</p>
<p><code>development mode</code>：由于<code>cloudflare</code>采用了缓存技术，当你更新了网站的内容，不一定能马上在前台看到更新的内容。这个时候你只要打开 <code>development mode</code> 就可以马上看到网站更新的内容。当然，正常情况下还是关掉比较好。</p>
<p><strong>Analytics 菜单设置</strong></p>
<p>这里主要是看网站使用<code>cloudflare</code>之后的一些分析数据，<code>Analytics</code> 下面包含几个子菜单：<code>Traffic</code>、<code>security</code>、<code>Performance</code>、<code>DNS</code>。</p>
<p><code>Traffic子菜单</code>：主要是网站在过去某一个时间段的请求、带宽、访客情况。</p>
<p><code>Security子菜单</code>：主要是某一段时间内受到的威胁数据，包括威胁次数、来自哪些国家、威胁的类型等等。</p>
<p><code>Performance子菜单</code>：付费功能。</p>
<p><code>DNS 子菜单</code>：主要是 DNS 查询的数据。</p>
<p><strong>DNS 菜单设置</strong></p>
<p>在 DNS 菜单里面，你可以随意添加或删除所有 DNS 记录，也可以选择使用或不使用 cloudflare 的 CDN 服务。</p>
<p><code>注意</code>：只有<code>A记录</code>和<code>CNAME记录</code>才可以设置使用 CDN 服务，我们只需要点亮<code>Proxy status</code>处的<code>云朵小图标</code>即可切换成使用 CDN 的状态。</p>
<p><strong>SSL/TLS 菜单设置</strong></p>
<p>这里面主要是网站加密的设置。</p>
<p><code>SSL 设置</code>：如果你本来的网站有 SSL 证书，这里选择 full 即可，即浏览器到 Cloudflare 和 Cloudflare 到服务器都是加密的。</p>
<p><code>Always Use HTTPS设置</code>：设置成一直使用 https 链接，建议打开。</p>
<p><code>Opportunistic Encryption、Authenticated Origin Pulls、Onion Routing设置</code>：这三项设置全部选择打开。</p>
<p><code>Minimum TLS Version设置</code>：选择 1.1 即可，如果选择太高可能导致网站打不开。</p>
<p><strong>Firewall 菜单设置</strong></p>
<p>Firewall 菜单里面可以对网站安全进一步设置，限制某些 IP 或地区的用户访问等。</p>
<p><code>Firewall Events 子菜单</code>：这里面可以查看防火墙的一些小事件，比如屏蔽的一些访问。</p>
<p><code>Managed Rules子菜单</code>：付费功能。</p>
<p><code>Firewall Rules子菜单</code>：这里可以设置限制其他人访问你的网站的规则，每个账户只能设置 5 个限制规则。</p>
<p><code>TOOLS 子菜单</code>：这里的功能是 firewall rules 功能的补充，都是对用户访问你的网站的一些设置。</p>
<p><code>Settting 子菜单</code>：<code>Security Level</code>设置 low 即可，如果设置太高，就会过于敏感，导致很多用户受影响；<code>Challenge Passage</code>是验证的有效期，可以设置久一点，比如 1 hour；<code>Browser Integrity Check</code> 和 <code>Privacy Pass Support</code>全部打开。</p>
<p><strong>Speed 菜单设置</strong></p>
<p><code>Auto Minify</code>：网页最小化处理。把<code>Javascript</code>、<code>css</code>、<code>html</code>全部勾选。</p>
<p><code>Brotli</code>：这是一种比 gzip 更好的网页压缩方式，打开即可。</p>
<p><strong>Caching 菜单设置</strong></p>
<p><code>Purge Cache</code>：清除缓存。其中<code>Custom Purge</code>是清除指定页面的缓存，我们可以点击 Custom Purge，然后在框里输入要清除的链接，再点击 Purge 即可；<code>Purge Everything</code>是清除整个网站的缓存。</p>
<p><code>Caching Level</code>：缓存水平设置，决定缓存哪些内容，这里选择 standard 即可。</p>
<p><code>Browser Cache TTL</code>：即浏览器缓存过期时间，决定浏览器多久向网站获取一次新缓存。</p>
<p><strong>Page Rules 菜单设置</strong></p>
<p>免费版本可以设置 3 个页面的规则。</p>
<h3 id="到这里，我们的博客网站就算真正建成了，通过我们的个性域名打开博客网站开始体验吧"><a href="#到这里，我们的博客网站就算真正建成了，通过我们的个性域名打开博客网站开始体验吧" class="headerlink" title="到这里，我们的博客网站就算真正建成了，通过我们的个性域名打开博客网站开始体验吧"></a><strong>到这里，我们的博客网站就算真正建成了，通过我们的个性域名打开博客网站开始体验吧</strong></h3><p>文章参考：<a href="https://tding.top/">小丁的个人博客</a></p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>域名</tag>
        <tag>CDN加速</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客主题之Icarus的图片轮播效果</title>
    <url>/2020/02/22/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E5%9B%BE%E7%89%87%E8%BD%AE%E6%92%AD%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h3 id="分享来自一位大佬网站首页的图片轮播效果"><a href="#分享来自一位大佬网站首页的图片轮播效果" class="headerlink" title="分享来自一位大佬网站首页的图片轮播效果"></a><strong>分享来自一位大佬网站首页的图片轮播效果</strong></h3><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a><strong>实现步骤</strong></h3><p><code>第一步</code>：按照路径打开<code>themes/hexo-theme-icarus-master/layout/index.ejs</code>，修改<code>index.ejs</code>如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">&lt;%- _css(&#39;css&#x2F;main_banner&#39;) %&gt;</span><br><span class="line">&lt;div id&#x3D;&#39;banner&#39; class&#x3D;&#39;card&#39;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;%- _js(&#39;js&#x2F;main_banner&#39;, true) %&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">&lt;% page.posts.each(function(post)&#123; %&gt;</span><br><span class="line">    &lt;%- _partial(&#39;common&#x2F;article&#39;, &#123; post, index: true &#125;) %&gt;</span><br><span class="line">&lt;% &#125;); %&gt;</span><br><span class="line">&lt;% if (page.total &gt; 1) &#123; %&gt;</span><br><span class="line">    &lt;%- _partial(&#39;common&#x2F;paginator&#39;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><code>第二步</code>：按照路径打开<code>themes/hexo-theme-icarus-master/source/css</code>，在<code>css</code>文件夹内新建文件 <code>main_banner.css</code>内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 公共样式 *&#x2F;</span><br><span class="line">#banner &#123;</span><br><span class="line">    margin-bottom: 1rem;</span><br><span class="line">&#125;</span><br><span class="line">#banner .pull-left&#123;</span><br><span class="line">    float: left!important;</span><br><span class="line">&#125;</span><br><span class="line">#banner .pull-right&#123;</span><br><span class="line">    float: right!important;</span><br><span class="line">&#125;</span><br><span class="line">#banner .clearfix:after &#123;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">    display: block;</span><br><span class="line">    font-size: 0;</span><br><span class="line">    content: &quot; &quot;;</span><br><span class="line">    clear: both;</span><br><span class="line">    height: 0;</span><br><span class="line">&#125;</span><br><span class="line">#banner .clearfix &#123; display: inline-block; &#125;</span><br><span class="line">&#x2F;* start commented backslash hack \*&#x2F;</span><br><span class="line">* html .clearfix &#123; height: 1%; &#125;</span><br><span class="line">#banner .clearfix &#123; display: block; &#125;</span><br><span class="line">&#x2F;* close commented backslash hack *&#x2F;</span><br><span class="line">#banner ul,li&#123;</span><br><span class="line">    margin:0;</span><br><span class="line">    padding:0;</span><br><span class="line">    list-style-type: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 轮播图插件样式 *&#x2F;</span><br><span class="line">#banner .carousel-box&#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width:100%;</span><br><span class="line">&#125;</span><br><span class="line">#banner .transverse-box&#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width:66.7%;</span><br><span class="line">&#125;</span><br><span class="line">#banner .img-item&#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top:0;</span><br><span class="line">    left:0;</span><br><span class="line">    z-index: 0;</span><br><span class="line">&#125;</span><br><span class="line">#banner .vertical-box&#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width:33.3%;</span><br><span class="line">&#125;</span><br><span class="line">#banner .vertical-box ul&#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">#banner .img-item&#123;</span><br><span class="line">    transition: width 1s;</span><br><span class="line">&#125;</span><br><span class="line">#banner .img-item img&#123;</span><br><span class="line">    width:100%;</span><br><span class="line">    height:100%;</span><br><span class="line">&#125;</span><br><span class="line">#banner .vertical-box ul li&#123;</span><br><span class="line">    font-size: 0;</span><br><span class="line">&#125;</span><br><span class="line">#banner .vertical-box ul li img&#123;</span><br><span class="line">    width:100%;</span><br><span class="line">    height:100%;</span><br><span class="line">&#125;</span><br><span class="line">#banner .left-arrow&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top:50%;</span><br><span class="line">    left:0px;</span><br><span class="line">    color:#fff;</span><br><span class="line">    margin-top:-35px;</span><br><span class="line">    font-size: 50px;</span><br><span class="line">    font-weight: 200;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    width:50px;</span><br><span class="line">    height:70px;</span><br><span class="line">    background:rgba(0,0,0,0.6);</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    z-index: 99;</span><br><span class="line">&#125;</span><br><span class="line">#banner .right-arrow&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top:50%;</span><br><span class="line">    right:0px;</span><br><span class="line">    color:#fff;</span><br><span class="line">    margin-top:-35px;</span><br><span class="line">    font-size: 50px;</span><br><span class="line">    font-weight: 200;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    width:50px;</span><br><span class="line">    height:70px;</span><br><span class="line">    background:rgba(0,0,0,0.6);</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    z-index: 99;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>第三步</code>：按照路径打开<code>themes/hexo-theme-icarus-master/source/js</code>，在<code>js</code>文件夹内新建文件<code>main_banner.js</code>内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var Carousel &#x3D; function () &#123;</span><br><span class="line">&#125;;</span><br><span class="line">Carousel.prototype &#x3D; &#123;</span><br><span class="line">    &#x2F;&#x2F;容器选择器</span><br><span class="line">    container:&quot;&quot;,</span><br><span class="line">    &#x2F;&#x2F;图片地址数组</span><br><span class="line">    datas:null,</span><br><span class="line">    autoplaySpeed:null,</span><br><span class="line">    autoplay:false,</span><br><span class="line">    &#x2F;&#x2F; 初始化</span><br><span class="line">    init:function(options)&#123;</span><br><span class="line">        this.container &#x3D; options.container;</span><br><span class="line">        this.datas &#x3D; options.datas;</span><br><span class="line">        this.autoplaySpeed &#x3D; options.autoplaySpeed;</span><br><span class="line">        this.autoplay &#x3D; options.autoplay;</span><br><span class="line">        $(this.container).html(&quot;&quot;);</span><br><span class="line">        this.createCarousel(options);</span><br><span class="line">        this.arrowHover();</span><br><span class="line">        this.tabImg();</span><br><span class="line">        this.setZindex();</span><br><span class="line">        &#x2F;&#x2F;判断是否需要自动播放</span><br><span class="line">        if(options.autoplay || this.autoplay &#x3D;&#x3D; true)&#123;</span><br><span class="line">            this.autoPlay(this.autoplaySpeed);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    createCarousel:function(options)&#123;</span><br><span class="line">        this.createDOM(this.container,options);</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 生成DOM</span><br><span class="line">    createDOM:function(container,options)&#123;</span><br><span class="line">        var html &#x3D; &quot;&quot;;</span><br><span class="line">        html &#x3D; &quot;&lt;div class&#x3D;&#39;carousel-box clearfix&#39;&gt;&quot;+</span><br><span class="line">                    &quot;&lt;div class&#x3D;&#39;transverse-box pull-left&#39;&gt;&quot;+</span><br><span class="line">                    &quot;&lt;&#x2F;div&gt;&quot;+</span><br><span class="line">                    &quot;&lt;div class&#x3D;&#39;vertical-box pull-right&#39;&gt;&quot;+</span><br><span class="line">                        &quot;&lt;ul&gt;&quot;+</span><br><span class="line">                        &quot;&lt;&#x2F;ul&gt;&quot;+</span><br><span class="line">                    &quot;&lt;&#x2F;div&gt;&quot;+</span><br><span class="line">                    &quot;&lt;span class&#x3D;&#39;left-arrow&#39;&gt;‹&lt;&#x2F;span&gt;&quot;+</span><br><span class="line">                    &quot;&lt;span class&#x3D;&#39;right-arrow&#39;&gt;›&lt;&#x2F;span&gt;&quot;+         </span><br><span class="line">                &quot;&lt;&#x2F;div&gt;&quot;;</span><br><span class="line">        $(container).html(html);</span><br><span class="line">        var imgLength &#x3D; options.datas.length;</span><br><span class="line">        for(var i &#x3D; 0;i&lt;imgLength;i++)&#123;</span><br><span class="line">            $(&quot;.transverse-box&quot;).append(&quot;&lt;div class&#x3D;&#39;img-item&#39;&gt;&lt;a href&#x3D;&#39;&quot; + options.datas[i].url + &quot;&#39; target&#x3D;&#39;_blank&#39;&gt;&lt;img src&#x3D;&#39;&quot; </span><br><span class="line">                + options.datas[i].img +&quot;&#39; url&#x3D;&#39;&quot; + options.datas[i].url + &quot;&#39; alt&#x3D;&#39;&quot; + options.datas[i].alt + &quot;&#39;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;&quot;);</span><br><span class="line">        &#125;;</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).append(&quot;&lt;li&gt;&lt;a href&#x3D;&#39;&quot; + options.datas[1].url + &quot;&#39; target&#x3D;&#39;_blank&#39;&gt;&lt;img src&#x3D;&#39;&quot;+options.datas[1].img +&quot;&#39; alt&#x3D;&#39;&quot; + options.datas[1].alt + &quot;&#39;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&quot;);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).append(&quot;&lt;li&gt;&lt;a href&#x3D;&#39;&quot; + options.datas[2].url + &quot;&#39; target&#x3D;&#39;_blank&#39;&gt;&lt;img src&#x3D;&#39;&quot;+options.datas[2].img +&quot;&#39; alt&#x3D;&#39;&quot; + options.datas[2].alt + &quot;&#39;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">    arrowHover:function()&#123;</span><br><span class="line">        $(&quot;.carousel-box&quot;).hover(function()&#123;</span><br><span class="line">            $(&quot;.left-arrow,.right-arrow&quot;).css(&quot;display&quot;,&quot;flex&quot;);</span><br><span class="line">        &#125;,function()&#123;</span><br><span class="line">            $(&quot;.left-arrow,.right-arrow&quot;).css(&quot;display&quot;,&quot;none&quot;);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 点击左右箭头触发翻页</span><br><span class="line">    tabImg:function()&#123;</span><br><span class="line">        var obj &#x3D; this;</span><br><span class="line">        $(&quot;.left-arrow&quot;).on(&quot;click&quot;,function()&#123;</span><br><span class="line">           obj.changeZindex_add();</span><br><span class="line">        &#125;)</span><br><span class="line">        $(&quot;.right-arrow&quot;).on(&quot;click&quot;,function()&#123;</span><br><span class="line">            obj.changeZindex_sub();</span><br><span class="line">         &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 设置初始zindex</span><br><span class="line">    setZindex:function()&#123;</span><br><span class="line">        &#x2F;&#x2F; 左侧横向TAB</span><br><span class="line">        var imgNum &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).length;</span><br><span class="line">        </span><br><span class="line">        for(var i &#x3D; 10000;i&lt;imgNum;i++)&#123;</span><br><span class="line">            $(&quot;.img-item&quot;).eq(i).css(&#123;</span><br><span class="line">                &quot;zIndex&quot;:i</span><br><span class="line">            &#125;);</span><br><span class="line">            $(&quot;.img-item&quot;).eq(i).attr(&quot;Zindex&quot;,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;前翻</span><br><span class="line">    changeZindex_add:function()&#123;</span><br><span class="line">        var imgNum &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).length;</span><br><span class="line">        var lastZindex &#x3D;   $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).attr(&quot;zindex&quot;);</span><br><span class="line">        var firstImg &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(0).find(&quot;img&quot;);</span><br><span class="line">        var firstImgSrc &#x3D;  firstImg.attr(&quot;src&quot;);</span><br><span class="line">        var firstImgAlt &#x3D;  firstImg.attr(&quot;alt&quot;);</span><br><span class="line">        var firstImgUrl &#x3D;  firstImg.attr(&quot;url&quot;);</span><br><span class="line">        var l1Img &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).find(&quot;img&quot;);</span><br><span class="line">        var lastImgSrc &#x3D;  l1Img.attr(&quot;src&quot;);</span><br><span class="line">        var lastImgUrl &#x3D; l1Img.attr(&quot;url&quot;);</span><br><span class="line">        var l2Img &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-2).find(&quot;img&quot;);</span><br><span class="line">        var last2ImgSrc &#x3D; l2Img.attr(&quot;src&quot;);</span><br><span class="line">        var last2ImgUrl &#x3D; l2Img.attr(&quot;url&quot;);</span><br><span class="line">        $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(0).remove();</span><br><span class="line">        $(&quot;.transverse-box&quot;).append(&quot;&lt;div class&#x3D;&#39;img-item&#39; zindex&#x3D;&#39;&quot;+(parseInt(lastZindex)+1)+&quot;&#39;&gt;&lt;a href&#x3D;&#39;&quot; + firstImgUrl </span><br><span class="line">            + &quot;&#39; target&#x3D;&#39;_blank&#39;&gt;&lt;img src&#x3D;&#39;&quot;+firstImgSrc+&quot;&#39; alt&#x3D;&#39;&quot; + firstImgAlt + &quot;&#39; url&#x3D;&#39;&quot; + firstImgUrl + &quot;&#39;&gt;&lt;&#x2F;a&gt;&lt;div&gt;&quot;);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(0).find(&quot;img&quot;).attr(&quot;src&quot;,lastImgSrc);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(0).find(&quot;a&quot;).attr(&quot;href&quot;,lastImgUrl);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(1).find(&quot;img&quot;).attr(&quot;src&quot;,last2ImgSrc);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(1).find(&quot;a&quot;).attr(&quot;href&quot;,last2ImgUrl);</span><br><span class="line">        $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).css(&#123;</span><br><span class="line">            &quot;zIndex&quot;:parseInt(lastZindex)+1,</span><br><span class="line">            &quot;opacity&quot;:0</span><br><span class="line">        &#125;,500);    </span><br><span class="line">        $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).animate(&#123;</span><br><span class="line">            &quot;opacity&quot;:1</span><br><span class="line">        &#125;,500);</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 后翻</span><br><span class="line">    changeZindex_sub:function()&#123;</span><br><span class="line">        var imgNum &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).length;</span><br><span class="line">        var lastZindex &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).attr(&quot;zindex&quot;);</span><br><span class="line">        var firstZindex &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(0).attr(&quot;zindex&quot;);</span><br><span class="line">        var lastImg &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).find(&quot;img&quot;);</span><br><span class="line">        var lastImgSrc &#x3D; lastImg.attr(&quot;src&quot;);</span><br><span class="line">        var lastImgAlt &#x3D; lastImg.attr(&quot;alt&quot;);</span><br><span class="line">        var lastImgUrl &#x3D; lastImg.attr(&quot;url&quot;);</span><br><span class="line">        var f1Img &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(0).find(&quot;img&quot;);</span><br><span class="line">        var firstImgSrc &#x3D; f1Img.attr(&quot;src&quot;);</span><br><span class="line">        var firstImgUrl &#x3D; f1Img.attr(&quot;url&quot;);</span><br><span class="line">        var f2Img &#x3D; $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(1).find(&quot;img&quot;);</span><br><span class="line">        var first2ImgSrc &#x3D; f2Img.attr(&quot;src&quot;);</span><br><span class="line">        var first2ImgUrl &#x3D; f2Img.attr(&quot;url&quot;);</span><br><span class="line">        $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).remove();</span><br><span class="line">        $(&quot;.transverse-box&quot;).prepend(&quot;&lt;div class&#x3D;&#39;img-item&#39; zindex&#x3D;&#39;&quot;+(parseInt(firstZindex)-1)+&quot;&#39;&gt;&lt;a href&#x3D;&#39;&quot; + lastImgUrl </span><br><span class="line">            + &quot;&#39; target&#x3D;&#39;_blank&#39;&gt;&lt;img src&#x3D;&#39;&quot;+lastImgSrc+&quot;&#39; alt&#x3D;&#39;&quot; + lastImgAlt + &quot;&#39; url&#x3D;&#39;&quot; + lastImgUrl + &quot;&#39;&gt;&lt;&#x2F;a&gt;&lt;div&gt;&quot;);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(0).find(&quot;img&quot;).attr(&quot;src&quot;,firstImgSrc);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(0).find(&quot;a&quot;).attr(&quot;href&quot;,firstImgUrl);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(1).find(&quot;img&quot;).attr(&quot;src&quot;,first2ImgSrc);</span><br><span class="line">        $(&quot;.vertical-box ul&quot;).find(&quot;li&quot;).eq(1).find(&quot;a&quot;).attr(&quot;href&quot;,first2ImgUrl);</span><br><span class="line">        $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(0).css(&#123;</span><br><span class="line">            &quot;zIndex&quot;:parseInt(firstZindex)-1</span><br><span class="line">        &#125;).siblings().css(&quot;opacity&quot;,&quot;0&quot;);</span><br><span class="line">        $(&quot;.transverse-box&quot;).find(&quot;.img-item&quot;).eq(length-1).animate(&#123;</span><br><span class="line">            &quot;opacity&quot;:1</span><br><span class="line">        &#125;); </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; 自动播放</span><br><span class="line">    autoPlay:function(x)&#123;</span><br><span class="line">        var obj &#x3D; this;</span><br><span class="line">        this.changeZindex_add();</span><br><span class="line">        setTimeout(function()&#123;obj.autoPlay(x)&#125;,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(document).ready(function () &#123;</span><br><span class="line">    $.getJSON(&quot;.&#x2F;json-data&#x2F;main-banner.json&quot;, function (data) &#123;</span><br><span class="line">        var banner &#x3D; new Carousel();</span><br><span class="line">        &#x2F;&#x2F;$.getJSON路径必须正确，图片地址数组，不要少于三张</span><br><span class="line">        var imgSrcDate &#x3D; data;</span><br><span class="line">        banner.init(&#123;</span><br><span class="line">            container:&quot;#banner&quot;,</span><br><span class="line">            datas:imgSrcDate,</span><br><span class="line">            autoplaySpeed:8000,</span><br><span class="line">            autoplay: true</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><code>第四步</code>：这里需要注意的是，第三步<code>main_banner.js</code>中的最后一块内容 <code>$.getJSON()</code>的<code>main-banner.json</code>文件路径必须填写正确。以我的博客为例，我的<code>main-banner.json</code>文件放在博客根目录的<code>source/json-data</code>目录下，文件内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;img&quot; : &quot;&#x2F;photo&#x2F;index&#x2F;lunbo&#x2F;005.jpg&quot;, </span><br><span class="line">&#x2F;&#x2F;图片路径是相对于根目录source来说的</span><br><span class="line">        &quot;url&quot; : &quot;&quot;,</span><br><span class="line">&#x2F;&#x2F;点击图片后的跳转链接</span><br><span class="line">        &quot;alt&quot; : &quot;&quot;</span><br><span class="line">&#x2F;&#x2F;图片提示文字</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;img&quot; : &quot;&#x2F;photo&#x2F;index&#x2F;lunbo&#x2F;007.jpg&quot;, </span><br><span class="line">        &quot;url&quot; : &quot;&quot;,</span><br><span class="line">        &quot;alt&quot; : &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;img&quot; : &quot;&#x2F;photo&#x2F;index&#x2F;lunbo&#x2F;008.jpg&quot;, </span><br><span class="line">        &quot;url&quot; : &quot; &quot;,</span><br><span class="line">        &quot;alt&quot; : &quot; &quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p><code>第五步</code>：通过Git控制台，依次键入命令<code>hexo clean</code>-&gt;<code>hexo g</code>-&gt;<code>hexo server</code>，打开博客主页即可。</p>
<p>转载源自：<a href="https://dp2px.com/2019/08/13/hexo-carousel/">DP2PX的个人博文</a></p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Icarus</tag>
        <tag>图片轮播</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo中常用插件的安装与使用</title>
    <url>/2020/02/21/Hexo%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="hexo-asset-image插件的安装与使用"><a href="#hexo-asset-image插件的安装与使用" class="headerlink" title="hexo-asset-image插件的安装与使用"></a><strong>hexo-asset-image插件的安装与使用</strong></h3><p><strong>为何引入该插件？</strong></p>
<p>在我们没有安装相关插件的情况下，我们在博文中需要引入图片时，按照通常思维引入图片的正常路径是：图片所在的位置相对于博客网站根目录内的source文件夹的路径。但运行网站后发现无法正常显示图片，查询相关资料后了解到在博文中引入图片前，首先需要在博客网站根目录内的<code>_posts</code>文件夹下建立一个与博文文件同名的文件夹，例如博文文件的名称是hello-world.md，那么文件夹的名称就是<code>hello-world</code>；然后，把需要引用的图片就放在该文件夹下，例如图片的名称是<code>hello.jpg</code>；最后我们在博文中引用这张图片时这样书写：<code>![](hello-world/hello.jpg)</code>，但运行网站后发现还是无法正常显示图片，于是又经过查询发现正确引用路径应为<code>![](hello.jpg)</code>。如果熟悉 Markdown 语法，我们会发现这个引用路径有反常规。</p>
<p>这时，我们会有个疑问：为什么在引用图片的时候不需要加入图片所在文件夹的路径呢？</p>
<a id="more"></a>

<p>原来，这是因为<code>Hexo</code>在渲染的时候，会把博文文件<code>hello-world.md</code>按照时间渲染为 <code>public/2020/01/01/hello-world</code>下的<code>index.html</code>网页文件，而且会把对应文件夹下的静态资源，比如图片<code>hello.jpg</code>也拷贝到<code>public/2020/01/01/hello-world</code>下。</p>
<p>所以，我们在书写博文时，博文和图片虽然不在统一的文件夹下，但最终它们被渲染后，是处于同一个文件夹的，那么我们在博文中引用图片时，就得把它们当作在同一个文件夹来处理，即引用图片时去掉文件夹路径。</p>
<p>我们或许会觉得这样引用图片有点难受，这时我们可以引入<code>hexo-asset-image插件</code>来帮我们处理。</p>
<p>安装该插件并配置开启后，我们就可以在博文里按照常规引用方式来引用图片。</p>
<p> <strong>hexo-asset-image插件的工作原理</strong></p>
<p><code>hexo-asset-image插件</code>的工作原理很简单，实际上他是帮我们完成了一个字符串替换的流程，使我们在博文中引用图片时书写的正常路径转换为 Hexo 渲染时使用的路径。</p>
<p><strong>hexo-asset-image插件的安装与使用步骤</strong></p>
<p><code>第一步</code>：修改博客网站的根配置文件<code>_config.yml</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Writing</span><br><span class="line"></span><br><span class="line">post_asset_folder: true  &#x2F;&#x2F;由false改为true</span><br></pre></td></tr></table></figure>

<p><code>第二步</code>：在博客网站的根目录打开并运行Git控制台，键入命令如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p>备注：等待一段时间后，再通过Git控制台键入<code>hexo new &quot;001.md&quot;</code>命令来生成博文文件时，我们会发现在<code>/source/_posts</code>文件夹内除了<code>001.md</code>文件还有一个同名的文件夹<code>001</code>。</p>
<p><code>第三步</code>：在博文<code>001.md</code>中引入图片时,例如<code>001.jpg</code>，先把图片<code>001.jpg</code>复制到<code>001</code>这个文件夹中，然后在博文<code>001.md</code>中需要引入图片的位置按照<code>Markdown语法</code>格式输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![这是图片001](001&#x2F;001.jpg)</span><br></pre></td></tr></table></figure>

<p><code>第四步</code>：检查有无出现错误，通过Git控制台键入命令<code>hexo g</code>生成博客页面后，进入<code>public\2020\01\01\index.html</code>文件中查看相关字段，发现<code>html标签</code>内的语句是<code>&lt;img src=&quot;2020/01/01/001/001.jpg&quot;&gt;</code>，而不是<code>&lt;img src=&quot;001/001.jpg&gt;</code>，说明图片路径转换正确，最后打开网页验证是否正确加载，一般情况下不会出现错误。</p>
<h3 id="APlayer音乐播放器插件的安装与使用"><a href="#APlayer音乐播放器插件的安装与使用" class="headerlink" title="APlayer音乐播放器插件的安装与使用"></a><strong>APlayer音乐播放器插件的安装与使用</strong></h3><p><strong>写在前面</strong></p>
<p>在个人的站点上，如果有音乐播放的功能，那么读者可以一遍阅读文章，一边欣赏音乐，是一件很愉快的事情。下面就以我的博客网站为案例，分享增加<code>Aplayer音乐播放器插件</code>的步骤。</p>
<p><strong>安装步骤</strong></p>
<p><code>第一步</code>：打开GitHub上的<a href="https://github.com/MoePlayer/APlayer">APlayer下载地址</a>，下载APlayer插件。</p>
<p><code>第二步</code>：将下载好的APlayer插件压缩包解压到本地磁盘指定位置，把根文件夹内的<code>dist</code>文件夹复制到<code>\themes\hexo-theme-icarus-master\source</code>目录中（对应自己主题文件的位置，我的主题是icarus）。</p>
<p><code>第三步</code>：打开<code>dist</code>文件夹，新建<code>music.js</code>文件并打开，粘贴如下代码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const ap &#x3D; new APlayer(&#123;</span><br><span class="line">    container: document.getElementById(&#39;aplayer&#39;),</span><br><span class="line">    fixed: false,</span><br><span class="line">    autoplay: false,</span><br><span class="line">    audio: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: &quot;逆追风少年&quot;,</span><br><span class="line">        artist: &#39;吴奇隆&#39;,</span><br><span class="line">        url: &#39;..&#x2F;music&#x2F;index&#x2F;吴奇隆-追风少年.mp3&#39;,  &#x2F;&#x2F;音乐文件的路径</span><br><span class="line">        cover: &#39;..&#x2F;music&#x2F;index&#x2F;zhuifengshaonian.jpg&#39;,  &#x2F;&#x2F;音乐封面图片的路径，注意要适当修改图片分辨率</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;起风了&#39;,</span><br><span class="line">        artist: &#39;买辣椒也用券&#39;,</span><br><span class="line">        url: &#39;..&#x2F;music&#x2F;index&#x2F;买辣椒也用券-起风了.mp3&#39;,</span><br><span class="line">        cover: &#39;..&#x2F;music&#x2F;index&#x2F;qifengle.jpg&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;白兰鸽巡游记&#39;,</span><br><span class="line">        artist: &#39;丢火车乐队&#39;,</span><br><span class="line">        url: &#39;..&#x2F;music&#x2F;index&#x2F;丢火车乐队-白兰鸽巡游记.mp3&#39;,</span><br><span class="line">        cover: &#39;..&#x2F;music&#x2F;index&#x2F;bailangexunyouji.jpg&#39;,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><code>备注</code>：因为是我们的个人博客网站，音乐不易过多，3~4首即可。</p>
<p><code>第四步</code>：到了这一步，<code>APlayer音乐播放器</code>有多种实现方式，常见的两种实现方式如下</p>
<p>（1）将APlayer音乐播放器放置在博客网站的右下角展示</p>
<p>修改<code>\themes\hexo-theme-icarus-master\layout\layout.ejs</code>的<code>layout.ejs</code>文件如下，放在<code>&lt;/body&gt;</code>标签上方即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 音频播放 --&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;aplayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;music.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>（2）通过Git控制台创建一个音乐播放页面，创建过程可以参考我的文章<a href="/2020/02/18/Hexo博客主题之Icarus的设置与美化（基础）">Hexo博客主题之Icarus的设置与美化（基础）</a>里面的内容，然后将页面内容修改如下即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 音频播放 --&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;aplayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;dist&#x2F;music.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>备注：通过Git控制台依次键入命令<code>hexo clean</code>-&gt;<code>hexo g</code>-&gt;<code>hexo server</code>打开博客网站即可查看效果。</p>
<p><strong>APlayer音乐播放器插件的使用效果</strong></p>
<p><a href="/music">点击这里即可查看</a></p>
<p>文章参考（1）：<a href="https://blog.csdn.net/hqweay/article/details/80847495">hqweay的个人博文</a></p>
<p>文章参考（2）：<a href="https://www.jianshu.com/p/822a1a12d471">Hans在路上的个人博文</a></p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>博文书写之Markdown的基本语法和注意事项</title>
    <url>/2020/02/21/Markdown%E4%B9%A6%E5%86%99%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%92%8C%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h3 id="Markdown是什么？"><a href="#Markdown是什么？" class="headerlink" title="Markdown是什么？"></a><strong>Markdown是什么？</strong></h3><p>Markdown是一种纯文本标记语言。Markdown 易于阅读，方便创作web文档，利于各平台无缝分发。Markdown 语法灵感最大的来源还是纯文本 email 的格式，完全由标点符号标签组成的纯文本。</p>
<a id="more"></a>

<h3 id="Markdown在书写时应该注意什么？"><a href="#Markdown在书写时应该注意什么？" class="headerlink" title="Markdown在书写时应该注意什么？"></a><strong>Markdown在书写时应该注意什么？</strong></h3><p>（1）内联 HTML 语法</p>
<p>HTML 是一种发布格式，Markdown 是一种创作格式。Markdown语法集合比较小，只是HTML标签的一小部分。对于 Markdown 中未包含的标签, 可以直接使用 HTML标签。</p>
<p>（2）特殊字符自动转义</p>
<p>在 HTML 中, 有两个字符需要特殊对待: <code>&lt;</code>和 <code>&amp;</code>，左尖括号用于起始标签。果你想将它们用作字面量, 你必须将它们转义为字符实体, 例如<code>&amp;lt;</code>和 <code>&amp;amp;</code>。</p>
<h3 id="Markdown的基本语法"><a href="#Markdown的基本语法" class="headerlink" title="Markdown的基本语法"></a><strong>Markdown的基本语法</strong></h3><p><strong>行内语法</strong></p>
<p><strong>（一）注释的表述</strong></p>
<ul>
<li>代码法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div style&#x3D;&#39;display: none&#39;&gt;我是注释，不会在浏览器中显示。&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>html注释</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--我是注释，不会在浏览器中显示。--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">我是多段注释，</span><br><span class="line">不会在浏览器中显示。</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>hack方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&#x2F;&#x2F;]: # &quot;我是注释，不会在浏览器中显示。&quot;</span><br><span class="line">[&#x2F;&#x2F;]: &lt;&gt; &quot;我是注释，不会在浏览器中显示。&quot;</span><br><span class="line">[^_^]: # (我是注释，不会在浏览器中显示。)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：hack方法比上面2种方法稳定得多，但是语义化太差。</p>
<p><strong>（二）分级标题</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：一级标题字号最大，依级递减，最多6级标题。</p>
<p><strong>（三）缩进、换行、空行、对齐方式</strong></p>
<ul>
<li>首行缩进</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&amp;emsp;或&amp;#8195; &#x2F;&#x2F;全角</span><br><span class="line">&amp;ensp;或&amp;#8194; &#x2F;&#x2F;半角</span><br><span class="line">&amp;nbsp;或&amp;#160;  &#x2F;&#x2F;半角之半角</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：不同特殊占位符所占空白是不一样大的。</p>
<ul>
<li><p>换行，由于markdown编辑器的不同，可能出现两种情况：（1）在一行字后面，直接回车可实现换行；（2）在一行字后面必须得空两格才能实现换行。</p>
</li>
<li><p>空行，在编辑的时候，两段或两行之间不论间隔有多少个空行(一行内只有回车或者space，没有其他字符就算空行)，在渲染之后，只间隔一行。</p>
</li>
<li><p>对齐方式</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;行中心对齐&lt;&#x2F;center&gt;</span><br><span class="line">&lt;p align&#x3D;&quot;left&quot;&gt;行左对齐&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p align&#x3D;&quot;right&quot;&gt;行右对齐&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p><strong>（四）斜体、粗体、删除线、下划线、背景高亮</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*斜体*  或  _斜体_</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br><span class="line">++下划线++</span><br><span class="line">&#x3D;&#x3D;背景高亮&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>

<p><strong>（五）超链接、页内链接、自动链接、注脚</strong></p>
<ul>
<li>超链接的行内式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">欢迎访问我的主页 [zazdream](https:&#x2F;&#x2F;zazdream.com &quot;zazdream&quot;)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：<code>[    ]</code>里写链接文字，<code>(    )</code>里写链接地址，<code>(    )</code>中的<code>&quot;    &quot;</code>中可以为链接指定title属性，title属性可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字，链接地址与title需要间隔一个空格。</p>
<ul>
<li>超链接的参考式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我经常去的几个网站[Baidu][1]、[CSDN][2]。</span><br><span class="line"></span><br><span class="line">[1]:http:&#x2F;&#x2F;www.baidu.com</span><br><span class="line">[2]:https:&#x2F;&#x2F;www.csdn.net</span><br></pre></td></tr></table></figure>

<p><code>备注（1）</code>：如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。</p>
<p><code>备注（2）</code>：参考式链接有两种写法：第一种，首先在博文中书写 <code>[链接文字][链接标记]</code>，然后在博文的任意位置添加<code>[链接标记]:链接地址</code>即可使用；第二种，如果链接文字本身可以做为链接标记，首先在博文中书写<code>[链接文字][]</code>，然后在博文的任意位置添加<code>[链接文字]：链接地址</code>即可使用。</p>
<ul>
<li>锚点（页内超链接）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 0. 目录&#123;#index&#125;</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。需要注意的是只支持在标题后插入锚点，其它地方无效。</p>
<ul>
<li>自动链接</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;http:&#x2F;&#x2F;zazdream.com&gt;</span><br><span class="line"></span><br><span class="line">&lt;zazdream@163.com&gt;</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用<code>&lt; &gt;</code>包起来， Markdown 就会自动把它转换成链接。</p>
<ul>
<li>注脚</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用 Markdown[^1]可以高效地书写文档, 而且他能直接转换成 HTML[^2]。</span><br><span class="line"></span><br><span class="line">[^1]:Markdown是一种纯文本标记语言</span><br><span class="line"></span><br><span class="line">[^2]:HyperText Markup Language 超文本标记语言</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：在需要添加注脚的文字后加上注脚名字[^注脚名字]，称为加注。 然后在文本的任意位置(一般在最后)添加注脚，注脚前必须有对应的注脚名字。注脚与注脚之间必须空一行，不然会失效。需要注意的是经Markdown转换后，注脚会自动归类到文章的最后。</p>
<p><strong>（六）无序列表、有序列表、定义型列表</strong></p>
<ul>
<li>无序列表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 无序列表项一</span><br><span class="line">+ 无序列表项二</span><br><span class="line">- 无序列表项三</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：使用 <code>*</code>或<code>+</code>或<code>-</code> 表示无序列表</p>
<ul>
<li>有序列表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 有序列表项一</span><br><span class="line">2. 有序列表项二</span><br><span class="line">3. 有序列表项三</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：使用数字紧跟一个英文句点</p>
<ul>
<li>定义型列表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Markdown</span><br><span class="line">:	轻量级文本标记语言</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：定义型列表由名词和解释组成，一行写上名词，紧跟下一行写上解释，解释的写法<code>:紧跟一个缩进(Tab)</code></p>
<p><strong>（七）插入图像</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![我和小侄子](https:&#x2F;&#x2F;zazdream.com&#x2F;photo&#x2F;index&#x2F;family&#x2F;002.jpg &quot;我和小侄子&quot;)</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：插入图片的格式就是<code>![图片Alt](图片地址 &quot;图片Title&quot;)</code>， 图片Title表示鼠标悬停与图片上时出现的文字， 图片Alt 和 图片Title都不是必须的，可以省略。</p>
<p><strong>（八）多级引用</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 人生天地之间，若白驹过隙，忽然而已。——庄子</span><br><span class="line">&gt;&gt; 盛年不重来，一日难再晨。及时当勉励，岁月不待人。——陶渊明</span><br><span class="line">&gt; 时间就是生命，时间就是速度，时间就是力量。——郭沫若</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：在被引用的文本前加上<code>&gt;</code>符号和空格，允许多层嵌套。</p>
<p><strong>（九）转义字符、字体、字号、颜色</strong></p>
<ul>
<li>转义字符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\ 反斜杠</span><br><span class="line">&#96; 反引号</span><br><span class="line">* 星号</span><br><span class="line">_ 下划线</span><br><span class="line">&#123;&#125; 大括号</span><br><span class="line">[] 中括号</span><br><span class="line">() 小括号</span><br><span class="line"># 井号</span><br><span class="line">+ 加号</span><br><span class="line">- 减号</span><br><span class="line">. 英文句号</span><br><span class="line">! 感叹号</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：Markdown中的转义字符为<code>\</code></p>
<ul>
<li>字体、字号、颜色</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#0099ff size&#x3D;12 face&#x3D;&quot;黑体&quot;&gt;黑体&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;gray size&#x3D;5&gt;gray&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#00ffff size&#x3D;3&gt;null&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Markdown的块语法"><a href="#Markdown的块语法" class="headerlink" title="Markdown的块语法"></a><strong>Markdown的块语法</strong></h3><p><strong>（一）内容目录</strong></p>
<p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p>
<p><strong>（二）代码块</strong></p>
<p>对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab)，另一种是利用反引号`（一般在ESC键下方）包裹代码。</p>
<ul>
<li>行内式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C语言里的函数 &#96;scanf()&#96; 怎么使用？</span><br></pre></td></tr></table></figure>

<ul>
<li>缩进式多行代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">空格空格空格空格#include &lt;stdio.h&gt;</span><br><span class="line">空格空格空格空格int main(void)</span><br><span class="line">空格空格空格空格&#123;</span><br><span class="line">空格空格空格空格    printf(&amp;#34;Hello world\n&amp;#34;);</span><br><span class="line">空格空格空格空格&#125;</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：每行开头缩进 4 个空格或是 1 个制表符，一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p>
<ul>
<li>用六个反引号`包裹多行代码</li>
</ul>
<p><img src="/2020/02/21/Markdown%E4%B9%A6%E5%86%99%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%92%8C%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/001.png" alt></p>
<p><strong>（三）表格</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|学号|姓名|序号|</span><br><span class="line">|-|-|-|</span><br><span class="line">|小明明|男|5|</span><br><span class="line">|小红|女|79|</span><br><span class="line">|小陆|男|192|</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。列于列之间用管道符<code>|</code>隔开。第二行还可以为不同的列指定对齐方向。默认为左对齐，在<code>-</code>右边加上<code>:</code>就右对齐。对齐方式：<code>-</code>左对齐， <code>:-:</code> 中心对齐，<code>-:</code> 右对齐</p>
<p><strong>（四）分隔线</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line">* * *</span><br><span class="line">******</span><br><span class="line">---</span><br><span class="line">- - -</span><br><span class="line">------</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：一行中用三个以上的星号、减号，或者在星号、减号中间插入空格，来建立一个分隔线，行内不能书写其他内容。</p>
<p><strong>（五）特殊字</strong></p>
<table>
<thead>
<tr>
<th align="center">特殊字符</th>
<th align="center">描述</th>
<th align="center">字符的代码</th>
</tr>
</thead>
<tbody><tr>
<td align="center">空格符</td>
<td align="center"></td>
<td align="center"><code>&amp;nbsp;</code></td>
</tr>
<tr>
<td align="center">&lt;</td>
<td align="center">小于号</td>
<td align="center"><code>&amp;lt;</code></td>
</tr>
<tr>
<td align="center">&gt;</td>
<td align="center">大于号</td>
<td align="center"><code>&amp;gt;</code></td>
</tr>
<tr>
<td align="center">&amp;</td>
<td align="center">和号</td>
<td align="center"><code>&amp;amp;</code></td>
</tr>
<tr>
<td align="center">￥</td>
<td align="center">人民币</td>
<td align="center"><code>&amp;yen;</code></td>
</tr>
<tr>
<td align="center">©</td>
<td align="center">版权</td>
<td align="center"><code>&amp;copy;</code></td>
</tr>
<tr>
<td align="center">®</td>
<td align="center">注册商标</td>
<td align="center"><code>&amp;reg;</code></td>
</tr>
<tr>
<td align="center">°C</td>
<td align="center">摄氏度</td>
<td align="center"><code>&amp;deg;C</code></td>
</tr>
<tr>
<td align="center">±</td>
<td align="center">正负号</td>
<td align="center"><code>&amp;plusmn;</code></td>
</tr>
<tr>
<td align="center">×</td>
<td align="center">乘号</td>
<td align="center"><code>&amp;times;</code></td>
</tr>
<tr>
<td align="center">÷</td>
<td align="center">除号</td>
<td align="center"><code>&amp;divide;</code></td>
</tr>
<tr>
<td align="center">²</td>
<td align="center">平方（上标²）</td>
<td align="center"><code>&amp;sup2;</code></td>
</tr>
<tr>
<td align="center">³</td>
<td align="center">立方（上标³）</td>
<td align="center"><code>&amp;sup3;</code></td>
</tr>
</tbody></table>
<p>转载源自：<a href="https://www.jianshu.com/p/ebe52d2d468f">择势勤的个人博文</a></p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客主题之Icarus的设置与美化（进阶）</title>
    <url>/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E8%BF%9B%E9%98%B6%EF%BC%89/</url>
    <content><![CDATA[<h3 id="Icarus的瀑布流相册"><a href="#Icarus的瀑布流相册" class="headerlink" title="Icarus的瀑布流相册"></a><strong>Icarus的瀑布流相册</strong></h3><p>Icarus的主题已经默认支持瀑布流的相册布局，我们可以添加到文章的任意位置。</p>
<p><code>第一步</code>：修改博客网站的主题配置文件<code>_config.yml</code>，开启相册功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins:</span><br><span class="line">    # Enable page animations</span><br><span class="line">    animejs: true</span><br><span class="line">    # Enable the lightGallery and Justified Gallery plugins</span><br><span class="line">    # https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;Plugins&#x2F;General&#x2F;gallery-plugin&#x2F;</span><br><span class="line">    gallery: true  &#x2F;&#x2F;修改为true</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<p><code>第二步</code>：添加相册图片（我们可以放在文章任何位置，这里我单独作为相册页面，修改的是之前创建的photo页面的内容，即修改photo.md文件内容）。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;justified-gallery&quot;&gt;</span><br><span class="line"></span><br><span class="line">![姐姐和小侄女](&#x2F;photo&#x2F;index&#x2F;family&#x2F;001.jpg)  &#x2F;&#x2F;照片路径为照片文件相对于source文件夹的路径</span><br><span class="line">![我和小侄子](&#x2F;photo&#x2F;index&#x2F;family&#x2F;002.jpg)</span><br><span class="line">![香香](&#x2F;photo&#x2F;index&#x2F;family&#x2F;003.jpg)</span><br><span class="line">![香香](&#x2F;photo&#x2F;index&#x2F;family&#x2F;004.jpg)</span><br><span class="line">![香香](&#x2F;photo&#x2F;index&#x2F;family&#x2F;005.jpg)</span><br><span class="line">![香香](&#x2F;photo&#x2F;index&#x2F;family&#x2F;006.jpg)</span><br><span class="line">![香香](&#x2F;photo&#x2F;index&#x2F;family&#x2F;007.jpg)</span><br><span class="line">![小侄子](&#x2F;photo&#x2F;index&#x2F;family&#x2F;008.gif)</span><br><span class="line">![小侄子](&#x2F;photo&#x2F;index&#x2F;family&#x2F;009.gif)</span><br><span class="line">![大帅](&#x2F;photo&#x2F;index&#x2F;family&#x2F;010.jpg)</span><br><span class="line">![我和姐姐](&#x2F;photo&#x2F;index&#x2F;family&#x2F;011.jpg)</span><br><span class="line">![我和妈妈](&#x2F;photo&#x2F;index&#x2F;family&#x2F;012.jpg)</span><br><span class="line">![我们](&#x2F;photo&#x2F;index&#x2F;family&#x2F;013.jpg)</span><br><span class="line">![妈妈](&#x2F;photo&#x2F;index&#x2F;family&#x2F;014.jpg)</span><br><span class="line">![我和小侄女](&#x2F;photo&#x2F;index&#x2F;family&#x2F;015.jpg)</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p><code>第三步</code>：其实第二步完成后，已经完成了相册的设置，但是相册默认的样式高度和间隙看着有点难受，可以适当修改。打开Icarus主题文件夹，通过相应路径<code>source/js/gallery.js</code>，找到<code>gallery.js</code>文件修改如下，这里我将相册的每行高度修改为160px，间隔为4px。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.addEventListener(&#39;DOMContentLoaded&#39;, function () &#123;</span><br><span class="line">    if (typeof ($.fn.lightGallery) &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;</span><br><span class="line">        $(&#39;.article&#39;).lightGallery(&#123; selector: &#39;.gallery-item&#39;, loop: true, escKey: true, keyPress: true&#125;);&#x2F;&#x2F;如果不想使用lightGallery，这里可不做修改</span><br><span class="line">    &#125;</span><br><span class="line">    if (typeof ($.fn.justifiedGallery) &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">        $(&#39;.justified-gallery&#39;).justifiedGallery(&#123;rowHeight:400, margins:4&#125;);</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：Icarus主题中的gallery有两个样式，一个是 light Gallery 另一个是 justified Gallery ，这里我选择的是justified Gallery。如果想更换gallery样式，在第二步添加相册图片时，修改<code>&lt;div class=&quot;justified-gallery&quot;&gt;</code>里对应内容即可。</p>
<h3 id="调整文章内容显示区域"><a href="#调整文章内容显示区域" class="headerlink" title="调整文章内容显示区域"></a><strong>调整文章内容显示区域</strong></h3><p>之前我们将侧边栏所有的应用都放在了页面左边，导致右边出现了大片空白区域，浏览文章时我们也会发现文章内容显示的区域相对较窄，这里我们可以适当放宽文章显示的区域，以下修改方法将文章显示区域修改为12格布局。</p>
<p><code>第一步</code>：打开Icarus主题文件夹，通过相应路径<code>source/css/style.styl</code>，找到<code>style.styl</code>文件修改如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* ---------------------------------</span><br><span class="line"> *       Override CSS Framework</span><br><span class="line"> * --------------------------------- *&#x2F;</span><br><span class="line">html</span><br><span class="line">    font-size: 14px</span><br><span class="line"></span><br><span class="line">body</span><br><span class="line">    background-color: #f7f7f7</span><br><span class="line"></span><br><span class="line">body, button, input, select, textarea</span><br><span class="line">    font-family: family-sans</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">@media screen and (min-width: screen-widescreen)</span><br><span class="line">    .is-1-column .container</span><br><span class="line">    .is-2-column .container</span><br><span class="line">        max-width: screen-widescreen - 2 * gap</span><br><span class="line">        width: screen-widescreen - 2 * gap</span><br><span class="line">@media screen and (min-width: screen-fullhd)</span><br><span class="line">    .is-2-column .container</span><br><span class="line">        max-width: screen-fullhd - 2 * gap</span><br><span class="line">        width: screen-fullhd - 2 * gap</span><br><span class="line">    .is-1-column .container</span><br><span class="line">        max-width: screen-desktop - 2 * gap</span><br><span class="line">        width: screen-desktop - 2 * gap</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br></pre></td></tr></table></figure>

<p><code>第二步</code>：打开Icarus主题文件夹，通过相应路径<code>layout/layout.ejs</code>，找到<code>layout.ejs</code>文件修改如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body class&#x3D;&quot;is-&lt;%&#x3D; column_count() %&gt;-column&quot;&gt;</span><br><span class="line">    &lt;%- _partial(&#39;common&#x2F;navbar&#39;) %&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">    &lt;% function main_column_class() &#123;</span><br><span class="line">        switch (column_count()) &#123;</span><br><span class="line">            case 1:</span><br><span class="line">                return &#39;is-12&#39;;</span><br><span class="line">            case 2:</span><br><span class="line">                return &#39;is-8-tablet is-9-desktop is-9-widescreen&#39;;</span><br><span class="line">            case 3:</span><br><span class="line">                return &#39;is-8-tablet is-8-desktop is-6-widescreen&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        return &#39;&#39;;</span><br><span class="line">    &#125; %&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br></pre></td></tr></table></figure>

<p><code>第三步</code>：打开Icarus主题文件夹，通过相应路径<code>layout/common/widget.ejs</code>，找到<code>widget.ejs</code>文件修改如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;% if (get_widgets(position).length) &#123; %&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">&lt;% function side_column_class() &#123;</span><br><span class="line">    switch (column_count()) &#123;</span><br><span class="line">        case 2:</span><br><span class="line">            return &#39;is-4-tablet is-3-desktop is-3-widescreen&#39;;</span><br><span class="line">        case 3:</span><br><span class="line">            return &#39;is-4-tablet is-4-desktop is-3-widescreen&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    return &#39;&#39;;</span><br><span class="line">&#125; %&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br></pre></td></tr></table></figure>

<h3 id="添加最近文章的缩略图"><a href="#添加最近文章的缩略图" class="headerlink" title="添加最近文章的缩略图"></a><strong>添加最近文章的缩略图</strong></h3><p>打开博客网站，我们发现页面左侧的侧边栏中，所有的最新文章前面都有个缩略图，但却还没有设置，这里为了方便，我们可以直接通过设置随机图片来添加缩略图，省去了以后写一篇文章就要添加一张缩略图的烦恼。</p>
<p>第一步：新建一个文件夹<code>suiji</code>放置需要的图片，这里我的文件夹路径为<code>/photo/index/suiji</code>，此路径是相对于博客网站的根目录的<code>source</code>文件夹来说的，将修改好的图片放入其中。这里需要注意两点：（1）图片是作为缩略图来使用的，所以尽量将图片分辨率修改为普通头像图片分辨率的大小；（2）图片的命名规则：image0、image1、image2···<code>名称+数字</code>依次递增，下标从0开始，<code>image</code>可以换成其他名称。</p>
<p>第二步：打开Icarus主题文件夹，通过相应路径<code>includes/helpers/page.js</code>，找到<code>page.js</code>文件修改如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module.exports &#x3D; function (hexo) &#123;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">    hexo.extend.helper.register(&#39;has_random_recent_thumbnail&#39;, function (post) &#123;</span><br><span class="line">        const getConfig &#x3D; hexo.extend.helper.get(&#39;get_config&#39;).bind(this);</span><br><span class="line">        return getConfig(&#39;article.random_recent_thubnail&#39;, true);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    hexo.extend.helper.register(&#39;get_random_recent_thumbnail&#39;, function (post) &#123;</span><br><span class="line">      const autothubnail &#x3D; hexo.extend.helper.get(&#39;has_random_recent_thumbnail&#39;).bind(this)(post);</span><br><span class="line">      var url &#x3D; &quot;images&#x2F;thumbnail.svg&quot;;</span><br><span class="line">      if(autothubnail)&#123;</span><br><span class="line">        url &#x3D; &quot;&#x2F;photo&#x2F;index&#x2F;suiji&#x2F;article&quot; + Math.floor(Math.random()*7) + &quot;.jpg&quot;;  </span><br><span class="line">&#x2F;&#x2F;此路径是图片相对于博客网站的根目录的source文件夹来说的，记住去掉数字，例如这里我的图片名称是article0、···，后面Math.random()*7里的数字7是suiji文件夹中的图片总数量</span><br><span class="line">      &#125;</span><br><span class="line">      return this.url_for(url);</span><br><span class="line">    &#125;);</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br></pre></td></tr></table></figure>

<p>第三步：修改博客网站的主题配置文件<code>_config.yml</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">article:</span><br><span class="line">    # Code highlight settings</span><br><span class="line">    highlight:</span><br><span class="line">        # Code highlight themes</span><br><span class="line">        # https:&#x2F;&#x2F;github.com&#x2F;highlightjs&#x2F;highlight.js&#x2F;tree&#x2F;master&#x2F;src&#x2F;styles</span><br><span class="line">        theme: atom-one-light</span><br><span class="line">        # Show code copying button</span><br><span class="line">        clipboard: true</span><br><span class="line">        # Default folding status of the code blocks. Can be &quot;&quot;, &quot;folded&quot;, &quot;unfolded&quot;</span><br><span class="line">        fold: unfolded</span><br><span class="line">    # Whether to show article thumbnail images</span><br><span class="line">    thumbnail: true</span><br><span class="line">    # Whether to show estimate article reading time</span><br><span class="line">    readtime: true</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">    random_recent_thubnail: true</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br></pre></td></tr></table></figure>

<p>第四步：打开Icarus主题文件夹，通过相应路径<code>layout/widget/recent_posts.ejs</code>，找到<code>recent_posts.ejs</code>修改如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        &lt;article class&#x3D;&quot;media&quot;&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">            &lt;% if (!has_config(&#39;article.random_recent_thubnail&#39;) || get_config(&#39;article.random_recent_thubnail&#39;) !&#x3D;&#x3D; false) &#123; %&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">            &lt;a href&#x3D;&quot;&lt;%- url_for(post.link ? post.link : post.path) %&gt;&quot; class&#x3D;&quot;media-left&quot;&gt;</span><br><span class="line">                &lt;p class&#x3D;&quot;image is-64x64&quot;&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">                    &lt;img class&#x3D;&quot;thumbnail&quot; src&#x3D;&quot;&lt;%&#x3D; get_random_recent_thumbnail(post) %&gt;&quot; alt&#x3D;&quot;&lt;%&#x3D; post.title %&gt;&quot;&gt;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">                &lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="文章图片居中"><a href="#文章图片居中" class="headerlink" title="文章图片居中"></a><strong>文章图片居中</strong></h3><p>我们写文章的时候发现图片默认是左对齐的，为了美观，这里可以修改成置中。</p>
<p>打开Icarus主题文件夹，通过相应路径<code>source/js/main.js</code>，找到main.js修改如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(function ($) &#123;</span><br><span class="line">    $(&#39;.article img:not(&quot;.not-gallery-item&quot;)&#39;).each(function () &#123;</span><br><span class="line">        &#x2F;&#x2F; wrap images with link and add caption if possible</span><br><span class="line">        if ($(this).parent(&#39;a&#39;).length &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">            $(this).wrap(&#39;&lt;a class&#x3D;&quot;gallery-item&quot; style&#x3D;&quot;display:block;text-align:center;&quot; href&#x3D;&quot;&#39; + $(this).attr(&#39;src&#39;) + &#39;&quot;&gt;&lt;&#x2F;a&gt;&#39;);</span><br><span class="line">&#x2F;&#x2F;修改部分</span><br><span class="line">            if (this.alt) &#123;</span><br><span class="line">                $(this).after(&#39;&lt;div class&#x3D;&quot;has-text-centered is-size-6 has-text-grey caption&quot;&gt;&#39; + this.alt + &#39;&lt;&#x2F;div&gt;&#39;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>

<p>转载源自：<a href="https://dp2px.com/2019/08/13/hexo-carousel/">DP2PX的个人博文</a></p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Icarus</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客主题之Icarus的设置与美化（基础）</title>
    <url>/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/</url>
    <content><![CDATA[<h3 id="博客网站根配置文件-config-yml的常见修改"><a href="#博客网站根配置文件-config-yml的常见修改" class="headerlink" title="博客网站根配置文件_config.yml的常见修改"></a><strong>博客网站根配置文件<code>_config.yml</code>的常见修改</strong></h3><p>这个配置文件在你的博客网站本地文件的根目录，不要同主题的配置文件弄混淆。</p>
<p><img src="/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/001.jpg" alt></p>
<p>第一个需要修改的地方：网站的一些基本信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Site</span><br><span class="line">title: zazdream  &#x2F;&#x2F;网站的标题</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;&#39;</span><br><span class="line">keywords:</span><br><span class="line">author: 张之卿  &#x2F;&#x2F;网站的建设者</span><br><span class="line">language: zh-CN  &#x2F;&#x2F;网站的默认语言，如何对照修改请查看备注（1）</span><br><span class="line">timezone: &#39;&#39;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>第二个需要修改的地方：网站的域名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#URL</span><br><span class="line">url: http:&#x2F;&#x2F;zazdream.com  &#x2F;&#x2F;域名即填你已申请的域名，如何申请查看备注（2）</span><br></pre></td></tr></table></figure>

<p><code>备注（1）</code>：修改网站语言的方法</p>
<p>从博客网站文件的根目录打开主题文件<code>themes</code>-&gt;打开你的主题文件<code>hexo-theme-icarus-master</code>（对照自己）-&gt;打开<code>languages</code>-&gt;查看你想要设置的语言的对应文件名称：<code>zh-CN.yml</code>-&gt;language后面填写对应名称：<code>zh-CN</code></p>
<p><code>备注（2）</code>：请查阅我的文章<a href>网站域名的申请和使用</a></p>
<h3 id="如何更换你的博客网站主题"><a href="#如何更换你的博客网站主题" class="headerlink" title="如何更换你的博客网站主题"></a><strong>如何更换你的博客网站主题</strong></h3><p>第一步：打开<code>Github</code>-&gt;在搜索框输入你想要的主题名称<code>Icarus</code>-&gt;点击<code>All GitHub</code>-&gt;选择收藏量最多的搜索结果打开-&gt;点击<code>Clone or download</code>-&gt;为了方便，这里我们选择<code>Download ZIP</code>-&gt;将下好的压缩包解压到你指定的位置得到文件夹<code>hexo-theme-icarus-master</code>-&gt;将文件夹复制到<code>themes</code>文件夹下</p>
<p><img src="/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/002.jpg" alt></p>
<p><img src="/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/003.jpg" alt></p>
<p><img src="/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/004.jpg" alt></p>
<p>第二步：修改博客网站根配置文件<code>_config.yml</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Extensions</span><br><span class="line">theme: hexo-theme-icarus-master  &#x2F;&#x2F;改为第一步复制到themes下的文件夹名称</span><br></pre></td></tr></table></figure>

<h3 id="Icarus的美化"><a href="#Icarus的美化" class="headerlink" title="Icarus的美化"></a><strong>Icarus的美化</strong></h3><p><strong>修改你的头像</strong></p>
<p>打开你的主题文件<code>hexo-theme-icarus-master</code>-&gt;打开<code>source</code>-&gt;打开<code>images</code>-&gt;将其中的图片<code>avatar.png</code>换成你想要的头像（头像图片的分辨率要调整适当，最好按照原文件的分辨率调整）</p>
<p><img src="/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/005.jpg" alt></p>
<p>修改后效果如下：</p>
<p><img src="/2020/02/18/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%B9%8BIcarus%E7%9A%84%E8%AE%BE%E7%BD%AE%E4%B8%8E%E7%BE%8E%E5%8C%96%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/006.jpg" alt></p>
<p><strong>修改菜单栏</strong></p>
<p>（1）修改主题的配置文件<code>_config.yml</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">    首页: &#x2F;</span><br><span class="line">    归档: &#x2F;archives</span><br><span class="line">    分类: &#x2F;categories</span><br><span class="line">    相册: &#x2F;photo</span><br><span class="line">    音乐: &#x2F;music</span><br><span class="line">    电影: &#x2F;movie</span><br><span class="line">    游戏: &#x2F;game</span><br><span class="line">    公益: &#x2F;404</span><br><span class="line">    关于: &#x2F;about</span><br></pre></td></tr></table></figure>

<p><code>备注</code>：后面路径为对应页面的路径，自己需要对照着在Git控制台中创建对应页面</p>
<p>（2）在Git控制台中创建对应页面<br>从你的博客网站的根目录打开Git控制台，新建对应页面，例如：</p>
<p><code>$ hexo new page &quot;photo&quot;</code></p>
<p>（3）继续在控制台键入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean   回车</span><br><span class="line">$ hexo g       回车</span><br><span class="line">$ hexo server  回车</span><br></pre></td></tr></table></figure>

<p>（4）重新加载你的博客网站主页<a href="http://localhost:4000/">http://localhost:4000/</a> ，即可发现菜单栏新增了你创建的菜单选项，点击打开后发现没有内容。这需要你自己编辑。</p>
<p><strong>修改页面尾末打赏图片</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">donate:</span><br><span class="line">    -</span><br><span class="line">        # Donation entry name</span><br><span class="line">        type: alipay  &#x2F;&#x2F;支付宝收款码</span><br><span class="line">        # Qrcode image URL</span><br><span class="line">        qrcode: &#39;&#x2F;photo&#x2F;index&#x2F;pay&#x2F;alipay.jpg&#39;  &#x2F;&#x2F;此处路径填写图片相对于source文件夹的路径</span><br><span class="line">    -</span><br><span class="line">        # Donation entry name</span><br><span class="line">        type: wechat  &#x2F;&#x2F;微信收款码</span><br><span class="line">        # Qrcode image URL</span><br><span class="line">        qrcode: &#39;&#x2F;photo&#x2F;index&#x2F;pay&#x2F;wechat.png&#39;&#x2F;&#x2F;此处路径填写图片相对于source文件夹的路径</span><br></pre></td></tr></table></figure>

<p><strong>个性化侧边栏</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">widgets:</span><br><span class="line">    -</span><br><span class="line">        # Widget name</span><br><span class="line">        type: profile  &#x2F;&#x2F;个人简介区域</span><br><span class="line">        # Where should the widget be placed, left or right</span><br><span class="line">        position: left  &#x2F;&#x2F;位置可自行设置，我都放置在左边</span><br><span class="line">        # Author name to be shown in the profile widget</span><br><span class="line">        author: 张之卿</span><br><span class="line">        # Title of the author to be shown in the profile widget</span><br><span class="line">        author_title: 为了那个梦想</span><br><span class="line">        # Author&#39;s current location to be shown in the profile widget</span><br><span class="line">        location: 安徽-桐城</span><br><span class="line">        # Path or URL to the avatar to be shown in the profile widget</span><br><span class="line">        avatar: </span><br><span class="line">        # Email address for the Gravatar to be shown in the profile widget</span><br><span class="line">        gravatar: </span><br><span class="line">        # Whether to show avatar image rounded or square</span><br><span class="line">        avatar_rounded: false</span><br><span class="line">        # Path or URL for the follow button</span><br><span class="line">        follow_link: &#39;https:&#x2F;&#x2F;github.com&#x2F;zazdream&#39;  &#x2F;&#x2F;“关注我”的跳转链接</span><br><span class="line">        # Links to be shown on the bottom of the profile widget</span><br><span class="line">        social_links:  &#x2F;&#x2F;个人社交区域</span><br><span class="line">            Github:  &#x2F;&#x2F;我的GitHub的图标及链接，关于图标的使用和更换请查看我的备注（2）</span><br><span class="line">                icon: fab fa-github</span><br><span class="line">                url: &#39;https:&#x2F;&#x2F;github.com&#x2F;zazdream&#39;</span><br><span class="line">            E-mail:  &#x2F;&#x2F;我的邮箱的图标及链接</span><br><span class="line">                icon: fab fa-envira</span><br><span class="line">                url: &#39;mailto:zazdream@163.com&#39;</span><br><span class="line">            Weibo:  &#x2F;&#x2F;我的微博的图标及链接</span><br><span class="line">                icon: fab fa-weibo</span><br><span class="line">                url: &#39;https:&#x2F;&#x2F;weibo.com&#x2F;u&#x2F;5013594041&#39;</span><br><span class="line">            RSS:  &#x2F;&#x2F;网站RSS的图标及链接</span><br><span class="line">                icon: fas fa-rss</span><br><span class="line">                url: &#x2F;atom.xml</span><br><span class="line">    -</span><br><span class="line">        # Widget name</span><br><span class="line">        type: toc</span><br><span class="line">        # Where should the widget be placed, left or right</span><br><span class="line">        position: left</span><br><span class="line">    -</span><br><span class="line">        # Widget name</span><br><span class="line">        type: links  &#x2F;&#x2F;相关链接区域</span><br><span class="line">        # Where should the widget be placed, left or right</span><br><span class="line">        position: left  &#x2F;&#x2F;位置可自行设置，一般选择左边</span><br><span class="line">        # Links to be shown in the links widget</span><br><span class="line">        links:</span><br><span class="line">            我的CSDN首页: &#39;https:&#x2F;&#x2F;me.csdn.net&#x2F;weixin_42146857&#39;</span><br><span class="line">            我的B站首页: &#39;https:&#x2F;&#x2F;space.bilibili.com&#x2F;29187794&#39;</span><br><span class="line">    -</span><br><span class="line">        # Widget name</span><br><span class="line">        type: category  &#x2F;&#x2F;分类</span><br><span class="line">        # Where should the widget be placed, left or right</span><br><span class="line">        position: left </span><br><span class="line">    -</span><br><span class="line">        # Widget name</span><br><span class="line">        type: recent_posts  &#x2F;&#x2F;最新的文章</span><br><span class="line">        # Where should the widget be placed, left or right</span><br><span class="line">        position: left </span><br><span class="line">    -</span><br><span class="line">        # Widget name</span><br><span class="line">        type: tagcloud  &#x2F;&#x2F;云标签</span><br><span class="line">        # Where should the widget be placed, left or right</span><br><span class="line">        position: left</span><br></pre></td></tr></table></figure>

<p><code>备注（1）</code>：所有的侧边栏应用我都放在了左边，觉得好看些，另外觉得不需要的话可以将相关内容直接删除。<br><code>备注（2）</code>：Icarus的图标使用很简单，操作步骤：打开<a href="http://www.fontawesome.com.cn/faicons/">Font Awesome 图标官网</a>-&gt;输入你需要图标的英文名并搜索-&gt;查看对应图标详情-&gt;按照提示<code>复制图标名称</code>到指定位置即可使用。</p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Icarus</tag>
      </tags>
  </entry>
  <entry>
    <title>Git的安装与使用</title>
    <url>/2020/02/17/Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="什么是Git？"><a href="#什么是Git？" class="headerlink" title="什么是Git？"></a><strong>什么是Git？</strong></h2><p>Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是Linus Torvalds为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>
<p>尽管最初 Git 的开发是为了辅助 Linux 内核开发的过程，但是现在很多其他自由软件项目中也使用了 Git。</p>
<a id="more"></a>

<h2 id="如何下载与安装Git？"><a href="#如何下载与安装Git？" class="headerlink" title="如何下载与安装Git？"></a><strong>如何下载与安装Git？</strong></h2><p><strong>下载</strong></p>
<p>打开<a href="https://git-scm.com/">Git官网</a>，下载最新版本Git<br><img src="/2020/02/17/Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/001.jpg" alt><br><img src="/2020/02/17/Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/002.jpg" alt><br><code>备注</code>：点击框选出的位置即可下载，或者按照提示根据自己电脑系统版本下载相应Git</p>
<p><strong>安装</strong><br>打开下载好的Git安装包后，一直点击Next，保持默认选项，直到出现Install，点击Install，安装完成后点击Finish。</p>
<p><strong>使用</strong><br>安装好后，在电脑桌面或者打开某一本地磁盘，在空白位置右击鼠标会发现多了两个选项<code>Git GUI Here</code>和<code>Git Bash Here</code>，如图所示，点击<code>Git Bash Here</code>即可从当前位置打开并使用使用Git。<br><img src="/2020/02/17/Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/003.jpg" alt></p>
<p><strong>检查Git是否正确安装</strong><br>win+r，输入并打开cmd，键入git命令，弹出如图所示界面，说明Git已正确安装。<br><img src="/2020/02/17/Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/004.jpg" alt></p>
<h2 id="配置Git环境"><a href="#配置Git环境" class="headerlink" title="配置Git环境"></a><strong>配置Git环境</strong></h2><p><code>第一步：</code><br>打开<a href="https://github.com/">GitHub</a>官网，注册一个账号，注册好后，双击桌面上的Git Bash快捷图标，进行环境配置。</p>
<p><code>第二步：</code><br>配置用户名<br><code>git config --global user.name &quot;username&quot;</code>   // username是自己的账户名<br>配置邮箱<br><code>git config --global user.email &quot;username@email.com&quot;</code>//username@email.com注册账号时用的邮箱</p>
<p><code>第三步：</code><br>键入<code>git config --global --list</code>命令查看之前的配置是否成功</p>
<p><code>第四步：</code><br>键入<code>ssh-keygen -t rsa</code>生成ssh，连敲三次回车键，结束后去系统盘目录下（一般在 C:\用户\当前用户\ .ssh）查看是否生成  <code>.ssh</code> 文件夹，此文件夹中包含以下两个文件：<code>id_rsa</code>、<code>id_rsa.pub</code></p>
<p><code>第五步：</code><br>以记事本打开方式，将<code>id_rsa.pub</code>文件打开，其中内容即为公钥，将公匙复制后添加到GitHub管理平台中。</p>
<p><code>添加公钥方式如下：</code><br>登入自己的Github账户后-&gt;点击右上角自己的头像-&gt;点击出现选项中的Settings-&gt;点击左边侧栏的SSH and GPG keys-&gt;点击右上角绿色按钮New SSH key-&gt;填好内容，点击绿色按钮Add SSH key<br><code>备注：</code>Title：内容随便，建议取个人网站名称，方便记忆；Key：将公钥复制粘贴到其中。</p>
<p><img src="/2020/02/17/Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/005.jpg" alt></p>
<p><img src="/2020/02/17/Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/006.jpg" alt></p>
<p><code>第六步</code><br>测试配置是否成功，在Git Bush命令框中键入<code>ssh -T git@github.com</code>命令，回车后若出现下面情况，则说明环境配置成功。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">14513@DESKTOP-OCFQBHA MINGW64 ~&#x2F;zazdream</span><br><span class="line">$ ssh -T git@github.com</span><br><span class="line">Hi zazdream! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<p>转载源自：<a href="https://blog.csdn.net/huangqqdy/article/details/83032408">糖葫芦的小黑屋的个人博文</a></p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js的安装</title>
    <url>/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>在安装Node.js之前，我们应改弄清两个问题：（1）NodeJS是什么？（2）NodeJS能做什么？</p>
<h3 id="NodeJS是什么"><a href="#NodeJS是什么" class="headerlink" title="NodeJS是什么"></a><strong>NodeJS是什么</strong></h3><p>脚本语言需要一个解析器才能运行，JavaScript是脚本语言，在不同的位置有不一样的解析器，对于需要独立运行的JS，NodeJS就是一个解析器。</p>
<h3 id="NodeJS能做什么"><a href="#NodeJS能做什么" class="headerlink" title="NodeJS能做什么"></a><strong>NodeJS能做什么</strong></h3><p>NodeJS的作者说，他创造NodeJS的目的是为了实现高性能Web服务器。对于前端而言，简单方面可以通过NodeJS使用命令交互模式调试JS代码片段，复杂方面可以使用NodeJS编写工具提升工作效率。</p>
<a id="more"></a>

<h3 id="如何安装"><a href="#如何安装" class="headerlink" title="如何安装"></a><strong>如何安装</strong></h3><p>安装环境：<code>Windows10  x64</code></p>
<p><code>步骤1</code>：进入<a href="https://nodejs.org/en/">NodeJS官网</a>下载Node.js安装程序<br><img src="/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/001.png" alt><br><code>备注</code>：建议选择图中框选出的版本，为稳定版。</p>
<p><code>步骤2</code>：打开下载好的应用程序安装包，点击Next<br><img src="/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/002.png" alt></p>
<p><code>步骤3</code>：勾选同意，点击Next<br><img src="/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/003.png" alt></p>
<p><code>步骤4</code>：Node.js默认安装路径为“C:\Program Files\nodejs\”，你可以点击Change修改，这里保持默认，点击Next<br><img src="/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/004.png" alt></p>
<p><code>步骤5</code>：这里无需修改，点击Next<br><img src="/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/005.png" alt></p>
<p><code>步骤6</code>：勾选自动安装必要组件，点击Next<br><img src="/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/006.png" alt></p>
<p><code>步骤7</code>：确认无误后，点击Install<br><img src="/2020/02/17/Node-js%E7%9A%84%E5%AE%89%E8%A3%85/007.png" alt></p>
<p><code>步骤7</code>：半分钟后，安装完成，点击Finish</p>
<p><code>步骤8</code>：配置环境变量（已自动配置，无需再次配置）。</p>
<p><code>备注</code>：默认Node.js在安装完毕后，会自动在系统的path环境变量中配置node.exe的目录路径，无需再次配置。但是，可能部分人的电脑在安装完成后，dos命令下输入node会提示错误，此时需配置环境，配置环境具体方法请查看<a href="https://blog.csdn.net/muzidigbig/article/details/80493880">muzidigbig的博文</a>。</p>
<p><code>步骤9</code>：检测是否安装成功</p>
<p>点击开win+R打开cmd，键入命令：<code>node --version</code>查看当前Node.js版本</p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO的安装与使用</title>
    <url>/2020/02/17/HEXO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="什么是-Hexo"><a href="#什么是-Hexo" class="headerlink" title="什么是 Hexo"></a><strong>什么是 Hexo</strong></h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h3 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a><strong>安装HEXO</strong></h3><p><strong>安装前提</strong><br>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>
<p>（1）<a href="https://nodejs.org/en/">Node.js</a> (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)<br>（2）<a href="https://git-scm.com/">Git</a></p>
<a id="more"></a>

<p><strong>安装Node.js</strong><br>请查看我的文章：<a href="/2020/02/17/Node-js的安装">Node.js的安装与使用</a></p>
<p><strong>安装 Git</strong><br>请查看我的文章：<a href="/2020/02/17/Git的安装与使用">Git的安装与使用</a></p>
<p><strong>安装 Hexo</strong><br>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo，从桌面快捷方式打开Git Bash键入命令如下：<br><code>$ npm install -g hexo-cli</code></p>
<h3 id="使用Hexo"><a href="#使用Hexo" class="headerlink" title="使用Hexo"></a><strong>使用Hexo</strong></h3><p>（1）在本地磁盘的任意位置新建文件夹并设置名称，例如“我的博客网站”，该文件夹将作为以后所有的博客网站本地文件存放位置。<br>（2）进入该文件夹，鼠标右击，选择Git Bash Here打开Git，执行下列命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;  &#x2F;&#x2F;新建指定文件夹作为当前博客网站根目录</span><br><span class="line">$ cd &lt;folder&gt;  &#x2F;&#x2F;进入该文件夹</span><br><span class="line">$ npm install  &#x2F;&#x2F;同步相关依赖库</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init zazdream</span><br><span class="line">$ cd zazdream</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>执行命令完成后，指定文件夹的目录如下：<br>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p>
<p>目录解释:</p>
<p><code>_config.yml</code>：网站的配置信息。可以在此配置大部分的参数。<br><code>package.json</code>：应用程序的信息。<br><code>scaffolds</code>：模版文件夹。当新建文章时，Hexo 会根据 scaffold 来建立文件。<br><code>source</code>：资源文件夹。是存放用户资源的地方。<br><code>themes</code>：主题 文件夹。Hexo 会根据主题来生成静态页面。</p>
<p><strong>常用的命令</strong></p>
<p><code>$ hexo init [folder]</code><br>例如：<code>hexo init zazdream</code><br>释义：新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站</p>
<p><code>$ hexo new [layout] &lt;title&gt;</code><br>例如：<code>$ hexo new &quot;post title with whitespace</code><br>释义：新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来</p>
<p><code>$ hexo generate</code><br>简写：<code>$ hexo g</code><br>释义：生成静态文件</p>
<p><code>$ hexo server</code><br>释义：启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p><code>$ hexo deploy</code><br>简写：<code>$ hexo d</code><br>释义：部署网站。</p>
<p><code>$ hexo clean</code><br>释义：清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br>备注：在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<p><code>$ hexo version</code><br>释义：显示 Hexo 版本。</p>
<p><strong>查看更多关于Hexo的命令请访问：<a href="https://hexo.io/zh-cn/docs/commands">Hexo指令</a></strong></p>
<h3 id="打开我的Hexo博客网站"><a href="#打开我的Hexo博客网站" class="headerlink" title="打开我的Hexo博客网站"></a><strong>打开我的Hexo博客网站</strong></h3><p>第一步：接着上述操作，继续在控制台中输入命令。如果你不小心把控制台关掉了，可以直接打开博客网站的根目录<code>zazdream</code>(对照你自己的)，鼠标右击空白区域，选择<code>Git Bash Here</code>，输入命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g 回车</span><br><span class="line">hexo server 回车</span><br></pre></td></tr></table></figure>
<p>第二步：打开浏览器，在地址栏输入：<a href="http://localhost:4000/">http://localhost:4000/</a> ，即可访问你的博客网站主页。</p>
<p>到此初步的博客网站就算正式建成啦！</p>
]]></content>
      <categories>
        <category>博客网站的搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔一</title>
    <url>/2020/02/09/suibi1/</url>
    <content><![CDATA[<h2 id="刘禹锡非常经典的一首诗：没有过不去的事情，只有过不去的心情"><a href="#刘禹锡非常经典的一首诗：没有过不去的事情，只有过不去的心情" class="headerlink" title="刘禹锡非常经典的一首诗：没有过不去的事情，只有过不去的心情"></a>刘禹锡非常经典的一首诗：没有过不去的事情，只有过不去的心情</h2><p>&#160; &#160; &#160; &#160;很多人喜欢苏轼，是因为他在风雨中还能那般从容淡定，高歌“一蓑烟雨任平生”。其实在唐朝也有一位诗人像苏轼那般豁达，他就是人称“诗豪”的刘禹锡。刘禹锡和苏轼有很多相似之处，都是前半生春风得意，后半生一路贬谪。人生不幸，诗词兴，他们的很多诗词都是在逆境中写就的。其中的乐观洒脱之情鼓舞了无数人。</p>
<a id="more"></a>

<h3 id="《酬乐天扬州初逢席上见赠》"><a href="#《酬乐天扬州初逢席上见赠》" class="headerlink" title="《酬乐天扬州初逢席上见赠》"></a>《酬乐天扬州初逢席上见赠》</h3><p>&#160; &#160; &#160; 巴山楚水凄凉地，二十三年弃置身。<br>&#160; &#160; &#160; 怀旧空吟闻笛赋，到乡翻似烂柯人。<br>&#160; &#160; &#160; 沉舟侧畔千帆过，病树前头万木春。<br>&#160; &#160; &#160; 今日听君歌一曲，暂凭杯酒长精神。</p>
<p><img src="/2020/02/09/suibi1/001.jpg" alt></p>
<p>&#160; &#160; &#160; &#160;没有谁的人生是一帆风顺的，这世界上没有什么是过不去的，就看你想不想过去而已。当年柳宗元和刘禹锡一起被流放，柳宗元不到50岁便抑郁而亡，刘禹锡却在浮浮沉沉中活到了70岁。他们两人的境遇十分相似，结局却大不相同，归根究底便是心态问题。<br>&#160; &#160; &#160; &#160;这世上没有过不去的事情，只有过不去的心情。放下，看开，从容，淡定，也许我们的人生会更美好。不知你怎么看呢？</p>
<p><img src="/2020/02/09/suibi1/002.jpg" alt></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>诗词</tag>
      </tags>
  </entry>
  <entry>
    <title>我的初篇博客《Hello World》</title>
    <url>/2020/02/09/my-first-blog/</url>
    <content><![CDATA[<p>&#160; &#160; &#160; &#160;大家好，这是我的第一篇博客。<br>&#160; &#160; &#160; &#160;作为一名程序员，为了保持优良的传统，所以就从Hello World 开始吧。</p>
<h2 id="简单的介绍"><a href="#简单的介绍" class="headerlink" title="简单的介绍"></a>简单的介绍</h2><h3 id="关于名字"><a href="#关于名字" class="headerlink" title="关于名字"></a>关于名字</h3><p>&#160; &#160; &#160; &#160;我的网站名字是zazdream。思来想去，感觉梦想对于现在的我们来说是最重要的，引用匈牙利诗人乌尔曼的一句话：诗人年老的不是岁月，而是梦想的失去。</p>
<h3 id="我的日常"><a href="#我的日常" class="headerlink" title="我的日常"></a>我的日常</h3><p>&#160; &#160; &#160; &#160;目前主要从事网络工程相关的学习，是一名大三在校学生，业余时对计算机组装、网络安全比较感兴趣。闲来喜欢和朋友打打游戏，爱好是听音乐、做运动，梦想是成为一名合格、健康的网络工程师。</p>
<a id="more"></a>

<h2 id="为什么写博客"><a href="#为什么写博客" class="headerlink" title="为什么写博客"></a>为什么写博客</h2><ul>
<li><p>整体梳理相关技术，查漏补缺。</p>
</li>
<li><p>与他人相互沟通验证，提高个人能力。</p>
</li>
<li><p>做下技术备忘吧，经常发现有些看过的东西，后期想回忆时还要从新找。</p>
</li>
<li><p>希望能通过文章给他人带来一些帮助吧，为社会做点贡献。</p>
</li>
<li><p>提高个人沟通能力。</p>
<p>所以呢，小伙伴们跟我一起行动起来吧。</p>
</li>
</ul>
<h2 id="接下来打算写什么"><a href="#接下来打算写什么" class="headerlink" title="接下来打算写什么"></a>接下来打算写什么</h2><ul>
<li><p>围绕思科网络搭建过程中遇到的各种问题和解决方案。</p>
</li>
<li><p>围绕博客网站建设过程中遇到的各种问题和解决方案。</p>
</li>
<li><p>围绕电脑日常使用过程中遇到的问题和解决方案。</p>
</li>
<li><p>围绕各种PC端软件安装过程中遇到的问题和解决方案。</p>
<p>内容有点多，计划是一周写一篇吧，争取在半年内写完吧。<br>有些东西我也是刚接触，咱们就一起学习，共同进步吧。</p>
</li>
</ul>
<h2 id="推荐一本好书给大家看看"><a href="#推荐一本好书给大家看看" class="headerlink" title="推荐一本好书给大家看看"></a>推荐一本好书给大家看看</h2><p>&#160; &#160; &#160; &#160;以后打算没更新一篇博客就带着推荐一本好书给大家看看。<br>&#160; &#160; &#160; &#160;《方与圆》 作者：丁远峙</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>&#160; &#160; &#160; &#160;最后，希望各位小伙伴多多关注，多多指教！</p>
]]></content>
      <categories>
        <category>专业知识分享</category>
      </categories>
      <tags>
        <tag>初篇</tag>
      </tags>
  </entry>
</search>
